# AUTOGENERATED! DO NOT EDIT! File to edit: nbdev_nbs/mass_spec/match.ipynb (unless otherwise specified).

__all__ = ['mass_match']

# Cell

import numpy as np
import numba

@numba.njit
def mass_match(
    spec_masses:np.array,
    query_masses:np.array,
    Da_tols:np.array
)->np.array:
    """
    Matched query masses against sorted MS2/spec masses.
    Args:
        spec_masses (np.array): MS2 or spec masses, 1-D float array
        query_masses (np.array): query masses, n-D float array
        Da_tols (np.array): Da tolerance array, same shape as spec_mass

    Returns:
        np.array: np.array of int32, the shape is the same as query_masses.
          -1 means no peaks are matched for the query mass
    """
    idxes = np.searchsorted(spec_masses, query_masses)
    ret_indices = np.empty_like(query_masses, dtype=np.int32)
    # ret_indices[:] = -1
    for i,idx in np.ndenumerate(idxes):
        if abs(spec_masses[idx-1]-query_masses[i]) <= Da_tols[idx-1]:
            ret_indices[i] = idx-1
        elif idx == len(spec_masses):
            ret_indices[i] = -1
        elif abs(spec_masses[idx]-query_masses[i]) <= Da_tols[idx]:
            ret_indices[i] = idx
        else:
            ret_indices[i] = -1
    return ret_indices
