[
  {
    "objectID": "mass_spec/mass_spec.mass_calibration.html",
    "href": "mass_spec/mass_spec.mass_calibration.html",
    "title": "Mass calibration",
    "section": "",
    "text": "MassCalibratorForRT_KNN\n\n MassCalibratorForRT_KNN (n_neighbors=5)\n\nInitialize self. See help(type(self)) for accurate signature.\n\n\n\ncalibrate_one\n\n calibrate_one (start_end_shift, frag_df)\n\n\n\n\nget_fragment_median\n\n get_fragment_median (start_end_idxes,\n                      frag_df:pandas.core.frame.DataFrame)\n\n\npsm_df = pd.DataFrame({\n    'rt': [1.0,2.0,3.0,4.0,5.0],\n    'frag_start_idx': [0,1,3,4,6],\n    'frag_end_idx': [1,3,4,6,8],\n})\nfrag_df = pd.DataFrame({\n    'b': [1.0,2,3,4,5,6,7,8],\n    'y':[0.2,np.inf,2,2,4,5,8,9],\n})\ncalibrator = MassCalibratorForRT_KNN(1)\ncalibrator.fit(psm_df, frag_df)\nfrag_df = calibrator.calibrate(psm_df, frag_df)\nfrag_df\n\n\n\n\n\n  \n    \n      \n      b\n      y\n    \n  \n  \n    \n      0\n      0.4\n      -0.4\n    \n    \n      1\n      0.0\n      inf\n    \n    \n      2\n      1.0\n      0.0\n    \n    \n      3\n      1.0\n      -1.0\n    \n    \n      4\n      0.0\n      -1.0\n    \n    \n      5\n      1.0\n      0.0\n    \n    \n      6\n      -1.0\n      0.0\n    \n    \n      7\n      0.0\n      1.0"
  },
  {
    "objectID": "mass_spec/mass_spec.match.html",
    "href": "mass_spec/mass_spec.match.html",
    "title": "Peak matching functionalities",
    "section": "",
    "text": "match_profile_mz\n\n match_profile_mz (spec_mzs:numpy.ndarray, query_mzs:numpy.ndarray,\n                   spec_mz_tols:numpy.ndarray, spec_intens:numpy.ndarray)\n\nMatching query masses against sorted MS2/spec profile masses, only highest peaks are matched.\nArgs: spec_mzs (np.ndarray): MS2 or spec mz values, 1-D float array query_mzs (np.ndarray): query mz values, n-D float array spec_mz_tols (np.ndarray): Da tolerance array, same shape as spec_mzs\nReturns: np.ndarray: np.ndarray of int32, the shape is the same as query_mzs. -1 means no peaks are matched for the query mz\n\n\n\nmatch_centroid_mz\n\n match_centroid_mz (spec_mzs:numpy.ndarray, query_mzs:numpy.ndarray,\n                    spec_mz_tols:numpy.ndarray)\n\nMatching query masses against sorted MS2/spec centroid masses, only closest (minimal mass error) peaks are matched.\nArgs: spec_mzs (np.ndarray): MS2 or spec mz values, 1-D float array query_mzs (np.ndarray): query mz values, n-D float array spec_mz_tols (np.ndarray): Da tolerance array, same shape as spec_mzs\nReturns: np.ndarray: np.ndarray of int32, the shape is the same as query_mzs. -1 means no peaks are matched for the query mz\n\n\n\nmatch_one_raw_with_numba\n\n match_one_raw_with_numba (spec_idxes, frag_start_idxes, frag_end_idxes,\n                           all_frag_mzs, all_spec_mzs,\n                           all_spec_intensities, peak_start_idxes,\n                           peak_end_idxes, matched_intensities,\n                           matched_mz_errs, ppm, tol)\n\nInternel function to match fragment mz values to spectrum mz values. Matched_mz_errs[i] = np.inf if no peaks are matched.\n\n\n\nPepSpecMatch\n\n PepSpecMatch (charged_frag_types=['b_z1', 'b_z2', 'y_z1', 'y_z2',\n               'b_modloss_z1', 'b_modloss_z2', 'y_modloss_z1',\n               'y_modloss_z2'])\n\nInitialize self. See help(type(self)) for accurate signature."
  },
  {
    "objectID": "mass_spec/mass_spec.ms_reader.html",
    "href": "mass_spec/mass_spec.ms_reader.html",
    "title": "Basic spectrum file readers",
    "section": "",
    "text": "MSReaderProvider\n\n MSReaderProvider ()\n\nInitialize self. See help(type(self)) for accurate signature.\n\n\n\nMGFReader\n\n MGFReader ()\n\nInitialize self. See help(type(self)) for accurate signature.\n\n\n\nindex_ragged_list\n\n index_ragged_list (ragged_list:list)\n\nCreate lookup indices for a list of arrays for concatenation.\nArgs: value (list): Input list of arrays.\nReturns: indices: A numpy array with indices.\n\n\n\nis_pfind_mgf\n\n is_pfind_mgf (mgf)\n\n\n\n\nparse_pfind_scan_from_TITLE\n\n parse_pfind_scan_from_TITLE (pfind_title)\n\n\n\n\nfind_line\n\n find_line (lines, start)\n\n\n\n\nread_until\n\n read_until (file, until)\n\n\n\n\nAlphaPept_HDF_MS2_Reader\n\n AlphaPept_HDF_MS2_Reader ()\n\nInitialize self. See help(type(self)) for accurate signature.\n\n\n\nAlphaPept_HDF_MS1_Reader\n\n AlphaPept_HDF_MS1_Reader ()\n\nInitialize self. See help(type(self)) for accurate signature.\n\n\n\nMSReaderBase\n\n MSReaderBase ()\n\nInitialize self. See help(type(self)) for accurate signature.\n\n# #hide\n# import os\n# reader = ms2_reader_provider.get_reader('thermo')\n# if reader is not None:\n#     reader.load(os.path.expanduser('~/Workspace/Data/Thermo_iRT/iRT.raw'))\n#     scan_no = 3934\n#     masses, intens = reader.get_peaks(scan_no)\n#     assert len(masses)==(\n#         reader.spectrum_df.loc[scan_no,'peak_end_idx']\n#         -reader.spectrum_df.loc[scan_no,'peak_start_idx']\n#     )\n#     assert (np.diff(masses)>=0).all() #sorted\n#     display(reader.spectrum_df)\n\n\n# #hide\n# import os\n# reader = ms1_reader_provider.get_reader('thermo')\n# if reader is not None:\n#     reader.load(os.path.expanduser('~/Workspace/Data/Thermo_iRT/iRT.raw'))\n#     scan_no = 3931\n#     masses, intens = reader.get_peaks(scan_no)\n#     assert len(masses)==(\n#         reader.spectrum_df.loc[scan_no,'peak_end_idx']\n#         -reader.spectrum_df.loc[scan_no,'peak_start_idx']\n#     )\n#     assert (np.diff(masses)>=0).all() #sorted\n#     display(reader.spectrum_df)"
  },
  {
    "objectID": "utils.html#plotting-functions",
    "href": "utils.html#plotting-functions",
    "title": "Utils",
    "section": "Plotting functions",
    "text": "Plotting functions\n\n\nevaluate_linear_regression_plot\n\n evaluate_linear_regression_plot (df:pandas.core.frame.DataFrame,\n                                  x='rt_pred', y='rt_norm', ci=95,\n                                  n_sample=100000)\n\n\n\n\nevaluate_linear_regression\n\n evaluate_linear_regression (df:pandas.core.frame.DataFrame, x='rt_pred',\n                             y='rt_norm', ci=95, n_sample=10000000)"
  },
  {
    "objectID": "psm_frag_reader/psm_frag_reader.maxquant_frag_reader.html",
    "href": "psm_frag_reader/psm_frag_reader.maxquant_frag_reader.html",
    "title": "PSM Reader with fragments: MaxQuant msms.txt",
    "section": "",
    "text": "MaxQuantMSMSReader\n\n MaxQuantMSMSReader (frag_types=['b', 'y', 'b_modloss', 'y_modloss'],\n                     max_frag_charge=2, score_threshold=100, **kwargs)\n\nRead PSMs and fragments\n\n\n\nfilter_phos\n\n filter_phos (mq_df, prob)\n\n\n\n\nparse_phos_probs\n\n parse_phos_probs (mods, prob_seq, prob)"
  },
  {
    "objectID": "psm_frag_reader/psm_frag_reader.psm_frag_reader.html",
    "href": "psm_frag_reader/psm_frag_reader.psm_frag_reader.html",
    "title": "PSM reader with fragments",
    "section": "",
    "text": "PSMReader_w_FragBase\n\n PSMReader_w_FragBase (frag_types=['b', 'y', 'b_modloss', 'y_modloss'],\n                       max_frag_charge=2, **kwargs)\n\nRead PSMs and fragments\n\n\n\nPSM_w_FragReaderProvider\n\n PSM_w_FragReaderProvider ()\n\nInitialize self. See help(type(self)) for accurate signature."
  },
  {
    "objectID": "psm_frag_reader/psm_frag_reader.psmlabel_reader.html",
    "href": "psm_frag_reader/psm_frag_reader.psmlabel_reader.html",
    "title": "Legacy: psmlabel (pDeep) reader with fragments",
    "section": "",
    "text": "PSMLabelReader\n\n PSMLabelReader (frag_types=['b', 'y', 'b_modloss', 'y_modloss'],\n                 max_frag_charge=2, **kwargs)\n\nRead PSMs and fragments\n\n\n\nload_psmlabel_list\n\n load_psmlabel_list (psmlabel_list, nce_list, instrument_list,\n                     frag_types=['b', 'y', 'b_modloss', 'y_modloss'],\n                     frag_charge=2, include_mod_list=['Oxidation@M',\n                     'Phospho@S', 'Phospho@T', 'Phospho@Y',\n                     'Acetyl@Protein N-term'])"
  },
  {
    "objectID": "psm_frag_reader/psm_frag_reader.library_frag_reader.html",
    "href": "psm_frag_reader/psm_frag_reader.library_frag_reader.html",
    "title": "PSM reader with fragments: TSV lib",
    "section": "",
    "text": "SpectronautMSMSReader\n\n SpectronautMSMSReader (frag_types=['b', 'y', 'b_modloss', 'y_modloss'],\n                        max_frag_charge=2, **kwargs)\n\nRead PSMs and fragments"
  },
  {
    "objectID": "protein/protein.fasta.html",
    "href": "protein/protein.fasta.html",
    "title": "Predicting libraries from fasta or sequences",
    "section": "",
    "text": "PredictFastaSpecLib\n\n PredictFastaSpecLib\n                      (model_manager:peptdeep.pretrained_models.ModelManag\n                      er=None, charged_frag_types:list=['b_z1', 'b_z2',\n                      'y_z1', 'y_z2'], protease:str='trypsin',\n                      max_missed_cleavages:int=2,\n                      peptide_length_min:int=7, peptide_length_max:int=35,\n                      precursor_charge_min:int=2,\n                      precursor_charge_max:int=4,\n                      precursor_mz_min:float=200.0,\n                      precursor_mz_max:float=2000.0,\n                      var_mods:list=['Acetyl@Protein N-term',\n                      'Oxidation@M'], max_var_mod_num:int=2,\n                      fix_mods:list=['Carbamidomethyl@C'], decoy:str=None,\n                      I_to_L=False)\n\nBase spectral library in alphabase and alphapeptdeep.\nArgs: charged_frag_types (typing.List[str], optional): fragment types with charge. Defaults to [ ‘b_z1’,‘b_z2’,‘y_z1’, ‘y_z2’ ]. precursor_mz_min (int, optional): Use this to clip precursor df. Defaults to 400. precursor_mz_max (int, optional): Use this to clip precursor df. Defaults to 6000. decoy (str, optional): Decoy methods, could be “pseudo_reverse” or “diann”. Defaults to None.\nAttributes: precursor_df (pd.DataFrame): precursor dataframe. fragment_mz_df (pd.DataFrame): fragment m/z dataframe. fragment_intensity_df (pd.DataFrame): fragment intensity dataframe. charged_frag_types (list): same as charged_frag_types in Args. min_precursor_mz (float): same as precursor_mz_min in Args. max_precursor_mz (float): same as precursor_mz_max in Args. decoy (str): same as decoy in Args. key_numeric_columns (list of str): key numeric columns to be saved into library/precursor_df in the hdf file. Others will be saved into library/mod_seq_df instead.\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nmodel_manager\nModelManager\nNone\n\n\n\ncharged_frag_types\nlist\n[‘b_z1’, ‘b_z2’, ‘y_z1’, ‘y_z2’]\n\n\n\nprotease\nstr\ntrypsin\n\n\n\nmax_missed_cleavages\nint\n2\n\n\n\npeptide_length_min\nint\n7\n\n\n\npeptide_length_max\nint\n35\n\n\n\nprecursor_charge_min\nint\n2\n\n\n\nprecursor_charge_max\nint\n4\n\n\n\nprecursor_mz_min\nfloat\n200.0\n\n\n\nprecursor_mz_max\nfloat\n2000.0\n\n\n\nvar_mods\nlist\n[‘Acetyl@Protein N-term’, ‘Oxidation@M’]\n\n\n\nmax_var_mod_num\nint\n2\n\n\n\nfix_mods\nlist\n[‘Carbamidomethyl@C’]\n\n\n\ndecoy\nstr\nNone\nor pseudo_reverse or diann\n\n\nI_to_L\nbool\nFalse\n\n\n\n\n\n_lib = PredictFastaSpecLib(None, I_to_L=False, decoy='pseudo_reverse')\nprot1 = 'MABCDEKFGHIJKLMNOPQRST'\nprot2 = 'FGHIJKLMNOPQR'\nprotein_dict = {\n    'xx': {\n        'protein_id': 'xx',\n        'gene_name': '',\n        'sequence': prot1\n    },\n    'yy': {\n        'protein_id': 'yy',\n        'gene_name': 'gene',\n        'sequence': prot2\n    }\n}\n_lib.get_peptides_from_protein_dict(protein_dict)\n_lib.precursor_df\n\n\n\n\n\n  \n    \n      \n      sequence\n      protein_idxes\n      miss_cleavage\n      is_prot_nterm\n      is_prot_cterm\n      mods\n      mod_sites\n      nAA\n    \n  \n  \n    \n      0\n      MABCDEK\n      0\n      0\n      True\n      False\n      \n      \n      7\n    \n    \n      1\n      LMNOPQR\n      0;1\n      0\n      False\n      True\n      \n      \n      7\n    \n    \n      2\n      LMNOPQRST\n      0\n      1\n      False\n      True\n      \n      \n      9\n    \n    \n      3\n      ABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      \n      \n      12\n    \n    \n      4\n      MABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      \n      \n      13\n    \n    \n      5\n      FGHIJKLMNOPQR\n      0;1\n      1\n      True\n      True\n      \n      \n      13\n    \n    \n      6\n      FGHIJKLMNOPQRST\n      0\n      2\n      False\n      True\n      \n      \n      15\n    \n    \n      7\n      ABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      \n      \n      19\n    \n    \n      8\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      \n      \n      20\n    \n  \n\n\n\n\n\n_lib.protein_df\n\n\n\n\n\n  \n    \n      \n      protein_id\n      gene_name\n      sequence\n    \n  \n  \n    \n      0\n      xx\n      \n      MABCDEKFGHIJKLMNOPQRST\n    \n    \n      1\n      yy\n      gene\n      FGHIJKLMNOPQR\n    \n  \n\n\n\n\n\n_lib.append_protein_name()\nassert 'proteins' in _lib.precursor_df.columns\n_lib.precursor_df\n\n\n\n\n\n  \n    \n      \n      sequence\n      protein_idxes\n      miss_cleavage\n      is_prot_nterm\n      is_prot_cterm\n      mods\n      mod_sites\n      nAA\n      proteins\n      genes\n    \n  \n  \n    \n      0\n      MABCDEK\n      0\n      0\n      True\n      False\n      \n      \n      7\n      xx\n      \n    \n    \n      1\n      LMNOPQR\n      0;1\n      0\n      False\n      True\n      \n      \n      7\n      xx;yy\n      gene\n    \n    \n      2\n      LMNOPQRST\n      0\n      1\n      False\n      True\n      \n      \n      9\n      xx\n      \n    \n    \n      3\n      ABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      \n      \n      12\n      xx\n      \n    \n    \n      4\n      MABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      \n      \n      13\n      xx\n      \n    \n    \n      5\n      FGHIJKLMNOPQR\n      0;1\n      1\n      True\n      True\n      \n      \n      13\n      xx;yy\n      gene\n    \n    \n      6\n      FGHIJKLMNOPQRST\n      0\n      2\n      False\n      True\n      \n      \n      15\n      xx\n      \n    \n    \n      7\n      ABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      \n      \n      19\n      xx\n      \n    \n    \n      8\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      \n      \n      20\n      xx\n      \n    \n  \n\n\n\n\n\n_lib.add_modifications()\n_lib.precursor_df\n\n\n\n\n\n  \n    \n      \n      sequence\n      protein_idxes\n      miss_cleavage\n      is_prot_nterm\n      is_prot_cterm\n      mods\n      mod_sites\n      nAA\n      proteins\n      genes\n    \n  \n  \n    \n      0\n      MABCDEK\n      0\n      0\n      True\n      False\n      Carbamidomethyl@C;Oxidation@M\n      4;1\n      7\n      xx\n      \n    \n    \n      1\n      MABCDEK\n      0\n      0\n      True\n      False\n      Carbamidomethyl@C\n      4\n      7\n      xx\n      \n    \n    \n      2\n      MABCDEK\n      0\n      0\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term;Oxidat...\n      4;0;1\n      7\n      xx\n      \n    \n    \n      3\n      MABCDEK\n      0\n      0\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term\n      4;0\n      7\n      xx\n      \n    \n    \n      4\n      LMNOPQR\n      0;1\n      0\n      False\n      True\n      Oxidation@M\n      2\n      7\n      xx;yy\n      gene\n    \n    \n      5\n      LMNOPQR\n      0;1\n      0\n      False\n      True\n      \n      \n      7\n      xx;yy\n      gene\n    \n    \n      6\n      LMNOPQRST\n      0\n      1\n      False\n      True\n      Oxidation@M\n      2\n      9\n      xx\n      \n    \n    \n      7\n      LMNOPQRST\n      0\n      1\n      False\n      True\n      \n      \n      9\n      xx\n      \n    \n    \n      8\n      ABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      Carbamidomethyl@C\n      3\n      12\n      xx\n      \n    \n    \n      9\n      ABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term\n      3;0\n      12\n      xx\n      \n    \n    \n      10\n      MABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      Carbamidomethyl@C;Oxidation@M\n      4;1\n      13\n      xx\n      \n    \n    \n      11\n      MABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      Carbamidomethyl@C\n      4\n      13\n      xx\n      \n    \n    \n      12\n      MABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term;Oxidat...\n      4;0;1\n      13\n      xx\n      \n    \n    \n      13\n      MABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term\n      4;0\n      13\n      xx\n      \n    \n    \n      14\n      FGHIJKLMNOPQR\n      0;1\n      1\n      True\n      True\n      Oxidation@M\n      8\n      13\n      xx;yy\n      gene\n    \n    \n      15\n      FGHIJKLMNOPQR\n      0;1\n      1\n      True\n      True\n      \n      \n      13\n      xx;yy\n      gene\n    \n    \n      16\n      FGHIJKLMNOPQR\n      0;1\n      1\n      True\n      True\n      Acetyl@Protein N-term;Oxidation@M\n      0;8\n      13\n      xx;yy\n      gene\n    \n    \n      17\n      FGHIJKLMNOPQR\n      0;1\n      1\n      True\n      True\n      Acetyl@Protein N-term\n      0\n      13\n      xx;yy\n      gene\n    \n    \n      18\n      FGHIJKLMNOPQRST\n      0\n      2\n      False\n      True\n      Oxidation@M\n      8\n      15\n      xx\n      \n    \n    \n      19\n      FGHIJKLMNOPQRST\n      0\n      2\n      False\n      True\n      \n      \n      15\n      xx\n      \n    \n    \n      20\n      ABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Oxidation@M\n      3;14\n      19\n      xx\n      \n    \n    \n      21\n      ABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C\n      3\n      19\n      xx\n      \n    \n    \n      22\n      ABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term;Oxidat...\n      3;0;14\n      19\n      xx\n      \n    \n    \n      23\n      ABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term\n      3;0\n      19\n      xx\n      \n    \n    \n      24\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Oxidation@M\n      4;1\n      20\n      xx\n      \n    \n    \n      25\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Oxidation@M\n      4;15\n      20\n      xx\n      \n    \n    \n      26\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Oxidation@M;Oxidation@M\n      4;1;15\n      20\n      xx\n      \n    \n    \n      27\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C\n      4\n      20\n      xx\n      \n    \n    \n      28\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term;Oxidat...\n      4;0;1\n      20\n      xx\n      \n    \n    \n      29\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term;Oxidat...\n      4;0;15\n      20\n      xx\n      \n    \n    \n      30\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term;Oxidat...\n      4;0;1;15\n      20\n      xx\n      \n    \n    \n      31\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term\n      4;0\n      20\n      xx\n      \n    \n  \n\n\n\n\n\n_lib.add_additional_modifications(['Phospho@S','Phospho@T'])\nassert _lib.precursor_df.mods.str.contains('Phospho').any()\n_lib.precursor_df\n\n\n\n\n\n  \n    \n      \n      sequence\n      protein_idxes\n      miss_cleavage\n      is_prot_nterm\n      is_prot_cterm\n      mods\n      mod_sites\n      nAA\n      proteins\n      genes\n    \n  \n  \n    \n      0\n      MABCDEK\n      0\n      0\n      True\n      False\n      Carbamidomethyl@C;Oxidation@M\n      4;1\n      7\n      xx\n      \n    \n    \n      1\n      MABCDEK\n      0\n      0\n      True\n      False\n      Carbamidomethyl@C\n      4\n      7\n      xx\n      \n    \n    \n      2\n      MABCDEK\n      0\n      0\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term;Oxidat...\n      4;0;1\n      7\n      xx\n      \n    \n    \n      3\n      MABCDEK\n      0\n      0\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term\n      4;0\n      7\n      xx\n      \n    \n    \n      4\n      LMNOPQR\n      0;1\n      0\n      False\n      True\n      Oxidation@M\n      2\n      7\n      xx;yy\n      gene\n    \n    \n      5\n      LMNOPQR\n      0;1\n      0\n      False\n      True\n      \n      \n      7\n      xx;yy\n      gene\n    \n    \n      6\n      LMNOPQRST\n      0\n      1\n      False\n      True\n      Oxidation@M;Phospho@S\n      2;8\n      9\n      xx\n      \n    \n    \n      7\n      LMNOPQRST\n      0\n      1\n      False\n      True\n      Oxidation@M;Phospho@T\n      2;9\n      9\n      xx\n      \n    \n    \n      8\n      LMNOPQRST\n      0\n      1\n      False\n      True\n      Oxidation@M\n      2\n      9\n      xx\n      \n    \n    \n      9\n      LMNOPQRST\n      0\n      1\n      False\n      True\n      Phospho@S\n      8\n      9\n      xx\n      \n    \n    \n      10\n      LMNOPQRST\n      0\n      1\n      False\n      True\n      Phospho@T\n      9\n      9\n      xx\n      \n    \n    \n      11\n      LMNOPQRST\n      0\n      1\n      False\n      True\n      \n      \n      9\n      xx\n      \n    \n    \n      12\n      ABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      Carbamidomethyl@C\n      3\n      12\n      xx\n      \n    \n    \n      13\n      ABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term\n      3;0\n      12\n      xx\n      \n    \n    \n      14\n      MABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      Carbamidomethyl@C;Oxidation@M\n      4;1\n      13\n      xx\n      \n    \n    \n      15\n      MABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      Carbamidomethyl@C\n      4\n      13\n      xx\n      \n    \n    \n      16\n      MABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term;Oxidat...\n      4;0;1\n      13\n      xx\n      \n    \n    \n      17\n      MABCDEKFGHIJK\n      0\n      1\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term\n      4;0\n      13\n      xx\n      \n    \n    \n      18\n      FGHIJKLMNOPQR\n      0;1\n      1\n      True\n      True\n      Oxidation@M\n      8\n      13\n      xx;yy\n      gene\n    \n    \n      19\n      FGHIJKLMNOPQR\n      0;1\n      1\n      True\n      True\n      \n      \n      13\n      xx;yy\n      gene\n    \n    \n      20\n      FGHIJKLMNOPQR\n      0;1\n      1\n      True\n      True\n      Acetyl@Protein N-term;Oxidation@M\n      0;8\n      13\n      xx;yy\n      gene\n    \n    \n      21\n      FGHIJKLMNOPQR\n      0;1\n      1\n      True\n      True\n      Acetyl@Protein N-term\n      0\n      13\n      xx;yy\n      gene\n    \n    \n      22\n      FGHIJKLMNOPQRST\n      0\n      2\n      False\n      True\n      Oxidation@M;Phospho@S\n      8;14\n      15\n      xx\n      \n    \n    \n      23\n      FGHIJKLMNOPQRST\n      0\n      2\n      False\n      True\n      Oxidation@M;Phospho@T\n      8;15\n      15\n      xx\n      \n    \n    \n      24\n      FGHIJKLMNOPQRST\n      0\n      2\n      False\n      True\n      Oxidation@M\n      8\n      15\n      xx\n      \n    \n    \n      25\n      FGHIJKLMNOPQRST\n      0\n      2\n      False\n      True\n      Phospho@S\n      14\n      15\n      xx\n      \n    \n    \n      26\n      FGHIJKLMNOPQRST\n      0\n      2\n      False\n      True\n      Phospho@T\n      15\n      15\n      xx\n      \n    \n    \n      27\n      FGHIJKLMNOPQRST\n      0\n      2\n      False\n      True\n      \n      \n      15\n      xx\n      \n    \n    \n      28\n      ABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Oxidation@M\n      3;14\n      19\n      xx\n      \n    \n    \n      29\n      ABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C\n      3\n      19\n      xx\n      \n    \n    \n      30\n      ABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term;Oxidat...\n      3;0;14\n      19\n      xx\n      \n    \n    \n      31\n      ABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term\n      3;0\n      19\n      xx\n      \n    \n    \n      32\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Oxidation@M\n      4;1\n      20\n      xx\n      \n    \n    \n      33\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Oxidation@M\n      4;15\n      20\n      xx\n      \n    \n    \n      34\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Oxidation@M;Oxidation@M\n      4;1;15\n      20\n      xx\n      \n    \n    \n      35\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C\n      4\n      20\n      xx\n      \n    \n    \n      36\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term;Oxidat...\n      4;0;1\n      20\n      xx\n      \n    \n    \n      37\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term;Oxidat...\n      4;0;15\n      20\n      xx\n      \n    \n    \n      38\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term;Oxidat...\n      4;0;1;15\n      20\n      xx\n      \n    \n    \n      39\n      MABCDEKFGHIJKLMNOPQR\n      0\n      2\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term\n      4;0\n      20\n      xx\n      \n    \n  \n\n\n\n\n\nfrom peptdeep.pretrained_models import ModelManager\nmodel_mgr = ModelManager()\nmodel_mgr.load_installed_models()\nmodel_mgr.verbose = False\n_lib = PredictFastaSpecLib(\n    model_mgr, I_to_L=False, \n    decoy='pseudo_reverse'\n)\nprot1 = 'MACDESTYKBKFGHIKLMNPQRST'\nprot2 = 'FGHIKLMNPQR'\nprotein_dict = {\n    'xx': {\n        'protein_id': 'xx',\n        'sequence': prot1\n    },\n    'yy': {\n        'protein_id': 'yy',\n        'sequence': prot2\n    }\n}\n_lib.import_and_process_protein_dict(protein_dict)\n_lib.predict_all()\nassert (_lib.precursor_df.decoy==1).any()\nassert ('MACDESTY'[::-1]+'K') in _lib.precursor_df.sequence.values\nassert 'isotope_apex_index' in _lib.precursor_df.columns\nassert 'isotope_apex_intensity' in _lib.precursor_df.columns\nassert ~_lib.precursor_df.sequence.str.contains('B').any()\n_lib.precursor_df\n\n\n\n\n\n  \n    \n      \n      sequence\n      protein_idxes\n      miss_cleavage\n      is_prot_nterm\n      is_prot_cterm\n      mods\n      mod_sites\n      nAA\n      decoy\n      charge\n      precursor_mz\n      isotope_intensity_m1\n      isotope_intensity_m2\n      isotope_apex_intensity\n      isotope_apex_index\n      isotope_mz_m1\n      isotope_mz_m2\n      isotope_apex_mz\n      rt_pred\n      rt_norm_pred\n      ccs_pred\n      mobility_pred\n      nce\n      instrument\n      frag_end_idx\n      frag_start_idx\n    \n  \n  \n    \n      0\n      LMNPQRST\n      0\n      1\n      False\n      True\n      Oxidation@M\n      2\n      8\n      0\n      2\n      481.739834\n      0.478814\n      0.183746\n      1.0\n      0\n      482.241484\n      482.743134\n      481.739834\n      0.021263\n      0.021263\n      318.941895\n      0.785035\n      30.0\n      Lumos\n      7\n      0\n    \n    \n      1\n      LMNPQRST\n      0\n      1\n      False\n      True\n      Oxidation@M\n      2\n      8\n      0\n      3\n      321.495648\n      0.478814\n      0.183746\n      1.0\n      0\n      321.830081\n      322.164515\n      321.495648\n      0.021263\n      0.021263\n      374.614014\n      0.614719\n      30.0\n      Lumos\n      14\n      7\n    \n    \n      2\n      LMNPQRST\n      0\n      1\n      False\n      True\n      Oxidation@M\n      2\n      8\n      0\n      4\n      241.373555\n      0.478814\n      0.183746\n      1.0\n      0\n      241.624380\n      241.875205\n      241.373555\n      0.021263\n      0.021263\n      430.954041\n      0.530385\n      30.0\n      Lumos\n      21\n      14\n    \n    \n      3\n      LMNPQRST\n      0\n      1\n      False\n      True\n      \n      \n      8\n      0\n      2\n      473.742377\n      0.478433\n      0.181509\n      1.0\n      0\n      474.244027\n      474.745677\n      473.742377\n      0.092409\n      0.092409\n      317.660065\n      0.781693\n      30.0\n      Lumos\n      28\n      21\n    \n    \n      4\n      LMNPQRST\n      0\n      1\n      False\n      True\n      \n      \n      8\n      0\n      3\n      316.164010\n      0.478433\n      0.181509\n      1.0\n      0\n      316.498443\n      316.832877\n      316.164010\n      0.092409\n      0.092409\n      374.240265\n      0.613959\n      30.0\n      Lumos\n      35\n      28\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      79\n      FGHIKLMNPQRST\n      0\n      2\n      False\n      True\n      Oxidation@M\n      7\n      13\n      0\n      3\n      515.604920\n      0.828432\n      0.420789\n      1.0\n      0\n      515.939354\n      516.273787\n      515.604920\n      0.218114\n      0.218114\n      473.192261\n      0.780636\n      30.0\n      Lumos\n      696\n      684\n    \n    \n      80\n      FGHIKLMNPQRST\n      0\n      2\n      False\n      True\n      Oxidation@M\n      7\n      13\n      0\n      4\n      386.955509\n      0.828432\n      0.420789\n      1.0\n      0\n      387.206334\n      387.457159\n      386.955509\n      0.218114\n      0.218114\n      605.540649\n      0.749235\n      30.0\n      Lumos\n      708\n      696\n    \n    \n      81\n      FGHIKLMNPQRST\n      0\n      2\n      False\n      True\n      \n      \n      13\n      0\n      2\n      764.906285\n      0.828051\n      0.418418\n      1.0\n      0\n      765.407935\n      765.909585\n      764.906285\n      0.252718\n      0.252718\n      416.934204\n      1.031637\n      30.0\n      Lumos\n      720\n      708\n    \n    \n      82\n      FGHIKLMNPQRST\n      0\n      2\n      False\n      True\n      \n      \n      13\n      0\n      3\n      510.273282\n      0.828051\n      0.418418\n      1.0\n      0\n      510.607715\n      510.942149\n      510.273282\n      0.252718\n      0.252718\n      477.759918\n      0.788098\n      30.0\n      Lumos\n      732\n      720\n    \n    \n      83\n      FGHIKLMNPQRST\n      0\n      2\n      False\n      True\n      \n      \n      13\n      0\n      4\n      382.956781\n      0.828051\n      0.418418\n      1.0\n      0\n      383.207606\n      383.458431\n      382.956781\n      0.252718\n      0.252718\n      610.309998\n      0.755066\n      30.0\n      Lumos\n      744\n      732\n    \n  \n\n84 rows × 26 columns\n\n\n\n\n_lib.import_and_process_protein_dict(protein_dict)\n_lib.add_peptide_labeling({\n    'light': ['Dimethyl@Any N-term','Dimethyl@K'],\n    'heavy': ['Dimethyl:2H(6)13C(2)@Any N-term','Dimethyl:2H(6)13C(2)@K'],\n})\n_lib.predict_all()\nassert (_lib.precursor_df.decoy==1).any()\nassert ('MACDESTY'[::-1]+'K') in _lib.precursor_df.sequence.values\nassert 'isotope_apex_index' in _lib.precursor_df.columns\nassert 'isotope_apex_intensity' in _lib.precursor_df.columns\nassert ~_lib.precursor_df.sequence.str.contains('B').any()\n_lib.precursor_df\n\n2022-06-03 14:08:40> Calculating precursor isotope distributions ...\n2022-06-03 14:08:41> Predicting RT/IM/MS2 ...\n2022-06-03 14:08:42> End Predicting RT/IM/MS2\n\n\n\n\n\n\n  \n    \n      \n      sequence\n      protein_idxes\n      miss_cleavage\n      is_prot_nterm\n      is_prot_cterm\n      mods\n      mod_sites\n      nAA\n      decoy\n      charge\n      ...\n      isotope_mz_m2\n      isotope_apex_mz\n      rt_pred\n      rt_norm_pred\n      ccs_pred\n      mobility_pred\n      frag_end_idx\n      nce\n      instrument\n      frag_start_idx\n    \n  \n  \n    \n      0\n      LMNPQRST\n      0\n      1\n      False\n      True\n      Oxidation@M;Dimethyl@Any N-term\n      2;0\n      8\n      0\n      2\n      ...\n      496.758784\n      495.755484\n      0.242660\n      0.242660\n      345.390900\n      0.850475\n      7\n      30\n      Lumos\n      0\n    \n    \n      1\n      YTSEDCAK\n      0\n      0\n      True\n      False\n      Carbamidomethyl@C;Acetyl@Protein N-term;Dimeth...\n      6;0;8\n      8\n      1\n      2\n      ...\n      527.246625\n      526.243325\n      0.106988\n      0.106988\n      347.019012\n      0.855165\n      14\n      30\n      Lumos\n      7\n    \n    \n      2\n      YTSEDCAK\n      0\n      0\n      True\n      False\n      Carbamidomethyl@C;Dimethyl:2H(6)13C(2)@Any N-t...\n      6;0;8\n      8\n      1\n      4\n      ...\n      262.643227\n      262.141577\n      0.009153\n      0.009153\n      459.639069\n      0.566321\n      21\n      30\n      Lumos\n      14\n    \n    \n      3\n      YTSEDCAK\n      0\n      0\n      True\n      False\n      Carbamidomethyl@C;Dimethyl:2H(6)13C(2)@Any N-t...\n      6;0;8\n      8\n      1\n      2\n      ...\n      524.279178\n      523.275878\n      0.009153\n      0.009153\n      331.465332\n      0.816775\n      28\n      30\n      Lumos\n      21\n    \n    \n      4\n      SRQPNMLT\n      0\n      1\n      False\n      True\n      Dimethyl:2H(6)13C(2)@Any N-term\n      0\n      8\n      1\n      4\n      ...\n      246.895394\n      246.393744\n      0.152593\n      0.152593\n      425.942719\n      0.524368\n      35\n      30\n      Lumos\n      28\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      163\n      SRQPNMLKIHGFT\n      0\n      2\n      False\n      True\n      Oxidation@M;Dimethyl@Any N-term;Dimethyl@K\n      6;0;8\n      13\n      1\n      4\n      ...\n      401.472809\n      400.971159\n      0.468698\n      0.468698\n      574.154480\n      0.710622\n      1440\n      30\n      Lumos\n      1428\n    \n    \n      164\n      SRQPNMLKIHGFT\n      0\n      2\n      False\n      True\n      Oxidation@M;Dimethyl@Any N-term;Dimethyl@K\n      6;0;8\n      13\n      1\n      3\n      ...\n      534.961320\n      534.292454\n      0.468698\n      0.468698\n      482.796692\n      0.796729\n      1452\n      30\n      Lumos\n      1440\n    \n    \n      165\n      SRQPNMLKIHGFT\n      0\n      2\n      False\n      True\n      Oxidation@M;Dimethyl@Any N-term;Dimethyl@K\n      6;0;8\n      13\n      1\n      2\n      ...\n      801.938342\n      800.935042\n      0.468698\n      0.468698\n      428.150726\n      1.059819\n      1464\n      30\n      Lumos\n      1452\n    \n    \n      166\n      FGHIKLMNPQRST\n      0\n      2\n      False\n      True\n      Dimethyl:2H(6)13C(2)@Any N-term;Dimethyl:2H(6)...\n      0;5\n      13\n      0\n      3\n      ...\n      534.992596\n      534.323729\n      0.206957\n      0.206957\n      478.660187\n      0.789903\n      1476\n      30\n      Lumos\n      1464\n    \n    \n      167\n      FGHIKLMNPQRST\n      0\n      2\n      False\n      True\n      Dimethyl:2H(6)13C(2)@Any N-term;Dimethyl:2H(6)...\n      0;5\n      13\n      0\n      4\n      ...\n      401.496266\n      400.994616\n      0.206957\n      0.206957\n      605.993347\n      0.750029\n      1488\n      30\n      Lumos\n      1476\n    \n  \n\n168 rows × 27 columns"
  },
  {
    "objectID": "spec_lib/spec_lib.translate.html",
    "href": "spec_lib/spec_lib.translate.html",
    "title": "Translate peptdeep spectral libraries into other formats (e.g. TSV)",
    "section": "",
    "text": "create_modified_sequence\n\n create_modified_sequence (df_items:Tuple, translate_mod_dict:dict=None,\n                           mod_sep='()')\n\nTranslate (sequence, mods, mod_sites) into a modified sequence. Used by df.apply(). For example, ('ABCDEFG','Mod1@A;Mod2@E','1;5')->_A[Mod1@A]BCDE[Mod2@E]FG_. Args: df_items (List): must be (sequence, mods, mod_sites) translate_mod_dict (dict): A dict to map alpha modification names to other software mod_sep (str): ‘[]’ or ‘()’, default ‘()’\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndf_items\ntyping.Tuple\n\nmust be (‘sequence’,‘mods’,‘mod_sites’)\n\n\ntranslate_mod_dict\ndict\nNone\n\n\n\nmod_sep\nstr\n()\n\n\n\n\n\ndf = pd.DataFrame()\ndf['sequence'] = ['ACDEFGHIK']*10\ndf['mods'] = ['ModNterm;ModB@G;ModCterm;ModA@C']*10\ndf['mod_sites'] = ['0;6;-1;2']*10\ndf[['sequence','mods','mod_sites']].apply(create_modified_sequence, axis=1)\n\n0    _(ModNterm)AC(ModA@C)DEFG(ModB@G)HIK_(ModCterm)\n1    _(ModNterm)AC(ModA@C)DEFG(ModB@G)HIK_(ModCterm)\n2    _(ModNterm)AC(ModA@C)DEFG(ModB@G)HIK_(ModCterm)\n3    _(ModNterm)AC(ModA@C)DEFG(ModB@G)HIK_(ModCterm)\n4    _(ModNterm)AC(ModA@C)DEFG(ModB@G)HIK_(ModCterm)\n5    _(ModNterm)AC(ModA@C)DEFG(ModB@G)HIK_(ModCterm)\n6    _(ModNterm)AC(ModA@C)DEFG(ModB@G)HIK_(ModCterm)\n7    _(ModNterm)AC(ModA@C)DEFG(ModB@G)HIK_(ModCterm)\n8    _(ModNterm)AC(ModA@C)DEFG(ModB@G)HIK_(ModCterm)\n9    _(ModNterm)AC(ModA@C)DEFG(ModB@G)HIK_(ModCterm)\ndtype: object\n\n\n\nassert create_modified_sequence(('ACDEFGHIK','ModNterm;ModB@G;ModCterm;ModA@C','0;6;-1;2'), mod_sep='[]')=='_[ModNterm]AC[ModA@C]DEFG[ModB@G]HIK_[ModCterm]'\n\n\nassert create_modified_sequence(\n    ('ACDEFGHIK','ModNterm;ModB@G;ModCterm;ModA@C','0;6;-1;2'),\n    {'ModNterm':'Mod(Nterm)', 'ModCterm':'Mod(Cterm)', 'ModA@C':'ModA(C)', 'ModB@G':'ModB(G)'},\n    mod_sep='()'\n) == '_(Mod(Nterm))AC(ModA(C))DEFG(ModB(G))HIK_(Mod(Cterm))'\n\n\n\n\ntranslate_to_tsv\n\n translate_to_tsv\n                   (speclib:alphabase.spectral_library.library_base.SpecLi\n                   bBase, tsv:str, keep_k_highest_fragments:int=12,\n                   min_frag_mz:float=200, max_frag_mz:float=2000,\n                   min_frag_intensity:float=0.01, min_frag_nAA:int=0,\n                   batch_size:int=100000,\n                   translate_mod_dict:dict={'GlyGly@K': 'GlyGly',\n                   '15N-oxobutanoic@C^Any N-term': '15N-oxobutanoic',\n                   '15N-oxobutanoic@S^Protein N-term': '15N-oxobutanoic',\n                   '15N-oxobutanoic@T^Protein N-term': '15N-oxobutanoic',\n                   '2-dimethylsuccinyl@C': '2-dimethylsuccinyl',\n                   '2-monomethylsuccinyl@C': '2-monomethylsuccinyl',\n                   '2-nitrobenzyl@Y': '2-nitrobenzyl', '2-succinyl@C':\n                   '2-succinyl', '2HPG@R': '2HPG', '3-deoxyglucosone@R':\n                   '3-deoxyglucosone', '3-phosphoglyceryl@K':\n                   '3-phosphoglyceryl', '3sulfo@Any N-term': '3sulfo',\n                   '4-ONE+Delta:H(-2)O(-1)@C': '4-ONE+Delta:H(-2)O(-1)',\n                   '4-ONE+Delta:H(-2)O(-1)@H': '4-ONE+Delta:H(-2)O(-1)',\n                   '4-ONE+Delta:H(-2)O(-1)@K': '4-ONE+Delta:H(-2)O(-1)',\n                   '4-ONE@C': '4-ONE', '4-ONE@H': '4-ONE', '4-ONE@K':\n                   '4-ONE', '4AcAllylGal@C': '4AcAllylGal', 'ADP-\n                   Ribosyl@C': 'ADP-Ribosyl', 'ADP-Ribosyl@D': 'ADP-\n                   Ribosyl', 'ADP-Ribosyl@E': 'ADP-Ribosyl', 'ADP-\n                   Ribosyl@K': 'ADP-Ribosyl', 'ADP-Ribosyl@N': 'ADP-\n                   Ribosyl', 'ADP-Ribosyl@R': 'ADP-Ribosyl', 'ADP-\n                   Ribosyl@S': 'ADP-Ribosyl', 'ADP-Ribosyl@T': 'ADP-\n                   Ribosyl', 'AEBS@H': 'AEBS', 'AEBS@K': 'AEBS',\n                   'AEBS@Protein N-term': 'AEBS', 'AEBS@S': 'AEBS',\n                   'AEBS@Y': 'AEBS', 'AEC-MAEC:2H(4)@S': 'AEC-MAEC:2H(4)',\n                   'AEC-MAEC:2H(4)@T': 'AEC-MAEC:2H(4)', 'AEC-MAEC@S':\n                   'AEC-MAEC', 'AEC-MAEC@T': 'AEC-MAEC',\n                   'AFB1_Dialdehyde@K': 'AFB1_Dialdehyde', 'AHA-Alkyne-\n                   KDDDD@M': 'AHA-Alkyne-KDDDD', 'AHA-Alkyne@M': 'AHA-\n                   Alkyne', 'AHA-SS@M': 'AHA-SS', 'AHA-SS_CAM@M': 'AHA-\n                   SS_CAM', 'AMTzHexNAc2@N': 'AMTzHexNAc2',\n                   'AMTzHexNAc2@S': 'AMTzHexNAc2', 'AMTzHexNAc2@T':\n                   'AMTzHexNAc2', 'AROD@C': 'AROD', 'AccQTag@Any N-term':\n                   'AccQTag', 'AccQTag@K': 'AccQTag', 'Acetyl:13C(2)@K':\n                   'Acetyl:13C(2)', 'Acetyl:13C(2)@Protein N-term':\n                   'Acetyl:13C(2)', 'Acetyl:2H(3)@Any N-term':\n                   'Acetyl:2H(3)', 'Acetyl:2H(3)@H': 'Acetyl:2H(3)',\n                   'Acetyl:2H(3)@K': 'Acetyl:2H(3)', 'Acetyl:2H(3)@Protein\n                   N-term': 'Acetyl:2H(3)', 'Acetyl:2H(3)@S':\n                   'Acetyl:2H(3)', 'Acetyl:2H(3)@T': 'Acetyl:2H(3)',\n                   'Acetyl:2H(3)@Y': 'Acetyl:2H(3)', 'Acetyl@Any N-term':\n                   'Acetyl', 'Acetyl@C': 'Acetyl', 'Acetyl@H': 'Acetyl',\n                   'Acetyl@K': 'Acetyl', 'Acetyl@Protein N-term':\n                   'Acetyl', 'Acetyl@R': 'Acetyl', 'Acetyl@S': 'Acetyl',\n                   'Acetyl@T': 'Acetyl', 'Acetyl@Y': 'Acetyl',\n                   'Acetyldeoxyhypusine@K': 'Acetyldeoxyhypusine',\n                   'Acetylhypusine@K': 'Acetylhypusine', 'Ahx2+Hsl@Any\n                   C-term': 'Ahx2+Hsl', 'Ala->Arg@A': 'Ala->Arg',\n                   'Ala->Asn@A': 'Ala->Asn', 'Ala->Asp@A': 'Ala->Asp',\n                   'Ala->Cys@A': 'Ala->Cys', 'Ala->Gln@A': 'Ala->Gln',\n                   'Ala->Glu@A': 'Ala->Glu', 'Ala->Gly@A': 'Ala->Gly',\n                   'Ala->His@A': 'Ala->His', 'Ala->Lys@A': 'Ala->Lys',\n                   'Ala->Met@A': 'Ala->Met', 'Ala->Phe@A': 'Ala->Phe',\n                   'Ala->Pro@A': 'Ala->Pro', 'Ala->Ser@A': 'Ala->Ser',\n                   'Ala->Thr@A': 'Ala->Thr', 'Ala->Trp@A': 'Ala->Trp',\n                   'Ala->Tyr@A': 'Ala->Tyr', 'Ala->Val@A': 'Ala->Val',\n                   'Ala->Xle@A': 'Ala->Xle', 'Amidated@Any C-term':\n                   'Amidated', 'Amidated@Protein C-term': 'Amidated',\n                   'Amidine@Any N-term': 'Amidine', 'Amidine@K':\n                   'Amidine', 'Amidino@C': 'Amidino', 'Amino@Y': 'Amino',\n                   'Ammonia-loss@C^Any N-term': 'Ammonia-loss', 'Ammonia-\n                   loss@N': 'Ammonia-loss', 'Ammonia-loss@S^Protein\n                   N-term': 'Ammonia-loss', 'Ammonia-loss@T^Protein\n                   N-term': 'Ammonia-loss', 'Ammonium@Any C-term':\n                   'Ammonium', 'Ammonium@D': 'Ammonium', 'Ammonium@E':\n                   'Ammonium', 'Andro-H2O@C': 'Andro-H2O', 'Archaeol@C':\n                   'Archaeol', 'Arg->Ala@R': 'Arg->Ala', 'Arg->Asn@R':\n                   'Arg->Asn', 'Arg->Asp@R': 'Arg->Asp', 'Arg->Cys@R':\n                   'Arg->Cys', 'Arg->Gln@R': 'Arg->Gln', 'Arg->Glu@R':\n                   'Arg->Glu', 'Arg->GluSA@R': 'Arg->GluSA', 'Arg->Gly@R':\n                   'Arg->Gly', 'Arg->His@R': 'Arg->His', 'Arg->Lys@R':\n                   'Arg->Lys', 'Arg->Met@R': 'Arg->Met', 'Arg->Npo@R':\n                   'Arg->Npo', 'Arg->Orn@R': 'Arg->Orn', 'Arg->Phe@R':\n                   'Arg->Phe', 'Arg->Pro@R': 'Arg->Pro', 'Arg->Ser@R':\n                   'Arg->Ser', 'Arg->Thr@R': 'Arg->Thr', 'Arg->Trp@R':\n                   'Arg->Trp', 'Arg->Tyr@R': 'Arg->Tyr', 'Arg->Val@R':\n                   'Arg->Val', 'Arg->Xle@R': 'Arg->Xle', 'Arg-loss@R^Any\n                   C-term': 'Arg-loss', 'Arg2PG@R': 'Arg2PG', 'Arg@Any\n                   N-term': 'Arg', 'Argbiotinhydrazide@R':\n                   'Argbiotinhydrazide', 'Asn->Ala@N': 'Asn->Ala',\n                   'Asn->Arg@N': 'Asn->Arg', 'Asn->Asp@N': 'Asn->Asp',\n                   'Asn->Cys@N': 'Asn->Cys', 'Asn->Gln@N': 'Asn->Gln',\n                   'Asn->Glu@N': 'Asn->Glu', 'Asn->Gly@N': 'Asn->Gly',\n                   'Asn->His@N': 'Asn->His', 'Asn->Lys@N': 'Asn->Lys',\n                   'Asn->Met@N': 'Asn->Met', 'Asn->Phe@N': 'Asn->Phe',\n                   'Asn->Pro@N': 'Asn->Pro', 'Asn->Ser@N': 'Asn->Ser',\n                   'Asn->Thr@N': 'Asn->Thr', 'Asn->Trp@N': 'Asn->Trp',\n                   'Asn->Tyr@N': 'Asn->Tyr', 'Asn->Val@N': 'Asn->Val',\n                   'Asn->Xle@N': 'Asn->Xle', 'Asp->Ala@D': 'Asp->Ala',\n                   'Asp->Arg@D': 'Asp->Arg', 'Asp->Asn@D': 'Asp->Asn',\n                   'Asp->Cys@D': 'Asp->Cys', 'Asp->Gln@D': 'Asp->Gln',\n                   'Asp->Glu@D': 'Asp->Glu', 'Asp->Gly@D': 'Asp->Gly',\n                   'Asp->His@D': 'Asp->His', 'Asp->Lys@D': 'Asp->Lys',\n                   'Asp->Met@D': 'Asp->Met', 'Asp->Phe@D': 'Asp->Phe',\n                   'Asp->Pro@D': 'Asp->Pro', 'Asp->Ser@D': 'Asp->Ser',\n                   'Asp->Thr@D': 'Asp->Thr', 'Asp->Trp@D': 'Asp->Trp',\n                   'Asp->Tyr@D': 'Asp->Tyr', 'Asp->Val@D': 'Asp->Val',\n                   'Asp->Xle@D': 'Asp->Xle', 'Aspartylurea@H':\n                   'Aspartylurea', 'Atto495Maleimide@C':\n                   'Atto495Maleimide', 'AzidoF@F': 'AzidoF', 'BADGE@C':\n                   'BADGE', 'BDMAPP@H': 'BDMAPP', 'BDMAPP@K': 'BDMAPP',\n                   'BDMAPP@Protein N-term': 'BDMAPP', 'BDMAPP@W':\n                   'BDMAPP', 'BDMAPP@Y': 'BDMAPP', 'BEMAD_C:2H(6)@C':\n                   'BEMAD_C:2H(6)', 'BEMAD_C@C': 'BEMAD_C',\n                   'BEMAD_ST:2H(6)@S': 'BEMAD_ST:2H(6)',\n                   'BEMAD_ST:2H(6)@T': 'BEMAD_ST:2H(6)', 'BEMAD_ST@S':\n                   'BEMAD_ST', 'BEMAD_ST@T': 'BEMAD_ST', 'BHT@C': 'BHT',\n                   'BHT@H': 'BHT', 'BHT@K': 'BHT', 'BHTOH@C': 'BHTOH',\n                   'BHTOH@H': 'BHTOH', 'BHTOH@K': 'BHTOH', 'BITC@Any\n                   N-term': 'BITC', 'BITC@C': 'BITC', 'BITC@K': 'BITC',\n                   'BMP-piperidinol@C': 'BMP-piperidinol', 'BMP-\n                   piperidinol@M': 'BMP-piperidinol', 'Bacillosamine@N':\n                   'Bacillosamine', 'Benzoyl@Any N-term': 'Benzoyl',\n                   'Benzoyl@K': 'Benzoyl', 'Biotin-HPDP@C': 'Biotin-HPDP',\n                   'Biotin-PEG-PRA@M': 'Biotin-PEG-PRA', 'Biotin-PEO-\n                   Amine@D': 'Biotin-PEO-Amine', 'Biotin-PEO-Amine@E':\n                   'Biotin-PEO-Amine', 'Biotin-PEO-Amine@Protein C-term':\n                   'Biotin-PEO-Amine', 'Biotin-phenacyl@C': 'Biotin-\n                   phenacyl', 'Biotin-phenacyl@H': 'Biotin-phenacyl',\n                   'Biotin-phenacyl@S': 'Biotin-phenacyl', 'Biotin-\n                   tyramide@Y': 'Biotin-tyramide',\n                   'Biotin:Cayman-10013@C': 'Biotin:Cayman-10013',\n                   'Biotin:Cayman-10141@C': 'Biotin:Cayman-10141',\n                   'Biotin:Invitrogen-M1602@C': 'Biotin:Invitrogen-M1602',\n                   'Biotin:Sigma-B1267@C': 'Biotin:Sigma-B1267',\n                   'Biotin:Thermo-21325@K': 'Biotin:Thermo-21325',\n                   'Biotin:Thermo-21328@Any N-term':\n                   'Biotin:Thermo-21328', 'Biotin:Thermo-21328@K':\n                   'Biotin:Thermo-21328', 'Biotin:Thermo-21330@Any\n                   N-term': 'Biotin:Thermo-21330',\n                   'Biotin:Thermo-21330@K': 'Biotin:Thermo-21330',\n                   'Biotin:Thermo-21345@Q': 'Biotin:Thermo-21345',\n                   'Biotin:Thermo-21360@Anywhere': 'Biotin:Thermo-21360',\n                   'Biotin:Thermo-21901+2H2O@C':\n                   'Biotin:Thermo-21901+2H2O',\n                   'Biotin:Thermo-21901+H2O@C': 'Biotin:Thermo-21901+H2O',\n                   'Biotin:Thermo-21911@C': 'Biotin:Thermo-21911',\n                   'Biotin:Thermo-33033-H@Anywhere':\n                   'Biotin:Thermo-33033-H',\n                   'Biotin:Thermo-33033@Anywhere': 'Biotin:Thermo-33033',\n                   'Biotin:Thermo-88310@K': 'Biotin:Thermo-88310',\n                   'Biotin:Thermo-88317@S': 'Biotin:Thermo-88317',\n                   'Biotin:Thermo-88317@Y': 'Biotin:Thermo-88317',\n                   'Biotin@Any N-term': 'Biotin', 'Biotin@K': 'Biotin',\n                   'BisANS@K': 'BisANS', 'Bodipy@C': 'Bodipy', 'Brij35@Any\n                   N-term': 'Brij35', 'Brij58@Any N-term': 'Brij58',\n                   'Bromo@F': 'Bromo', 'Bromo@H': 'Bromo', 'Bromo@W':\n                   'Bromo', 'Bromo@Y': 'Bromo', 'Bromobimane@C':\n                   'Bromobimane', 'Butyryl@K': 'Butyryl', 'C8-QAT@Any\n                   N-term': 'C8-QAT', 'C8-QAT@K': 'C8-QAT', 'CAF@Any\n                   N-term': 'CAF', 'CAMthiopropanoyl@K':\n                   'CAMthiopropanoyl', 'CAMthiopropanoyl@Protein N-term':\n                   'CAMthiopropanoyl', 'CHDH@D': 'CHDH', 'CIGG@K': 'CIGG',\n                   'CLIP_TRAQ_2@Any N-term': 'CLIP_TRAQ_2',\n                   'CLIP_TRAQ_2@K': 'CLIP_TRAQ_2', 'CLIP_TRAQ_2@Y':\n                   'CLIP_TRAQ_2', 'CLIP_TRAQ_3@Any N-term': 'CLIP_TRAQ_3',\n                   'CLIP_TRAQ_3@K': 'CLIP_TRAQ_3', 'CLIP_TRAQ_3@Y':\n                   'CLIP_TRAQ_3', 'CLIP_TRAQ_4@Any N-term': 'CLIP_TRAQ_4',\n                   'CLIP_TRAQ_4@K': 'CLIP_TRAQ_4', 'CLIP_TRAQ_4@Y':\n                   'CLIP_TRAQ_4', 'Can-FP-biotin@S': 'Can-FP-biotin',\n                   'Can-FP-biotin@T': 'Can-FP-biotin', 'Can-FP-biotin@Y':\n                   'Can-FP-biotin', 'Carbamidomethyl@Any N-term':\n                   'Carbamidomethyl', 'Carbamidomethyl@C':\n                   'Carbamidomethyl', 'Carbamidomethyl@D':\n                   'Carbamidomethyl', 'Carbamidomethyl@E':\n                   'Carbamidomethyl', 'Carbamidomethyl@H':\n                   'Carbamidomethyl', 'Carbamidomethyl@K':\n                   'Carbamidomethyl', 'Carbamidomethyl@M':\n                   'Carbamidomethyl', 'Carbamidomethyl@S':\n                   'Carbamidomethyl', 'Carbamidomethyl@T':\n                   'Carbamidomethyl', 'Carbamidomethyl@U':\n                   'Carbamidomethyl', 'Carbamidomethyl@Y':\n                   'Carbamidomethyl', 'CarbamidomethylDTT@C':\n                   'CarbamidomethylDTT', 'Carbamyl@Any N-term':\n                   'Carbamyl', 'Carbamyl@C': 'Carbamyl', 'Carbamyl@K':\n                   'Carbamyl', 'Carbamyl@M': 'Carbamyl', 'Carbamyl@Protein\n                   N-term': 'Carbamyl', 'Carbamyl@R': 'Carbamyl',\n                   'Carbamyl@S': 'Carbamyl', 'Carbamyl@T': 'Carbamyl',\n                   'Carbamyl@Y': 'Carbamyl', 'Carbofuran@S': 'Carbofuran',\n                   'Carbonyl@A': 'Carbonyl', 'Carbonyl@E': 'Carbonyl',\n                   'Carbonyl@I': 'Carbonyl', 'Carbonyl@L': 'Carbonyl',\n                   'Carbonyl@Q': 'Carbonyl', 'Carbonyl@R': 'Carbonyl',\n                   'Carbonyl@S': 'Carbonyl', 'Carbonyl@V': 'Carbonyl',\n                   'Carboxy->Thiocarboxy@G^Protein C-term':\n                   'Carboxy->Thiocarboxy', 'Carboxy@D': 'Carboxy',\n                   'Carboxy@E': 'Carboxy', 'Carboxy@K': 'Carboxy',\n                   'Carboxy@M^Protein N-term': 'Carboxy', 'Carboxy@W':\n                   'Carboxy', 'Carboxyethyl@H': 'Carboxyethyl',\n                   'Carboxyethyl@K': 'Carboxyethyl',\n                   'Carboxyethylpyrrole@K': 'Carboxyethylpyrrole',\n                   'Carboxymethyl:13C(2)@C': 'Carboxymethyl:13C(2)',\n                   'Carboxymethyl@Any N-term': 'Carboxymethyl',\n                   'Carboxymethyl@C': 'Carboxymethyl', 'Carboxymethyl@K':\n                   'Carboxymethyl', 'Carboxymethyl@U': 'Carboxymethyl',\n                   'Carboxymethyl@W': 'Carboxymethyl',\n                   'CarboxymethylDMAP@Any N-term': 'CarboxymethylDMAP',\n                   'CarboxymethylDTT@C': 'CarboxymethylDTT',\n                   'Cation:Ag@Any C-term': 'Cation:Ag', 'Cation:Ag@D':\n                   'Cation:Ag', 'Cation:Ag@E': 'Cation:Ag',\n                   'Cation:Al[III]@Any C-term': 'Cation:Al[III]',\n                   'Cation:Al[III]@D': 'Cation:Al[III]',\n                   'Cation:Al[III]@E': 'Cation:Al[III]',\n                   'Cation:Ca[II]@Any C-term': 'Cation:Ca[II]',\n                   'Cation:Ca[II]@D': 'Cation:Ca[II]', 'Cation:Ca[II]@E':\n                   'Cation:Ca[II]', 'Cation:Cu[I]@Any C-term':\n                   'Cation:Cu[I]', 'Cation:Cu[I]@D': 'Cation:Cu[I]',\n                   'Cation:Cu[I]@E': 'Cation:Cu[I]', 'Cation:Cu[I]@H':\n                   'Cation:Cu[I]', 'Cation:Fe[III]@Any C-term':\n                   'Cation:Fe[III]', 'Cation:Fe[III]@D': 'Cation:Fe[III]',\n                   'Cation:Fe[III]@E': 'Cation:Fe[III]',\n                   'Cation:Fe[II]@Any C-term': 'Cation:Fe[II]',\n                   'Cation:Fe[II]@D': 'Cation:Fe[II]', 'Cation:Fe[II]@E':\n                   'Cation:Fe[II]', 'Cation:K@Any C-term': 'Cation:K',\n                   'Cation:K@D': 'Cation:K', 'Cation:K@E': 'Cation:K',\n                   'Cation:Li@Any C-term': 'Cation:Li', 'Cation:Li@D':\n                   'Cation:Li', 'Cation:Li@E': 'Cation:Li',\n                   'Cation:Mg[II]@Any C-term': 'Cation:Mg[II]',\n                   'Cation:Mg[II]@D': 'Cation:Mg[II]', 'Cation:Mg[II]@E':\n                   'Cation:Mg[II]', 'Cation:Na@Any C-term': 'Cation:Na',\n                   'Cation:Na@D': 'Cation:Na', 'Cation:Na@E': 'Cation:Na',\n                   'Cation:Ni[II]@Any C-term': 'Cation:Ni[II]',\n                   'Cation:Ni[II]@D': 'Cation:Ni[II]', 'Cation:Ni[II]@E':\n                   'Cation:Ni[II]', 'Cation:Zn[II]@Any C-term':\n                   'Cation:Zn[II]', 'Cation:Zn[II]@D': 'Cation:Zn[II]',\n                   'Cation:Zn[II]@E': 'Cation:Zn[II]', 'Cation:Zn[II]@H':\n                   'Cation:Zn[II]', 'Chlorination@W': 'Chlorination',\n                   'Chlorination@Y': 'Chlorination', 'Cholesterol@Protein\n                   C-term': 'Cholesterol', 'CoenzymeA@C': 'CoenzymeA',\n                   'CresylSaligeninPhosphate@H':\n                   'CresylSaligeninPhosphate',\n                   'CresylSaligeninPhosphate@K':\n                   'CresylSaligeninPhosphate',\n                   'CresylSaligeninPhosphate@R':\n                   'CresylSaligeninPhosphate',\n                   'CresylSaligeninPhosphate@S':\n                   'CresylSaligeninPhosphate',\n                   'CresylSaligeninPhosphate@T':\n                   'CresylSaligeninPhosphate',\n                   'CresylSaligeninPhosphate@Y':\n                   'CresylSaligeninPhosphate', 'Cresylphosphate@H':\n                   'Cresylphosphate', 'Cresylphosphate@K':\n                   'Cresylphosphate', 'Cresylphosphate@R':\n                   'Cresylphosphate', 'Cresylphosphate@S':\n                   'Cresylphosphate', 'Cresylphosphate@T':\n                   'Cresylphosphate', 'Cresylphosphate@Y':\n                   'Cresylphosphate', 'Crotonaldehyde@C':\n                   'Crotonaldehyde', 'Crotonaldehyde@H': 'Crotonaldehyde',\n                   'Crotonaldehyde@K': 'Crotonaldehyde', 'Crotonyl@K':\n                   'Crotonyl', 'CuSMo@C': 'CuSMo', 'Cy3-maleimide@C':\n                   'Cy3-maleimide', 'Cy3b-maleimide@C': 'Cy3b-maleimide',\n                   'CyDye-Cy3@C': 'CyDye-Cy3', 'CyDye-Cy5@C': 'CyDye-Cy5',\n                   'Cyano@C': 'Cyano', 'Cys->Ala@C': 'Cys->Ala',\n                   'Cys->Arg@C': 'Cys->Arg', 'Cys->Asn@C': 'Cys->Asn',\n                   'Cys->Asp@C': 'Cys->Asp', 'Cys->CamSec@C':\n                   'Cys->CamSec', 'Cys->Dha@C': 'Cys->Dha', 'Cys->Gln@C':\n                   'Cys->Gln', 'Cys->Glu@C': 'Cys->Glu', 'Cys->Gly@C':\n                   'Cys->Gly', 'Cys->His@C': 'Cys->His', 'Cys->Lys@C':\n                   'Cys->Lys', 'Cys->Met@C': 'Cys->Met',\n                   'Cys->Oxoalanine@C': 'Cys->Oxoalanine', 'Cys->Phe@C':\n                   'Cys->Phe', 'Cys->Pro@C': 'Cys->Pro',\n                   'Cys->PyruvicAcid@C^Protein N-term':\n                   'Cys->PyruvicAcid', 'Cys->SecNEM:2H(5)@C':\n                   'Cys->SecNEM:2H(5)', 'Cys->SecNEM@C': 'Cys->SecNEM',\n                   'Cys->Ser@C': 'Cys->Ser', 'Cys->Thr@C': 'Cys->Thr',\n                   'Cys->Trp@C': 'Cys->Trp', 'Cys->Tyr@C': 'Cys->Tyr',\n                   'Cys->Val@C': 'Cys->Val', 'Cys->Xle@C': 'Cys->Xle',\n                   'Cys->ethylaminoAla@C': 'Cys->ethylaminoAla',\n                   'Cys->methylaminoAla@C': 'Cys->methylaminoAla',\n                   'Cysteinyl@C': 'Cysteinyl', 'Cytopiloyne+water@Any\n                   N-term': 'Cytopiloyne+water', 'Cytopiloyne+water@C':\n                   'Cytopiloyne+water', 'Cytopiloyne+water@K':\n                   'Cytopiloyne+water', 'Cytopiloyne+water@R':\n                   'Cytopiloyne+water', 'Cytopiloyne+water@S':\n                   'Cytopiloyne+water', 'Cytopiloyne+water@T':\n                   'Cytopiloyne+water', 'Cytopiloyne+water@Y':\n                   'Cytopiloyne+water', 'Cytopiloyne@Any N-term':\n                   'Cytopiloyne', 'Cytopiloyne@C': 'Cytopiloyne',\n                   'Cytopiloyne@K': 'Cytopiloyne', 'Cytopiloyne@P':\n                   'Cytopiloyne', 'Cytopiloyne@R': 'Cytopiloyne',\n                   'Cytopiloyne@S': 'Cytopiloyne', 'Cytopiloyne@Y':\n                   'Cytopiloyne', 'DAET@S': 'DAET', 'DAET@T': 'DAET',\n                   'DEDGFLYMVYASQETFG@K': 'DEDGFLYMVYASQETFG', 'DHP@C':\n                   'DHP', 'DMPO@C': 'DMPO', 'DMPO@H': 'DMPO', 'DMPO@Y':\n                   'DMPO', 'DNCB_hapten@C': 'DNCB_hapten',\n                   'DNCB_hapten@H': 'DNCB_hapten', 'DNCB_hapten@K':\n                   'DNCB_hapten', 'DNCB_hapten@Y': 'DNCB_hapten',\n                   'DNPS@C': 'DNPS', 'DNPS@W': 'DNPS', 'DTT@C': 'DTT',\n                   'DYn-2@C': 'DYn-2', 'Dansyl@Any N-term': 'Dansyl',\n                   'Dansyl@K': 'Dansyl', 'Dap-DSP@A': 'Dap-DSP', 'Dap-\n                   DSP@E': 'Dap-DSP', 'Dap-DSP@K': 'Dap-DSP',\n                   'DeStreak@C': 'DeStreak', 'Deamidated:18O(1)@N':\n                   'Deamidated:18O(1)', 'Deamidated:18O(1)@Q':\n                   'Deamidated:18O(1)', 'Deamidated@F^Protein N-term':\n                   'Deamidated', 'Deamidated@N': 'Deamidated',\n                   'Deamidated@Q': 'Deamidated', 'Deamidated@R':\n                   'Deamidated', 'Decanoyl@S': 'Decanoyl', 'Decanoyl@T':\n                   'Decanoyl', 'Decarboxylation@D': 'Decarboxylation',\n                   'Decarboxylation@E': 'Decarboxylation',\n                   'Dehydrated@C^Any N-term': 'Dehydrated',\n                   'Dehydrated@D': 'Dehydrated', 'Dehydrated@N^Protein\n                   C-term': 'Dehydrated', 'Dehydrated@Q^Protein C-term':\n                   'Dehydrated', 'Dehydrated@S': 'Dehydrated',\n                   'Dehydrated@T': 'Dehydrated', 'Dehydrated@Y':\n                   'Dehydrated', 'Dehydro@C': 'Dehydro',\n                   'Delta:H(-4)O(2)@W': 'Delta:H(-4)O(2)',\n                   'Delta:H(-4)O(3)@W': 'Delta:H(-4)O(3)',\n                   'Delta:H(1)N(-1)18O(1)@N': 'Delta:H(1)N(-1)18O(1)',\n                   'Delta:H(10)C(8)O(1)@K': 'Delta:H(10)C(8)O(1)',\n                   'Delta:H(2)C(2)@Any N-term': 'Delta:H(2)C(2)',\n                   'Delta:H(2)C(2)@H': 'Delta:H(2)C(2)',\n                   'Delta:H(2)C(2)@K': 'Delta:H(2)C(2)',\n                   'Delta:H(2)C(2)@Protein N-term': 'Delta:H(2)C(2)',\n                   'Delta:H(2)C(3)@K': 'Delta:H(2)C(3)',\n                   'Delta:H(2)C(3)O(1)@K': 'Delta:H(2)C(3)O(1)',\n                   'Delta:H(2)C(3)O(1)@R': 'Delta:H(2)C(3)O(1)',\n                   'Delta:H(2)C(5)@K': 'Delta:H(2)C(5)',\n                   'Delta:H(3)C(3)O(2)@K': 'Delta:H(3)C(3)O(2)',\n                   'Delta:H(4)C(2)@Any N-term': 'Delta:H(4)C(2)',\n                   'Delta:H(4)C(2)@H': 'Delta:H(4)C(2)',\n                   'Delta:H(4)C(2)@K': 'Delta:H(4)C(2)',\n                   'Delta:H(4)C(2)O(-1)S(1)@S': 'Delta:H(4)C(2)O(-1)S(1)',\n                   'Delta:H(4)C(3)@H': 'Delta:H(4)C(3)',\n                   'Delta:H(4)C(3)@K': 'Delta:H(4)C(3)',\n                   'Delta:H(4)C(3)@Protein N-term': 'Delta:H(4)C(3)',\n                   'Delta:H(4)C(3)O(1)@C': 'Delta:H(4)C(3)O(1)',\n                   'Delta:H(4)C(3)O(1)@H': 'Delta:H(4)C(3)O(1)',\n                   'Delta:H(4)C(3)O(1)@K': 'Delta:H(4)C(3)O(1)',\n                   'Delta:H(4)C(3)O(1)@R': 'Delta:H(4)C(3)O(1)',\n                   'Delta:H(4)C(5)O(1)@R': 'Delta:H(4)C(5)O(1)',\n                   'Delta:H(4)C(6)@K': 'Delta:H(4)C(6)',\n                   'Delta:H(5)C(2)@P': 'Delta:H(5)C(2)',\n                   'Delta:H(6)C(3)O(1)@C': 'Delta:H(6)C(3)O(1)',\n                   'Delta:H(6)C(3)O(1)@H': 'Delta:H(6)C(3)O(1)',\n                   'Delta:H(6)C(3)O(1)@K': 'Delta:H(6)C(3)O(1)',\n                   'Delta:H(6)C(3)O(1)@Protein N-term':\n                   'Delta:H(6)C(3)O(1)', 'Delta:H(6)C(6)O(1)@K':\n                   'Delta:H(6)C(6)O(1)', 'Delta:H(6)C(7)O(4)@R':\n                   'Delta:H(6)C(7)O(4)', 'Delta:H(8)C(6)O(1)@K':\n                   'Delta:H(8)C(6)O(1)', 'Delta:H(8)C(6)O(1)@Protein\n                   N-term': 'Delta:H(8)C(6)O(1)', 'Delta:H(8)C(6)O(2)@K':\n                   'Delta:H(8)C(6)O(2)', 'Delta:Hg(1)@C': 'Delta:Hg(1)',\n                   'Delta:O(4)@W': 'Delta:O(4)', 'Delta:S(-1)Se(1)@C':\n                   'Delta:S(-1)Se(1)', 'Delta:S(-1)Se(1)@M':\n                   'Delta:S(-1)Se(1)', 'Delta:Se(1)@C': 'Delta:Se(1)',\n                   'Deoxy@D': 'Deoxy', 'Deoxy@S': 'Deoxy', 'Deoxy@T':\n                   'Deoxy', 'Deoxyhypusine@K': 'Deoxyhypusine',\n                   'Deoxyhypusine@Q': 'Deoxyhypusine', 'Dethiomethyl@M':\n                   'Dethiomethyl', 'DiART6plex115@Any N-term':\n                   'DiART6plex115', 'DiART6plex115@K': 'DiART6plex115',\n                   'DiART6plex115@Protein N-term': 'DiART6plex115',\n                   'DiART6plex115@Y': 'DiART6plex115',\n                   'DiART6plex116/119@Any N-term': 'DiART6plex116/119',\n                   'DiART6plex116/119@K': 'DiART6plex116/119',\n                   'DiART6plex116/119@Protein N-term':\n                   'DiART6plex116/119', 'DiART6plex116/119@Y':\n                   'DiART6plex116/119', 'DiART6plex117@Any N-term':\n                   'DiART6plex117', 'DiART6plex117@K': 'DiART6plex117',\n                   'DiART6plex117@Protein N-term': 'DiART6plex117',\n                   'DiART6plex117@Y': 'DiART6plex117', 'DiART6plex118@Any\n                   N-term': 'DiART6plex118', 'DiART6plex118@K':\n                   'DiART6plex118', 'DiART6plex118@Protein N-term':\n                   'DiART6plex118', 'DiART6plex118@Y': 'DiART6plex118',\n                   'DiART6plex@Any N-term': 'DiART6plex', 'DiART6plex@K':\n                   'DiART6plex', 'DiART6plex@Protein N-term':\n                   'DiART6plex', 'DiART6plex@Y': 'DiART6plex',\n                   'DiLeu4plex115@Any N-term': 'DiLeu4plex115',\n                   'DiLeu4plex115@K': 'DiLeu4plex115', 'DiLeu4plex115@Y':\n                   'DiLeu4plex115', 'DiLeu4plex117@Any N-term':\n                   'DiLeu4plex117', 'DiLeu4plex117@K': 'DiLeu4plex117',\n                   'DiLeu4plex117@Y': 'DiLeu4plex117', 'DiLeu4plex118@Any\n                   N-term': 'DiLeu4plex118', 'DiLeu4plex118@K':\n                   'DiLeu4plex118', 'DiLeu4plex118@Y': 'DiLeu4plex118',\n                   'DiLeu4plex@Any N-term': 'DiLeu4plex', 'DiLeu4plex@K':\n                   'DiLeu4plex', 'DiLeu4plex@Y': 'DiLeu4plex',\n                   'Diacylglycerol@C': 'Diacylglycerol', 'Dibromo@Y':\n                   'Dibromo', 'Dicarbamidomethyl@Any N-term':\n                   'Dicarbamidomethyl', 'Dicarbamidomethyl@C':\n                   'Dicarbamidomethyl', 'Dicarbamidomethyl@H':\n                   'Dicarbamidomethyl', 'Dicarbamidomethyl@K':\n                   'Dicarbamidomethyl', 'Dicarbamidomethyl@R':\n                   'Dicarbamidomethyl', 'Didehydro@K^Any C-term':\n                   'Didehydro', 'Didehydro@S': 'Didehydro', 'Didehydro@T':\n                   'Didehydro', 'Didehydro@Y': 'Didehydro',\n                   'Didehydroretinylidene@K': 'Didehydroretinylidene',\n                   'Diethyl@Any N-term': 'Diethyl', 'Diethyl@K':\n                   'Diethyl', 'Diethylphosphate@Any N-term':\n                   'Diethylphosphate', 'Diethylphosphate@C':\n                   'Diethylphosphate', 'Diethylphosphate@H':\n                   'Diethylphosphate', 'Diethylphosphate@K':\n                   'Diethylphosphate', 'Diethylphosphate@S':\n                   'Diethylphosphate', 'Diethylphosphate@T':\n                   'Diethylphosphate', 'Diethylphosphate@Y':\n                   'Diethylphosphate', 'Diethylphosphothione@C':\n                   'Diethylphosphothione', 'Diethylphosphothione@H':\n                   'Diethylphosphothione', 'Diethylphosphothione@K':\n                   'Diethylphosphothione', 'Diethylphosphothione@S':\n                   'Diethylphosphothione', 'Diethylphosphothione@T':\n                   'Diethylphosphothione', 'Diethylphosphothione@Y':\n                   'Diethylphosphothione', 'Difuran@Y': 'Difuran',\n                   'Dihydroxyimidazolidine@R': 'Dihydroxyimidazolidine',\n                   'Diiodo@H': 'Diiodo', 'Diiodo@Y': 'Diiodo',\n                   'Diironsubcluster@C': 'Diironsubcluster',\n                   'Diisopropylphosphate@Any N-term':\n                   'Diisopropylphosphate', 'Diisopropylphosphate@K':\n                   'Diisopropylphosphate', 'Diisopropylphosphate@S':\n                   'Diisopropylphosphate', 'Diisopropylphosphate@T':\n                   'Diisopropylphosphate', 'Diisopropylphosphate@Y':\n                   'Diisopropylphosphate', 'Dimethyl:2H(4)13C(2)@Any\n                   N-term': 'Dimethyl:2H(4)13C(2)',\n                   'Dimethyl:2H(4)13C(2)@K': 'Dimethyl:2H(4)13C(2)',\n                   'Dimethyl:2H(4)13C(2)@Protein N-term':\n                   'Dimethyl:2H(4)13C(2)', 'Dimethyl:2H(4)13C(2)@R':\n                   'Dimethyl:2H(4)13C(2)', 'Dimethyl:2H(4)@Any N-term':\n                   'Dimethyl:2H(4)', 'Dimethyl:2H(4)@K': 'Dimethyl:2H(4)',\n                   'Dimethyl:2H(4)@Protein N-term': 'Dimethyl:2H(4)',\n                   'Dimethyl:2H(4)@R': 'Dimethyl:2H(4)',\n                   'Dimethyl:2H(6)13C(2)@Any N-term':\n                   'Dimethyl:2H(6)13C(2)', 'Dimethyl:2H(6)13C(2)@K':\n                   'Dimethyl:2H(6)13C(2)', 'Dimethyl:2H(6)13C(2)@Protein\n                   N-term': 'Dimethyl:2H(6)13C(2)',\n                   'Dimethyl:2H(6)13C(2)@R': 'Dimethyl:2H(6)13C(2)',\n                   'Dimethyl:2H(6)@Any N-term': 'Dimethyl:2H(6)',\n                   'Dimethyl:2H(6)@K': 'Dimethyl:2H(6)',\n                   'Dimethyl:2H(6)@R': 'Dimethyl:2H(6)', 'Dimethyl@Any\n                   N-term': 'Dimethyl', 'Dimethyl@K': 'Dimethyl',\n                   'Dimethyl@N': 'Dimethyl', 'Dimethyl@P^Protein N-term':\n                   'Dimethyl', 'Dimethyl@Protein N-term': 'Dimethyl',\n                   'Dimethyl@R': 'Dimethyl', 'DimethylArsino@C':\n                   'DimethylArsino', 'DimethylamineGMBS@C':\n                   'DimethylamineGMBS', 'Dimethylaminoethyl@C':\n                   'Dimethylaminoethyl', 'Dimethylphosphothione@C':\n                   'Dimethylphosphothione', 'Dimethylphosphothione@H':\n                   'Dimethylphosphothione', 'Dimethylphosphothione@K':\n                   'Dimethylphosphothione', 'Dimethylphosphothione@S':\n                   'Dimethylphosphothione', 'Dimethylphosphothione@T':\n                   'Dimethylphosphothione', 'Dimethylphosphothione@Y':\n                   'Dimethylphosphothione', 'DimethylpyrroleAdduct@K':\n                   'DimethylpyrroleAdduct', 'Dioxidation@C':\n                   'Dioxidation', 'Dioxidation@E': 'Dioxidation',\n                   'Dioxidation@F': 'Dioxidation', 'Dioxidation@I':\n                   'Dioxidation', 'Dioxidation@K': 'Dioxidation',\n                   'Dioxidation@L': 'Dioxidation', 'Dioxidation@M':\n                   'Dioxidation', 'Dioxidation@P': 'Dioxidation',\n                   'Dioxidation@R': 'Dioxidation', 'Dioxidation@U':\n                   'Dioxidation', 'Dioxidation@V': 'Dioxidation',\n                   'Dioxidation@W': 'Dioxidation', 'Dioxidation@Y':\n                   'Dioxidation', 'Diphthamide@H': 'Diphthamide',\n                   'Dipyridyl@C': 'Dipyridyl',\n                   'Dipyrrolylmethanemethyl@C': 'Dipyrrolylmethanemethyl',\n                   'DyLight-maleimide@C': 'DyLight-maleimide',\n                   'EDEDTIDVFQQQTGG@K': 'EDEDTIDVFQQQTGG', 'EDT-\n                   iodoacetyl-PEO-biotin@S': 'EDT-iodoacetyl-PEO-biotin',\n                   'EDT-iodoacetyl-PEO-biotin@T': 'EDT-iodoacetyl-PEO-\n                   biotin', 'EDT-maleimide-PEO-biotin@S': 'EDT-maleimide-\n                   PEO-biotin', 'EDT-maleimide-PEO-biotin@T': 'EDT-\n                   maleimide-PEO-biotin', 'EEEDVIEVYQEQTGG@K':\n                   'EEEDVIEVYQEQTGG', 'EGCG1@C': 'EGCG1', 'EGCG2@C':\n                   'EGCG2', 'EHD-diphenylpentanone@C': 'EHD-\n                   diphenylpentanone', 'EHD-diphenylpentanone@M': 'EHD-\n                   diphenylpentanone', 'EQAT:2H(5)@C': 'EQAT:2H(5)',\n                   'EQAT@C': 'EQAT', 'EQIGG@K': 'EQIGG', 'ESP:2H(10)@Any\n                   N-term': 'ESP:2H(10)', 'ESP:2H(10)@K': 'ESP:2H(10)',\n                   'ESP@Any N-term': 'ESP', 'ESP@K': 'ESP',\n                   'Ethanedithiol@S': 'Ethanedithiol', 'Ethanedithiol@T':\n                   'Ethanedithiol', 'Ethanolamine@Any C-term':\n                   'Ethanolamine', 'Ethanolamine@C': 'Ethanolamine',\n                   'Ethanolamine@D': 'Ethanolamine', 'Ethanolamine@E':\n                   'Ethanolamine', 'Ethanolyl@C': 'Ethanolyl',\n                   'Ethanolyl@K': 'Ethanolyl', 'Ethanolyl@R': 'Ethanolyl',\n                   'Ethoxyformyl@H': 'Ethoxyformyl', 'Ethyl+Deamidated@N':\n                   'Ethyl+Deamidated', 'Ethyl+Deamidated@Q':\n                   'Ethyl+Deamidated', 'Ethyl@Any C-term': 'Ethyl',\n                   'Ethyl@Any N-term': 'Ethyl', 'Ethyl@D': 'Ethyl',\n                   'Ethyl@E': 'Ethyl', 'Ethyl@K': 'Ethyl', 'Ethyl@Protein\n                   N-term': 'Ethyl', 'Ethylphosphate@Any N-term':\n                   'Ethylphosphate', 'Ethylphosphate@K': 'Ethylphosphate',\n                   'Ethylphosphate@S': 'Ethylphosphate',\n                   'Ethylphosphate@T': 'Ethylphosphate',\n                   'Ethylphosphate@Y': 'Ethylphosphate', 'ExacTagAmine@K':\n                   'ExacTagAmine', 'ExacTagThiol@C': 'ExacTagThiol',\n                   'FAD@C': 'FAD', 'FAD@H': 'FAD', 'FAD@Y': 'FAD',\n                   'FMN@S': 'FMN', 'FMN@T': 'FMN', 'FMNC@C': 'FMNC',\n                   'FMNH@C': 'FMNH', 'FMNH@H': 'FMNH', 'FNEM@C': 'FNEM',\n                   'FP-Biotin@K': 'FP-Biotin', 'FP-Biotin@S': 'FP-Biotin',\n                   'FP-Biotin@T': 'FP-Biotin', 'FP-Biotin@Y': 'FP-Biotin',\n                   'FTC@C': 'FTC', 'FTC@K': 'FTC', 'FTC@P': 'FTC',\n                   'FTC@R': 'FTC', 'FTC@S': 'FTC', 'Farnesyl@C':\n                   'Farnesyl', 'Fluorescein-tyramine@Y': 'Fluorescein-\n                   tyramine', 'Fluorescein@C': 'Fluorescein', 'Fluoro@A':\n                   'Fluoro', 'Fluoro@F': 'Fluoro', 'Fluoro@W': 'Fluoro',\n                   'Fluoro@Y': 'Fluoro', 'Formyl@Any N-term': 'Formyl',\n                   'Formyl@K': 'Formyl', 'Formyl@Protein N-term':\n                   'Formyl', 'Formyl@S': 'Formyl', 'Formyl@T': 'Formyl',\n                   'FormylMet@Protein N-term': 'FormylMet',\n                   'Formylasparagine@H': 'Formylasparagine', 'Furan@Y':\n                   'Furan', 'G-H1@R': 'G-H1', 'GEE@Q': 'GEE', 'GG@C':\n                   'GG', 'GG@K': 'GG', 'GG@Protein N-term': 'GG', 'GG@S':\n                   'GG', 'GG@T': 'GG', 'GGQ@K': 'GGQ', 'GIST-\n                   Quat:2H(3)@Any N-term': 'GIST-Quat:2H(3)', 'GIST-\n                   Quat:2H(3)@K': 'GIST-Quat:2H(3)', 'GIST-Quat:2H(6)@Any\n                   N-term': 'GIST-Quat:2H(6)', 'GIST-Quat:2H(6)@K': 'GIST-\n                   Quat:2H(6)', 'GIST-Quat:2H(9)@Any N-term': 'GIST-\n                   Quat:2H(9)', 'GIST-Quat:2H(9)@K': 'GIST-Quat:2H(9)',\n                   'GIST-Quat@Any N-term': 'GIST-Quat', 'GIST-Quat@K':\n                   'GIST-Quat', 'GNLLFLACYCIGG@K': 'GNLLFLACYCIGG',\n                   'GPIanchor@Protein C-term': 'GPIanchor',\n                   'Galactosyl@Any N-term': 'Galactosyl', 'Galactosyl@K':\n                   'Galactosyl', 'GeranylGeranyl@C': 'GeranylGeranyl',\n                   'Gln->Ala@Q': 'Gln->Ala', 'Gln->Arg@Q': 'Gln->Arg',\n                   'Gln->Asn@Q': 'Gln->Asn', 'Gln->Asp@Q': 'Gln->Asp',\n                   'Gln->Cys@Q': 'Gln->Cys', 'Gln->Glu@Q': 'Gln->Glu',\n                   'Gln->Gly@Q': 'Gln->Gly', 'Gln->His@Q': 'Gln->His',\n                   'Gln->Lys@Q': 'Gln->Lys', 'Gln->Met@Q': 'Gln->Met',\n                   'Gln->Phe@Q': 'Gln->Phe', 'Gln->Pro@Q': 'Gln->Pro',\n                   'Gln->Ser@Q': 'Gln->Ser', 'Gln->Thr@Q': 'Gln->Thr',\n                   'Gln->Trp@Q': 'Gln->Trp', 'Gln->Tyr@Q': 'Gln->Tyr',\n                   'Gln->Val@Q': 'Gln->Val', 'Gln->Xle@Q': 'Gln->Xle',\n                   'Gln->pyro-Glu@Q^Any N-term': 'Gln->pyro-Glu',\n                   'Glu->Ala@E': 'Glu->Ala', 'Glu->Arg@E': 'Glu->Arg',\n                   'Glu->Asn@E': 'Glu->Asn', 'Glu->Asp@E': 'Glu->Asp',\n                   'Glu->Cys@E': 'Glu->Cys', 'Glu->Gln@E': 'Glu->Gln',\n                   'Glu->Gly@E': 'Glu->Gly', 'Glu->His@E': 'Glu->His',\n                   'Glu->Lys@E': 'Glu->Lys', 'Glu->Met@E': 'Glu->Met',\n                   'Glu->Phe@E': 'Glu->Phe', 'Glu->Pro@E': 'Glu->Pro',\n                   'Glu->Ser@E': 'Glu->Ser', 'Glu->Thr@E': 'Glu->Thr',\n                   'Glu->Trp@E': 'Glu->Trp', 'Glu->Tyr@E': 'Glu->Tyr',\n                   'Glu->Val@E': 'Glu->Val', 'Glu->Xle@E': 'Glu->Xle',\n                   'Glu->pyro-Glu+Methyl:2H(2)13C(1)@E^Any N-term':\n                   'Glu->pyro-Glu+Methyl:2H(2)13C(1)', 'Glu->pyro-\n                   Glu+Methyl@E^Any N-term': 'Glu->pyro-Glu+Methyl',\n                   'Glu->pyro-Glu@E^Any N-term': 'Glu->pyro-Glu', 'Glu@E':\n                   'Glu', 'Glu@Protein C-term': 'Glu', 'GluGlu@E':\n                   'GluGlu', 'GluGlu@Protein C-term': 'GluGlu',\n                   'GluGluGlu@E': 'GluGluGlu', 'GluGluGlu@Protein C-term':\n                   'GluGluGlu', 'GluGluGluGlu@E': 'GluGluGluGlu',\n                   'GluGluGluGlu@Protein C-term': 'GluGluGluGlu',\n                   'Glucosylgalactosyl@K': 'Glucosylgalactosyl',\n                   'Glucuronyl@Protein N-term': 'Glucuronyl',\n                   'Glucuronyl@S': 'Glucuronyl', 'Glucuronyl@T':\n                   'Glucuronyl', 'Gluratylation@K': 'Gluratylation',\n                   'Glutathione@C': 'Glutathione', 'Gly->Ala@G':\n                   'Gly->Ala', 'Gly->Arg@G': 'Gly->Arg', 'Gly->Asn@G':\n                   'Gly->Asn', 'Gly->Asp@G': 'Gly->Asp', 'Gly->Cys@G':\n                   'Gly->Cys', 'Gly->Gln@G': 'Gly->Gln', 'Gly->Glu@G':\n                   'Gly->Glu', 'Gly->His@G': 'Gly->His', 'Gly->Lys@G':\n                   'Gly->Lys', 'Gly->Met@G': 'Gly->Met', 'Gly->Phe@G':\n                   'Gly->Phe', 'Gly->Pro@G': 'Gly->Pro', 'Gly->Ser@G':\n                   'Gly->Ser', 'Gly->Thr@G': 'Gly->Thr', 'Gly->Trp@G':\n                   'Gly->Trp', 'Gly->Tyr@G': 'Gly->Tyr', 'Gly->Val@G':\n                   'Gly->Val', 'Gly->Xle@G': 'Gly->Xle', 'Gly-\n                   loss+Amide@G^Any C-term': 'Gly-loss+Amide', 'Gly@K':\n                   'Gly', 'Gly@S': 'Gly', 'Gly@T': 'Gly',\n                   'Glycerophospho@S': 'Glycerophospho', 'GlycerylPE@E':\n                   'GlycerylPE', 'Glycosyl@P': 'Glycosyl', 'Guanidinyl@Any\n                   N-term': 'Guanidinyl', 'Guanidinyl@K': 'Guanidinyl',\n                   'HCysThiolactone@K': 'HCysThiolactone', 'HCysteinyl@C':\n                   'HCysteinyl', 'HMVK@C': 'HMVK', 'HN2_mustard@C':\n                   'HN2_mustard', 'HN2_mustard@H': 'HN2_mustard',\n                   'HN2_mustard@K': 'HN2_mustard', 'HN3_mustard@C':\n                   'HN3_mustard', 'HN3_mustard@H': 'HN3_mustard',\n                   'HN3_mustard@K': 'HN3_mustard', 'HNE+Delta:H(2)@C':\n                   'HNE+Delta:H(2)', 'HNE+Delta:H(2)@H': 'HNE+Delta:H(2)',\n                   'HNE+Delta:H(2)@K': 'HNE+Delta:H(2)', 'HNE-BAHAH@C':\n                   'HNE-BAHAH', 'HNE-BAHAH@H': 'HNE-BAHAH', 'HNE-BAHAH@K':\n                   'HNE-BAHAH', 'HNE-Delta:H(2)O@C': 'HNE-Delta:H(2)O',\n                   'HNE-Delta:H(2)O@H': 'HNE-Delta:H(2)O', 'HNE-\n                   Delta:H(2)O@K': 'HNE-Delta:H(2)O', 'HNE@A': 'HNE',\n                   'HNE@C': 'HNE', 'HNE@H': 'HNE', 'HNE@K': 'HNE',\n                   'HNE@L': 'HNE', 'HPG@R': 'HPG', 'Haloxon@C': 'Haloxon',\n                   'Haloxon@H': 'Haloxon', 'Haloxon@K': 'Haloxon',\n                   'Haloxon@S': 'Haloxon', 'Haloxon@T': 'Haloxon',\n                   'Haloxon@Y': 'Haloxon', 'Heme@C': 'Heme', 'Heme@H':\n                   'Heme', 'Hep@K': 'Hep', 'Hep@N': 'Hep', 'Hep@Q': 'Hep',\n                   'Hep@R': 'Hep', 'Hep@S': 'Hep', 'Hep@T': 'Hep',\n                   'Hex(1)HexA(1)@S': 'Hex(1)HexA(1)', 'Hex(1)HexA(1)@T':\n                   'Hex(1)HexA(1)', 'Hex(1)HexA(1)HexNAc(1)@S':\n                   'Hex(1)HexA(1)HexNAc(1)', 'Hex(1)HexA(1)HexNAc(1)@T':\n                   'Hex(1)HexA(1)HexNAc(1)', 'Hex(1)HexA(1)HexNAc(2)@S':\n                   'Hex(1)HexA(1)HexNAc(2)', 'Hex(1)HexA(1)HexNAc(2)@T':\n                   'Hex(1)HexA(1)HexNAc(2)', 'Hex(1)HexNAc(1)@N':\n                   'Hex(1)HexNAc(1)', 'Hex(1)HexNAc(1)@S':\n                   'Hex(1)HexNAc(1)', 'Hex(1)HexNAc(1)@T':\n                   'Hex(1)HexNAc(1)', 'Hex(1)HexNAc(1)Kdn(1)Sulf(1)@S':\n                   'Hex(1)HexNAc(1)Kdn(1)Sulf(1)',\n                   'Hex(1)HexNAc(1)Kdn(1)Sulf(1)@T':\n                   'Hex(1)HexNAc(1)Kdn(1)Sulf(1)',\n                   'Hex(1)HexNAc(1)NeuAc(1)@N': 'Hex(1)HexNAc(1)NeuAc(1)',\n                   'Hex(1)HexNAc(1)NeuAc(1)@S': 'Hex(1)HexNAc(1)NeuAc(1)',\n                   'Hex(1)HexNAc(1)NeuAc(1)@T': 'Hex(1)HexNAc(1)NeuAc(1)',\n                   'Hex(1)HexNAc(1)NeuAc(1)Ac(1)@S':\n                   'Hex(1)HexNAc(1)NeuAc(1)Ac(1)',\n                   'Hex(1)HexNAc(1)NeuAc(1)Ac(1)@T':\n                   'Hex(1)HexNAc(1)NeuAc(1)Ac(1)',\n                   'Hex(1)HexNAc(1)NeuAc(1)NeuGc(1)@S':\n                   'Hex(1)HexNAc(1)NeuAc(1)NeuGc(1)',\n                   'Hex(1)HexNAc(1)NeuAc(1)NeuGc(1)@T':\n                   'Hex(1)HexNAc(1)NeuAc(1)NeuGc(1)',\n                   'Hex(1)HexNAc(1)NeuAc(1)Sulf(1)@S':\n                   'Hex(1)HexNAc(1)NeuAc(1)Sulf(1)',\n                   'Hex(1)HexNAc(1)NeuAc(1)Sulf(1)@T':\n                   'Hex(1)HexNAc(1)NeuAc(1)Sulf(1)',\n                   'Hex(1)HexNAc(1)NeuAc(2)@N': 'Hex(1)HexNAc(1)NeuAc(2)',\n                   'Hex(1)HexNAc(1)NeuAc(2)@S': 'Hex(1)HexNAc(1)NeuAc(2)',\n                   'Hex(1)HexNAc(1)NeuAc(2)@T': 'Hex(1)HexNAc(1)NeuAc(2)',\n                   'Hex(1)HexNAc(1)NeuAc(2)Ac(1)@S':\n                   'Hex(1)HexNAc(1)NeuAc(2)Ac(1)',\n                   'Hex(1)HexNAc(1)NeuAc(2)Ac(1)@T':\n                   'Hex(1)HexNAc(1)NeuAc(2)Ac(1)',\n                   'Hex(1)HexNAc(1)NeuAc(2)Ac(2)@S':\n                   'Hex(1)HexNAc(1)NeuAc(2)Ac(2)',\n                   'Hex(1)HexNAc(1)NeuAc(2)Ac(2)@T':\n                   'Hex(1)HexNAc(1)NeuAc(2)Ac(2)',\n                   'Hex(1)HexNAc(1)NeuAc(3)@S': 'Hex(1)HexNAc(1)NeuAc(3)',\n                   'Hex(1)HexNAc(1)NeuAc(3)@T': 'Hex(1)HexNAc(1)NeuAc(3)',\n                   'Hex(1)HexNAc(1)NeuGc(1)@S': 'Hex(1)HexNAc(1)NeuGc(1)',\n                   'Hex(1)HexNAc(1)NeuGc(1)@T': 'Hex(1)HexNAc(1)NeuGc(1)',\n                   'Hex(1)HexNAc(1)NeuGc(2)@S': 'Hex(1)HexNAc(1)NeuGc(2)',\n                   'Hex(1)HexNAc(1)NeuGc(2)@T': 'Hex(1)HexNAc(1)NeuGc(2)',\n                   'Hex(1)HexNAc(1)NeuGc(3)@S': 'Hex(1)HexNAc(1)NeuGc(3)',\n                   'Hex(1)HexNAc(1)NeuGc(3)@T': 'Hex(1)HexNAc(1)NeuGc(3)',\n                   'Hex(1)HexNAc(1)NeuGc(4)@S': 'Hex(1)HexNAc(1)NeuGc(4)',\n                   'Hex(1)HexNAc(1)NeuGc(4)@T': 'Hex(1)HexNAc(1)NeuGc(4)',\n                   'Hex(1)HexNAc(1)NeuGc(5)@S': 'Hex(1)HexNAc(1)NeuGc(5)',\n                   'Hex(1)HexNAc(1)NeuGc(5)@T': 'Hex(1)HexNAc(1)NeuGc(5)',\n                   'Hex(1)HexNAc(1)Phos(1)@S': 'Hex(1)HexNAc(1)Phos(1)',\n                   'Hex(1)HexNAc(1)Phos(1)@T': 'Hex(1)HexNAc(1)Phos(1)',\n                   'Hex(1)HexNAc(1)Sulf(1)@S': 'Hex(1)HexNAc(1)Sulf(1)',\n                   'Hex(1)HexNAc(1)Sulf(1)@T': 'Hex(1)HexNAc(1)Sulf(1)',\n                   'Hex(1)HexNAc(1)dHex(1)@N': 'Hex(1)HexNAc(1)dHex(1)',\n                   'Hex(1)HexNAc(1)dHex(1)@S': 'Hex(1)HexNAc(1)dHex(1)',\n                   'Hex(1)HexNAc(1)dHex(1)@T': 'Hex(1)HexNAc(1)dHex(1)',\n                   'Hex(1)HexNAc(1)dHex(1)Me(1)@S':\n                   'Hex(1)HexNAc(1)dHex(1)Me(1)',\n                   'Hex(1)HexNAc(1)dHex(1)Me(1)@T':\n                   'Hex(1)HexNAc(1)dHex(1)Me(1)',\n                   'Hex(1)HexNAc(1)dHex(1)Me(2)@S':\n                   'Hex(1)HexNAc(1)dHex(1)Me(2)',\n                   'Hex(1)HexNAc(1)dHex(1)Me(2)@T':\n                   'Hex(1)HexNAc(1)dHex(1)Me(2)', 'Hex(1)HexNAc(2)@N':\n                   'Hex(1)HexNAc(2)', 'Hex(1)HexNAc(2)@S':\n                   'Hex(1)HexNAc(2)', 'Hex(1)HexNAc(2)@T':\n                   'Hex(1)HexNAc(2)', 'Hex(1)HexNAc(2)NeuAc(1)@S':\n                   'Hex(1)HexNAc(2)NeuAc(1)', 'Hex(1)HexNAc(2)NeuAc(1)@T':\n                   'Hex(1)HexNAc(2)NeuAc(1)',\n                   'Hex(1)HexNAc(2)NeuAc(1)Sulf(1)@S':\n                   'Hex(1)HexNAc(2)NeuAc(1)Sulf(1)',\n                   'Hex(1)HexNAc(2)NeuAc(1)Sulf(1)@T':\n                   'Hex(1)HexNAc(2)NeuAc(1)Sulf(1)',\n                   'Hex(1)HexNAc(2)NeuAc(2)@S': 'Hex(1)HexNAc(2)NeuAc(2)',\n                   'Hex(1)HexNAc(2)NeuAc(2)@T': 'Hex(1)HexNAc(2)NeuAc(2)',\n                   'Hex(1)HexNAc(2)NeuAc(2)Sulf(1)@S':\n                   'Hex(1)HexNAc(2)NeuAc(2)Sulf(1)',\n                   'Hex(1)HexNAc(2)NeuAc(2)Sulf(1)@T':\n                   'Hex(1)HexNAc(2)NeuAc(2)Sulf(1)',\n                   'Hex(1)HexNAc(2)NeuGc(1)@S': 'Hex(1)HexNAc(2)NeuGc(1)',\n                   'Hex(1)HexNAc(2)NeuGc(1)@T': 'Hex(1)HexNAc(2)NeuGc(1)',\n                   'Hex(1)HexNAc(2)Pent(1)@N': 'Hex(1)HexNAc(2)Pent(1)',\n                   'Hex(1)HexNAc(2)Sulf(1)@S': 'Hex(1)HexNAc(2)Sulf(1)',\n                   'Hex(1)HexNAc(2)Sulf(1)@T': 'Hex(1)HexNAc(2)Sulf(1)',\n                   'Hex(1)HexNAc(2)dHex(1)@N': 'Hex(1)HexNAc(2)dHex(1)',\n                   'Hex(1)HexNAc(2)dHex(1)@S': 'Hex(1)HexNAc(2)dHex(1)',\n                   'Hex(1)HexNAc(2)dHex(1)@T': 'Hex(1)HexNAc(2)dHex(1)',\n                   'Hex(1)HexNAc(2)dHex(1)Pent(1)@N':\n                   'Hex(1)HexNAc(2)dHex(1)Pent(1)',\n                   'Hex(1)HexNAc(2)dHex(2)@N': 'Hex(1)HexNAc(2)dHex(2)',\n                   'Hex(1)HexNAc(2)dHex(2)@S': 'Hex(1)HexNAc(2)dHex(2)',\n                   'Hex(1)HexNAc(2)dHex(2)@T': 'Hex(1)HexNAc(2)dHex(2)',\n                   'Hex(1)HexNAc(2)dHex(2)Sulf(1)@S':\n                   'Hex(1)HexNAc(2)dHex(2)Sulf(1)',\n                   'Hex(1)HexNAc(2)dHex(2)Sulf(1)@T':\n                   'Hex(1)HexNAc(2)dHex(2)Sulf(1)', 'Hex(1)HexNAc(3)@S':\n                   'Hex(1)HexNAc(3)', 'Hex(1)HexNAc(3)@T':\n                   'Hex(1)HexNAc(3)', 'Hex(1)HexNAc(3)NeuAc(1)@S':\n                   'Hex(1)HexNAc(3)NeuAc(1)', 'Hex(1)HexNAc(3)NeuAc(1)@T':\n                   'Hex(1)HexNAc(3)NeuAc(1)', 'Hex(1)HexNAc(3)NeuAc(2)@S':\n                   'Hex(1)HexNAc(3)NeuAc(2)', 'Hex(1)HexNAc(3)NeuAc(2)@T':\n                   'Hex(1)HexNAc(3)NeuAc(2)', 'Hex(1)HexNAc(3)NeuGc(1)@S':\n                   'Hex(1)HexNAc(3)NeuGc(1)', 'Hex(1)HexNAc(3)NeuGc(1)@T':\n                   'Hex(1)HexNAc(3)NeuGc(1)', 'Hex(1)HexNAc(3)Sulf(1)@S':\n                   'Hex(1)HexNAc(3)Sulf(1)', 'Hex(1)HexNAc(3)Sulf(1)@T':\n                   'Hex(1)HexNAc(3)Sulf(1)',\n                   'Hex(1)HexNAc(4)dHex(1)Sulf(1)@S':\n                   'Hex(1)HexNAc(4)dHex(1)Sulf(1)',\n                   'Hex(1)HexNAc(4)dHex(1)Sulf(1)@T':\n                   'Hex(1)HexNAc(4)dHex(1)Sulf(1)', 'Hex(1)NeuAc(1)@S':\n                   'Hex(1)NeuAc(1)', 'Hex(1)NeuAc(1)@T': 'Hex(1)NeuAc(1)',\n                   'Hex(1)NeuAc(1)Pent(1)@S': 'Hex(1)NeuAc(1)Pent(1)',\n                   'Hex(1)NeuAc(1)Pent(1)@T': 'Hex(1)NeuAc(1)Pent(1)',\n                   'Hex(1)NeuGc(1)@S': 'Hex(1)NeuGc(1)',\n                   'Hex(1)NeuGc(1)@T': 'Hex(1)NeuGc(1)',\n                   'Hex(1)Pent(1)@S': 'Hex(1)Pent(1)', 'Hex(1)Pent(1)@T':\n                   'Hex(1)Pent(1)', 'Hex(1)Pent(2)@S': 'Hex(1)Pent(2)',\n                   'Hex(1)Pent(2)@T': 'Hex(1)Pent(2)',\n                   'Hex(1)Pent(2)Me(1)@S': 'Hex(1)Pent(2)Me(1)',\n                   'Hex(1)Pent(2)Me(1)@T': 'Hex(1)Pent(2)Me(1)',\n                   'Hex(1)Pent(3)@S': 'Hex(1)Pent(3)', 'Hex(1)Pent(3)@T':\n                   'Hex(1)Pent(3)', 'Hex(1)Pent(3)Me(1)@S':\n                   'Hex(1)Pent(3)Me(1)', 'Hex(1)Pent(3)Me(1)@T':\n                   'Hex(1)Pent(3)Me(1)', 'Hex(10)HexNAc(1)@N':\n                   'Hex(10)HexNAc(1)', 'Hex(10)Phos(3)@S':\n                   'Hex(10)Phos(3)', 'Hex(10)Phos(3)@T': 'Hex(10)Phos(3)',\n                   'Hex(2)@K': 'Hex(2)', 'Hex(2)@R': 'Hex(2)', 'Hex(2)@S':\n                   'Hex(2)', 'Hex(2)@T': 'Hex(2)',\n                   'Hex(2)HexA(1)HexNAc(1)Sulf(1)@S':\n                   'Hex(2)HexA(1)HexNAc(1)Sulf(1)',\n                   'Hex(2)HexA(1)HexNAc(1)Sulf(1)@T':\n                   'Hex(2)HexA(1)HexNAc(1)Sulf(1)',\n                   'Hex(2)HexA(1)NeuAc(1)Pent(1)Sulf(1)@S':\n                   'Hex(2)HexA(1)NeuAc(1)Pent(1)Sulf(1)',\n                   'Hex(2)HexA(1)NeuAc(1)Pent(1)Sulf(1)@T':\n                   'Hex(2)HexA(1)NeuAc(1)Pent(1)Sulf(1)',\n                   'Hex(2)HexA(1)Pent(1)Sulf(1)@S':\n                   'Hex(2)HexA(1)Pent(1)Sulf(1)',\n                   'Hex(2)HexA(1)Pent(1)Sulf(1)@T':\n                   'Hex(2)HexA(1)Pent(1)Sulf(1)', 'Hex(2)HexNAc(1)@N':\n                   'Hex(2)HexNAc(1)', 'Hex(2)HexNAc(1)@S':\n                   'Hex(2)HexNAc(1)', 'Hex(2)HexNAc(1)@T':\n                   'Hex(2)HexNAc(1)', 'Hex(2)HexNAc(1)Me(1)@S':\n                   'Hex(2)HexNAc(1)Me(1)', 'Hex(2)HexNAc(1)Me(1)@T':\n                   'Hex(2)HexNAc(1)Me(1)', 'Hex(2)HexNAc(1)NeuGc(1)@S':\n                   'Hex(2)HexNAc(1)NeuGc(1)', 'Hex(2)HexNAc(1)NeuGc(1)@T':\n                   'Hex(2)HexNAc(1)NeuGc(1)', 'Hex(2)HexNAc(1)NeuGc(2)@S':\n                   'Hex(2)HexNAc(1)NeuGc(2)', 'Hex(2)HexNAc(1)NeuGc(2)@T':\n                   'Hex(2)HexNAc(1)NeuGc(2)', 'Hex(2)HexNAc(1)NeuGc(3)@S':\n                   'Hex(2)HexNAc(1)NeuGc(3)', 'Hex(2)HexNAc(1)NeuGc(3)@T':\n                   'Hex(2)HexNAc(1)NeuGc(3)', 'Hex(2)HexNAc(1)NeuGc(4)@S':\n                   'Hex(2)HexNAc(1)NeuGc(4)', 'Hex(2)HexNAc(1)NeuGc(4)@T':\n                   'Hex(2)HexNAc(1)NeuGc(4)',\n                   'Hex(2)HexNAc(1)Pent(1)HexA(1)@S':\n                   'Hex(2)HexNAc(1)Pent(1)HexA(1)',\n                   'Hex(2)HexNAc(1)Pent(1)HexA(1)@T':\n                   'Hex(2)HexNAc(1)Pent(1)HexA(1)',\n                   'Hex(2)HexNAc(1)Sulf(1)@S': 'Hex(2)HexNAc(1)Sulf(1)',\n                   'Hex(2)HexNAc(1)Sulf(1)@T': 'Hex(2)HexNAc(1)Sulf(1)',\n                   'Hex(2)HexNAc(2)@N': 'Hex(2)HexNAc(2)',\n                   'Hex(2)HexNAc(2)@S': 'Hex(2)HexNAc(2)',\n                   'Hex(2)HexNAc(2)@T': 'Hex(2)HexNAc(2)',\n                   'Hex(2)HexNAc(2)NeuAc(1)@N': 'Hex(2)HexNAc(2)NeuAc(1)',\n                   'Hex(2)HexNAc(2)NeuAc(1)@S': 'Hex(2)HexNAc(2)NeuAc(1)',\n                   'Hex(2)HexNAc(2)NeuAc(1)@T': 'Hex(2)HexNAc(2)NeuAc(1)',\n                   'Hex(2)HexNAc(2)NeuAc(1)Sulf(1)@S':\n                   'Hex(2)HexNAc(2)NeuAc(1)Sulf(1)',\n                   'Hex(2)HexNAc(2)NeuAc(1)Sulf(1)@T':\n                   'Hex(2)HexNAc(2)NeuAc(1)Sulf(1)',\n                   'Hex(2)HexNAc(2)NeuAc(2)@S': 'Hex(2)HexNAc(2)NeuAc(2)',\n                   'Hex(2)HexNAc(2)NeuAc(2)@T': 'Hex(2)HexNAc(2)NeuAc(2)',\n                   'Hex(2)HexNAc(2)NeuAc(2)Sulf(1)@S':\n                   'Hex(2)HexNAc(2)NeuAc(2)Sulf(1)',\n                   'Hex(2)HexNAc(2)NeuAc(2)Sulf(1)@T':\n                   'Hex(2)HexNAc(2)NeuAc(2)Sulf(1)',\n                   'Hex(2)HexNAc(2)NeuGc(1)@S': 'Hex(2)HexNAc(2)NeuGc(1)',\n                   'Hex(2)HexNAc(2)NeuGc(1)@T': 'Hex(2)HexNAc(2)NeuGc(1)',\n                   'Hex(2)HexNAc(2)Pent(1)@N': 'Hex(2)HexNAc(2)Pent(1)',\n                   'Hex(2)HexNAc(2)Sulf(1)@S': 'Hex(2)HexNAc(2)Sulf(1)',\n                   'Hex(2)HexNAc(2)Sulf(1)@T': 'Hex(2)HexNAc(2)Sulf(1)',\n                   'Hex(2)HexNAc(2)dHex(1)@N': 'Hex(2)HexNAc(2)dHex(1)',\n                   'Hex(2)HexNAc(2)dHex(1)@S': 'Hex(2)HexNAc(2)dHex(1)',\n                   'Hex(2)HexNAc(2)dHex(1)@T': 'Hex(2)HexNAc(2)dHex(1)',\n                   'Hex(2)HexNAc(3)@N': 'Hex(2)HexNAc(3)',\n                   'Hex(2)HexNAc(3)@S': 'Hex(2)HexNAc(3)',\n                   'Hex(2)HexNAc(3)@T': 'Hex(2)HexNAc(3)',\n                   'Hex(2)HexNAc(3)NeuAc(1)NeuGc(1)@S':\n                   'Hex(2)HexNAc(3)NeuAc(1)NeuGc(1)',\n                   'Hex(2)HexNAc(3)NeuAc(1)NeuGc(1)@T':\n                   'Hex(2)HexNAc(3)NeuAc(1)NeuGc(1)',\n                   'Hex(2)HexNAc(3)NeuAc(1)Sulf(1)@S':\n                   'Hex(2)HexNAc(3)NeuAc(1)Sulf(1)',\n                   'Hex(2)HexNAc(3)NeuAc(1)Sulf(1)@T':\n                   'Hex(2)HexNAc(3)NeuAc(1)Sulf(1)',\n                   'Hex(2)HexNAc(3)NeuAc(2)@S': 'Hex(2)HexNAc(3)NeuAc(2)',\n                   'Hex(2)HexNAc(3)NeuAc(2)@T': 'Hex(2)HexNAc(3)NeuAc(2)',\n                   'Hex(2)HexNAc(3)NeuAc(3)@S': 'Hex(2)HexNAc(3)NeuAc(3)',\n                   'Hex(2)HexNAc(3)NeuAc(3)@T': 'Hex(2)HexNAc(3)NeuAc(3)',\n                   'Hex(2)HexNAc(3)NeuGc(1)@S': 'Hex(2)HexNAc(3)NeuGc(1)',\n                   'Hex(2)HexNAc(3)NeuGc(1)@T': 'Hex(2)HexNAc(3)NeuGc(1)',\n                   'Hex(2)HexNAc(3)NeuGc(2)@S': 'Hex(2)HexNAc(3)NeuGc(2)',\n                   'Hex(2)HexNAc(3)NeuGc(2)@T': 'Hex(2)HexNAc(3)NeuGc(2)',\n                   'Hex(2)HexNAc(3)NeuGc(3)@S': 'Hex(2)HexNAc(3)NeuGc(3)',\n                   'Hex(2)HexNAc(3)NeuGc(3)@T': 'Hex(2)HexNAc(3)NeuGc(3)',\n                   'Hex(2)HexNAc(3)Sulf(1)@S': 'Hex(2)HexNAc(3)Sulf(1)',\n                   'Hex(2)HexNAc(3)Sulf(1)@T': 'Hex(2)HexNAc(3)Sulf(1)',\n                   'Hex(2)HexNAc(4)@N': 'Hex(2)HexNAc(4)',\n                   'Hex(2)HexNAc(4)@S': 'Hex(2)HexNAc(4)',\n                   'Hex(2)HexNAc(4)@T': 'Hex(2)HexNAc(4)',\n                   'Hex(2)HexNAc(4)NeuAc(1)@S': 'Hex(2)HexNAc(4)NeuAc(1)',\n                   'Hex(2)HexNAc(4)NeuAc(1)@T': 'Hex(2)HexNAc(4)NeuAc(1)',\n                   'Hex(2)HexNAc(5)@S': 'Hex(2)HexNAc(5)',\n                   'Hex(2)HexNAc(5)@T': 'Hex(2)HexNAc(5)',\n                   'Hex(2)NeuAc(1)@S': 'Hex(2)NeuAc(1)',\n                   'Hex(2)NeuAc(1)@T': 'Hex(2)NeuAc(1)',\n                   'Hex(2)Pent(2)@S': 'Hex(2)Pent(2)', 'Hex(2)Pent(2)@T':\n                   'Hex(2)Pent(2)', 'Hex(2)Pent(2)Me(1)@S':\n                   'Hex(2)Pent(2)Me(1)', 'Hex(2)Pent(2)Me(1)@T':\n                   'Hex(2)Pent(2)Me(1)', 'Hex(2)Sulf(1)@S':\n                   'Hex(2)Sulf(1)', 'Hex(2)Sulf(1)@T': 'Hex(2)Sulf(1)',\n                   'Hex(3)@N': 'Hex(3)', 'Hex(3)@S': 'Hex(3)', 'Hex(3)@T':\n                   'Hex(3)', 'Hex(3)HexNAc(1)@N': 'Hex(3)HexNAc(1)',\n                   'Hex(3)HexNAc(1)@S': 'Hex(3)HexNAc(1)',\n                   'Hex(3)HexNAc(1)@T': 'Hex(3)HexNAc(1)',\n                   'Hex(3)HexNAc(1)HexA(1)@S': 'Hex(3)HexNAc(1)HexA(1)',\n                   'Hex(3)HexNAc(1)HexA(1)@T': 'Hex(3)HexNAc(1)HexA(1)',\n                   'Hex(3)HexNAc(1)Me(1)@S': 'Hex(3)HexNAc(1)Me(1)',\n                   'Hex(3)HexNAc(1)Me(1)@T': 'Hex(3)HexNAc(1)Me(1)',\n                   'Hex(3)HexNAc(1)Pent(1)@N': 'Hex(3)HexNAc(1)Pent(1)',\n                   'Hex(3)HexNAc(2)@N': 'Hex(3)HexNAc(2)',\n                   'Hex(3)HexNAc(2)@S': 'Hex(3)HexNAc(2)',\n                   'Hex(3)HexNAc(2)@T': 'Hex(3)HexNAc(2)',\n                   'Hex(3)HexNAc(2)NeuAc(1)@N': 'Hex(3)HexNAc(2)NeuAc(1)',\n                   'Hex(3)HexNAc(2)NeuAc(2)@S': 'Hex(3)HexNAc(2)NeuAc(2)',\n                   'Hex(3)HexNAc(2)NeuAc(2)@T': 'Hex(3)HexNAc(2)NeuAc(2)',\n                   'Hex(3)HexNAc(2)Pent(1)@N': 'Hex(3)HexNAc(2)Pent(1)',\n                   'Hex(3)HexNAc(2)Phos(1)@N': 'Hex(3)HexNAc(2)Phos(1)',\n                   'Hex(3)HexNAc(3)@N': 'Hex(3)HexNAc(3)',\n                   'Hex(3)HexNAc(3)@S': 'Hex(3)HexNAc(3)',\n                   'Hex(3)HexNAc(3)@T': 'Hex(3)HexNAc(3)',\n                   'Hex(3)HexNAc(3)NeuAc(1)@S': 'Hex(3)HexNAc(3)NeuAc(1)',\n                   'Hex(3)HexNAc(3)NeuAc(1)@T': 'Hex(3)HexNAc(3)NeuAc(1)',\n                   'Hex(3)HexNAc(3)NeuAc(1)Sulf(1)@S':\n                   'Hex(3)HexNAc(3)NeuAc(1)Sulf(1)',\n                   'Hex(3)HexNAc(3)NeuAc(1)Sulf(1)@T':\n                   'Hex(3)HexNAc(3)NeuAc(1)Sulf(1)',\n                   'Hex(3)HexNAc(3)NeuAc(2)@S': 'Hex(3)HexNAc(3)NeuAc(2)',\n                   'Hex(3)HexNAc(3)NeuAc(2)@T': 'Hex(3)HexNAc(3)NeuAc(2)',\n                   'Hex(3)HexNAc(3)NeuAc(2)Sulf(1)@S':\n                   'Hex(3)HexNAc(3)NeuAc(2)Sulf(1)',\n                   'Hex(3)HexNAc(3)NeuAc(2)Sulf(1)@T':\n                   'Hex(3)HexNAc(3)NeuAc(2)Sulf(1)',\n                   'Hex(3)HexNAc(3)NeuAc(3)@S': 'Hex(3)HexNAc(3)NeuAc(3)',\n                   'Hex(3)HexNAc(3)NeuAc(3)@T': 'Hex(3)HexNAc(3)NeuAc(3)',\n                   'Hex(3)HexNAc(3)NeuGc(1)@S': 'Hex(3)HexNAc(3)NeuGc(1)',\n                   'Hex(3)HexNAc(3)NeuGc(1)@T': 'Hex(3)HexNAc(3)NeuGc(1)',\n                   'Hex(3)HexNAc(3)NeuGc(1)Sulf(1)@S':\n                   'Hex(3)HexNAc(3)NeuGc(1)Sulf(1)',\n                   'Hex(3)HexNAc(3)NeuGc(1)Sulf(1)@T':\n                   'Hex(3)HexNAc(3)NeuGc(1)Sulf(1)',\n                   'Hex(3)HexNAc(3)Pent(1)@N': 'Hex(3)HexNAc(3)Pent(1)',\n                   'Hex(3)HexNAc(3)Sulf(1)@N': 'Hex(3)HexNAc(3)Sulf(1)',\n                   'Hex(3)HexNAc(3)Sulf(1)@S': 'Hex(3)HexNAc(3)Sulf(1)',\n                   'Hex(3)HexNAc(3)Sulf(1)@T': 'Hex(3)HexNAc(3)Sulf(1)',\n                   'Hex(3)HexNAc(4)@N': 'Hex(3)HexNAc(4)',\n                   'Hex(3)HexNAc(4)@S': 'Hex(3)HexNAc(4)',\n                   'Hex(3)HexNAc(4)@T': 'Hex(3)HexNAc(4)',\n                   'Hex(3)HexNAc(4)NeuAc(1)@N': 'Hex(3)HexNAc(4)NeuAc(1)',\n                   'Hex(3)HexNAc(4)NeuAc(2)@N': 'Hex(3)HexNAc(4)NeuAc(2)',\n                   'Hex(3)HexNAc(4)Pent(1)@N': 'Hex(3)HexNAc(4)Pent(1)',\n                   'Hex(3)HexNAc(4)Sulf(1)@N': 'Hex(3)HexNAc(4)Sulf(1)',\n                   'Hex(3)HexNAc(5)@N': 'Hex(3)HexNAc(5)',\n                   'Hex(3)HexNAc(5)@S': 'Hex(3)HexNAc(5)',\n                   'Hex(3)HexNAc(5)@T': 'Hex(3)HexNAc(5)',\n                   'Hex(3)HexNAc(5)NeuAc(1)@N': 'Hex(3)HexNAc(5)NeuAc(1)',\n                   'Hex(3)HexNAc(5)Sulf(1)@N': 'Hex(3)HexNAc(5)Sulf(1)',\n                   'Hex(3)HexNAc(6)@N': 'Hex(3)HexNAc(6)',\n                   'Hex(3)HexNAc(6)@S': 'Hex(3)HexNAc(6)',\n                   'Hex(3)HexNAc(6)@T': 'Hex(3)HexNAc(6)',\n                   'Hex(3)HexNAc(6)NeuAc(1)@N': 'Hex(3)HexNAc(6)NeuAc(1)',\n                   'Hex(3)HexNAc(6)Sulf(1)@N': 'Hex(3)HexNAc(6)Sulf(1)',\n                   'Hex(3)HexNAc(6)Sulf(2)@N': 'Hex(3)HexNAc(6)Sulf(2)',\n                   'Hex(3)HexNAc(7)@N': 'Hex(3)HexNAc(7)',\n                   'Hex(3)HexNAc(7)Sulf(1)@N': 'Hex(3)HexNAc(7)Sulf(1)',\n                   'Hex(4)@S': 'Hex(4)', 'Hex(4)@T': 'Hex(4)',\n                   'Hex(4)HexA(1)@S': 'Hex(4)HexA(1)', 'Hex(4)HexA(1)@T':\n                   'Hex(4)HexA(1)', 'Hex(4)HexA(1)HexNAc(1)@S':\n                   'Hex(4)HexA(1)HexNAc(1)', 'Hex(4)HexA(1)HexNAc(1)@T':\n                   'Hex(4)HexA(1)HexNAc(1)', 'Hex(4)HexNAc(1)@N':\n                   'Hex(4)HexNAc(1)', 'Hex(4)HexNAc(1)@S':\n                   'Hex(4)HexNAc(1)', 'Hex(4)HexNAc(1)@T':\n                   'Hex(4)HexNAc(1)', 'Hex(4)HexNAc(2)@N':\n                   'Hex(4)HexNAc(2)', 'Hex(4)HexNAc(2)NeuAc(1)@N':\n                   'Hex(4)HexNAc(2)NeuAc(1)', 'Hex(4)HexNAc(2)NeuAc(1)@S':\n                   'Hex(4)HexNAc(2)NeuAc(1)', 'Hex(4)HexNAc(2)NeuAc(1)@T':\n                   'Hex(4)HexNAc(2)NeuAc(1)', 'Hex(4)HexNAc(2)Pent(1)@N':\n                   'Hex(4)HexNAc(2)Pent(1)', 'Hex(4)HexNAc(3)@N':\n                   'Hex(4)HexNAc(3)', 'Hex(4)HexNAc(3)@S':\n                   'Hex(4)HexNAc(3)', 'Hex(4)HexNAc(3)@T':\n                   'Hex(4)HexNAc(3)', 'Hex(4)HexNAc(3)NeuAc(1)@N':\n                   'Hex(4)HexNAc(3)NeuAc(1)', 'Hex(4)HexNAc(3)NeuAc(1)@S':\n                   'Hex(4)HexNAc(3)NeuAc(1)', 'Hex(4)HexNAc(3)NeuAc(1)@T':\n                   'Hex(4)HexNAc(3)NeuAc(1)', 'Hex(4)HexNAc(3)NeuAc(2)@N':\n                   'Hex(4)HexNAc(3)NeuAc(2)', 'Hex(4)HexNAc(3)NeuGc(1)@N':\n                   'Hex(4)HexNAc(3)NeuGc(1)', 'Hex(4)HexNAc(3)Pent(1)@N':\n                   'Hex(4)HexNAc(3)Pent(1)', 'Hex(4)HexNAc(4)@N':\n                   'Hex(4)HexNAc(4)', 'Hex(4)HexNAc(4)@S':\n                   'Hex(4)HexNAc(4)', 'Hex(4)HexNAc(4)@T':\n                   'Hex(4)HexNAc(4)', 'Hex(4)HexNAc(4)Me(2)Pent(1)@N':\n                   'Hex(4)HexNAc(4)Me(2)Pent(1)',\n                   'Hex(4)HexNAc(4)NeuAc(1)@N': 'Hex(4)HexNAc(4)NeuAc(1)',\n                   'Hex(4)HexNAc(4)NeuAc(1)@S': 'Hex(4)HexNAc(4)NeuAc(1)',\n                   'Hex(4)HexNAc(4)NeuAc(1)@T': 'Hex(4)HexNAc(4)NeuAc(1)',\n                   'Hex(4)HexNAc(4)NeuAc(1)Sulf(2)@S':\n                   'Hex(4)HexNAc(4)NeuAc(1)Sulf(2)',\n                   'Hex(4)HexNAc(4)NeuAc(1)Sulf(2)@T':\n                   'Hex(4)HexNAc(4)NeuAc(1)Sulf(2)',\n                   'Hex(4)HexNAc(4)NeuAc(1)Sulf(3)@S':\n                   'Hex(4)HexNAc(4)NeuAc(1)Sulf(3)',\n                   'Hex(4)HexNAc(4)NeuAc(1)Sulf(3)@T':\n                   'Hex(4)HexNAc(4)NeuAc(1)Sulf(3)',\n                   'Hex(4)HexNAc(4)NeuGc(1)@N': 'Hex(4)HexNAc(4)NeuGc(1)',\n                   'Hex(4)HexNAc(4)NeuGc(1)@S': 'Hex(4)HexNAc(4)NeuGc(1)',\n                   'Hex(4)HexNAc(4)NeuGc(1)@T': 'Hex(4)HexNAc(4)NeuGc(1)',\n                   'Hex(4)HexNAc(4)NeuGc(1)Sulf(2)@S':\n                   'Hex(4)HexNAc(4)NeuGc(1)Sulf(2)',\n                   'Hex(4)HexNAc(4)NeuGc(1)Sulf(2)@T':\n                   'Hex(4)HexNAc(4)NeuGc(1)Sulf(2)',\n                   'Hex(4)HexNAc(4)Pent(1)@N': 'Hex(4)HexNAc(4)Pent(1)',\n                   'Hex(4)HexNAc(4)Sulf(1)@N': 'Hex(4)HexNAc(4)Sulf(1)',\n                   'Hex(4)HexNAc(4)Sulf(2)@S': 'Hex(4)HexNAc(4)Sulf(2)',\n                   'Hex(4)HexNAc(4)Sulf(2)@T': 'Hex(4)HexNAc(4)Sulf(2)',\n                   'Hex(4)HexNAc(5)@N': 'Hex(4)HexNAc(5)',\n                   'Hex(4)HexNAc(5)NeuAc(1)@N': 'Hex(4)HexNAc(5)NeuAc(1)',\n                   'Hex(4)HexNAc(5)Sulf(1)@N': 'Hex(4)HexNAc(5)Sulf(1)',\n                   'Hex(4)HexNAc(6)@N': 'Hex(4)HexNAc(6)',\n                   'Hex(4)Phos(1)@S': 'Hex(4)Phos(1)', 'Hex(4)Phos(1)@T':\n                   'Hex(4)Phos(1)', 'Hex(5)@S': 'Hex(5)', 'Hex(5)@T':\n                   'Hex(5)', 'Hex(5)HexA(1)@S': 'Hex(5)HexA(1)',\n                   'Hex(5)HexA(1)@T': 'Hex(5)HexA(1)',\n                   'Hex(5)HexNAc(1)@N': 'Hex(5)HexNAc(1)',\n                   'Hex(5)HexNAc(1)@S': 'Hex(5)HexNAc(1)',\n                   'Hex(5)HexNAc(1)@T': 'Hex(5)HexNAc(1)',\n                   'Hex(5)HexNAc(2)@N': 'Hex(5)HexNAc(2)',\n                   'Hex(5)HexNAc(2)Phos(1)@N': 'Hex(5)HexNAc(2)Phos(1)',\n                   'Hex(5)HexNAc(3)@N': 'Hex(5)HexNAc(3)',\n                   'Hex(5)HexNAc(3)Pent(1)@N': 'Hex(5)HexNAc(3)Pent(1)',\n                   'Hex(5)HexNAc(4)@N': 'Hex(5)HexNAc(4)',\n                   'Hex(5)HexNAc(4)@S': 'Hex(5)HexNAc(4)',\n                   'Hex(5)HexNAc(4)@T': 'Hex(5)HexNAc(4)',\n                   'Hex(5)HexNAc(4)Me(2)Pent(1)@N':\n                   'Hex(5)HexNAc(4)Me(2)Pent(1)',\n                   'Hex(5)HexNAc(4)NeuAc(1)@N': 'Hex(5)HexNAc(4)NeuAc(1)',\n                   'Hex(5)HexNAc(4)NeuAc(1)Ac(1)@N':\n                   'Hex(5)HexNAc(4)NeuAc(1)Ac(1)',\n                   'Hex(5)HexNAc(4)NeuAc(1)Ac(2)@N':\n                   'Hex(5)HexNAc(4)NeuAc(1)Ac(2)',\n                   'Hex(5)HexNAc(4)NeuAc(1)Sulf(1)@N':\n                   'Hex(5)HexNAc(4)NeuAc(1)Sulf(1)',\n                   'Hex(5)HexNAc(4)NeuAc(2)@N': 'Hex(5)HexNAc(4)NeuAc(2)',\n                   'Hex(5)HexNAc(4)NeuGc(1)@N': 'Hex(5)HexNAc(4)NeuGc(1)',\n                   'Hex(5)HexNAc(4)Sulf(1)@N': 'Hex(5)HexNAc(4)Sulf(1)',\n                   'Hex(5)HexNAc(5)@N': 'Hex(5)HexNAc(5)',\n                   'Hex(5)HexNAc(5)@S': 'Hex(5)HexNAc(5)',\n                   'Hex(5)HexNAc(5)@T': 'Hex(5)HexNAc(5)',\n                   'Hex(5)Phos(1)@S': 'Hex(5)Phos(1)', 'Hex(5)Phos(1)@T':\n                   'Hex(5)Phos(1)', 'Hex(5)Phos(3)@S': 'Hex(5)Phos(3)',\n                   'Hex(5)Phos(3)@T': 'Hex(5)Phos(3)',\n                   'Hex(6)HexNAc(1)@N': 'Hex(6)HexNAc(1)',\n                   'Hex(6)HexNAc(2)@N': 'Hex(6)HexNAc(2)',\n                   'Hex(6)HexNAc(2)Phos(1)@N': 'Hex(6)HexNAc(2)Phos(1)',\n                   'Hex(6)HexNAc(3)@N': 'Hex(6)HexNAc(3)',\n                   'Hex(6)HexNAc(3)Phos(1)@N': 'Hex(6)HexNAc(3)Phos(1)',\n                   'Hex(6)HexNAc(4)@N': 'Hex(6)HexNAc(4)',\n                   'Hex(6)HexNAc(4)@S': 'Hex(6)HexNAc(4)',\n                   'Hex(6)HexNAc(4)@T': 'Hex(6)HexNAc(4)',\n                   'Hex(6)HexNAc(4)Me(3)@N': 'Hex(6)HexNAc(4)Me(3)',\n                   'Hex(6)HexNAc(4)Me(3)Pent(1)@N':\n                   'Hex(6)HexNAc(4)Me(3)Pent(1)', 'Hex(6)HexNAc(5)@N':\n                   'Hex(6)HexNAc(5)', 'Hex(6)Phos(1)@S': 'Hex(6)Phos(1)',\n                   'Hex(6)Phos(1)@T': 'Hex(6)Phos(1)', 'Hex(6)Phos(3)@S':\n                   'Hex(6)Phos(3)', 'Hex(6)Phos(3)@T': 'Hex(6)Phos(3)',\n                   'Hex(7)HexNAc(1)@N': 'Hex(7)HexNAc(1)',\n                   'Hex(7)HexNAc(2)@N': 'Hex(7)HexNAc(2)',\n                   'Hex(7)HexNAc(2)Phos(1)@N': 'Hex(7)HexNAc(2)Phos(1)',\n                   'Hex(7)HexNAc(2)Phos(2)@N': 'Hex(7)HexNAc(2)Phos(2)',\n                   'Hex(7)HexNAc(3)@N': 'Hex(7)HexNAc(3)',\n                   'Hex(7)HexNAc(3)Phos(1)@N': 'Hex(7)HexNAc(3)Phos(1)',\n                   'Hex(7)HexNAc(4)@N': 'Hex(7)HexNAc(4)',\n                   'Hex(7)Phos(3)@S': 'Hex(7)Phos(3)', 'Hex(7)Phos(3)@T':\n                   'Hex(7)Phos(3)', 'Hex(8)HexNAc(1)@N':\n                   'Hex(8)HexNAc(1)', 'Hex(8)HexNAc(2)@N':\n                   'Hex(8)HexNAc(2)', 'Hex(8)Phos(3)@S': 'Hex(8)Phos(3)',\n                   'Hex(8)Phos(3)@T': 'Hex(8)Phos(3)', 'Hex(9)@N':\n                   'Hex(9)', 'Hex(9)HexNAc(1)@N': 'Hex(9)HexNAc(1)',\n                   'Hex(9)HexNAc(2)@N': 'Hex(9)HexNAc(2)',\n                   'Hex(9)Phos(3)@S': 'Hex(9)Phos(3)', 'Hex(9)Phos(3)@T':\n                   'Hex(9)Phos(3)', 'Hex@Any N-term': 'Hex', 'Hex@C':\n                   'Hex', 'Hex@K': 'Hex', 'Hex@N': 'Hex', 'Hex@R': 'Hex',\n                   'Hex@S': 'Hex', 'Hex@T': 'Hex', 'Hex@W': 'Hex',\n                   'Hex@Y': 'Hex', 'HexA(2)HexNAc(3)@S':\n                   'HexA(2)HexNAc(3)', 'HexA(2)HexNAc(3)@T':\n                   'HexA(2)HexNAc(3)', 'HexN@K': 'HexN', 'HexN@N': 'HexN',\n                   'HexN@S': 'HexN', 'HexN@T': 'HexN', 'HexN@W': 'HexN',\n                   'HexNAc(1)Kdn(2)@S': 'HexNAc(1)Kdn(2)',\n                   'HexNAc(1)Kdn(2)@T': 'HexNAc(1)Kdn(2)',\n                   'HexNAc(1)NeuAc(1)@S': 'HexNAc(1)NeuAc(1)',\n                   'HexNAc(1)NeuAc(1)@T': 'HexNAc(1)NeuAc(1)',\n                   'HexNAc(1)NeuGc(1)@S': 'HexNAc(1)NeuGc(1)',\n                   'HexNAc(1)NeuGc(1)@T': 'HexNAc(1)NeuGc(1)',\n                   'HexNAc(1)NeuGc(2)@S': 'HexNAc(1)NeuGc(2)',\n                   'HexNAc(1)NeuGc(2)@T': 'HexNAc(1)NeuGc(2)',\n                   'HexNAc(1)dHex(1)@N': 'HexNAc(1)dHex(1)',\n                   'HexNAc(1)dHex(1)@S': 'HexNAc(1)dHex(1)',\n                   'HexNAc(1)dHex(1)@T': 'HexNAc(1)dHex(1)',\n                   'HexNAc(1)dHex(2)@N': 'HexNAc(1)dHex(2)',\n                   'HexNAc(2)@N': 'HexNAc(2)', 'HexNAc(2)@S': 'HexNAc(2)',\n                   'HexNAc(2)@T': 'HexNAc(2)', 'HexNAc(2)NeuAc(1)@S':\n                   'HexNAc(2)NeuAc(1)', 'HexNAc(2)NeuAc(1)@T':\n                   'HexNAc(2)NeuAc(1)', 'HexNAc(2)NeuAc(1)Sulf(1)@S':\n                   'HexNAc(2)NeuAc(1)Sulf(1)',\n                   'HexNAc(2)NeuAc(1)Sulf(1)@T':\n                   'HexNAc(2)NeuAc(1)Sulf(1)', 'HexNAc(2)NeuGc(1)@S':\n                   'HexNAc(2)NeuGc(1)', 'HexNAc(2)NeuGc(1)@T':\n                   'HexNAc(2)NeuGc(1)', 'HexNAc(2)Sulf(1)@S':\n                   'HexNAc(2)Sulf(1)', 'HexNAc(2)Sulf(1)@T':\n                   'HexNAc(2)Sulf(1)', 'HexNAc(2)dHex(1)@N':\n                   'HexNAc(2)dHex(1)', 'HexNAc(2)dHex(2)@N':\n                   'HexNAc(2)dHex(2)', 'HexNAc(3)@S': 'HexNAc(3)',\n                   'HexNAc(3)@T': 'HexNAc(3)', 'HexNAc(3)Sulf(1)@S':\n                   'HexNAc(3)Sulf(1)', 'HexNAc(3)Sulf(1)@T':\n                   'HexNAc(3)Sulf(1)', 'HexNAc(4)@S': 'HexNAc(4)',\n                   'HexNAc(4)@T': 'HexNAc(4)', 'HexNAc(5)@S': 'HexNAc(5)',\n                   'HexNAc(5)@T': 'HexNAc(5)', 'HexNAc@C': 'HexNAc',\n                   'HexNAc@N': 'HexNAc', 'HexNAc@S': 'HexNAc', 'HexNAc@T':\n                   'HexNAc', 'His+O(2)@H': 'His+O(2)', 'His->Ala@H':\n                   'His->Ala', 'His->Arg@H': 'His->Arg', 'His->Asn@H':\n                   'His->Asn', 'His->Asp@H': 'His->Asp', 'His->Cys@H':\n                   'His->Cys', 'His->Gln@H': 'His->Gln', 'His->Glu@H':\n                   'His->Glu', 'His->Gly@H': 'His->Gly', 'His->Lys@H':\n                   'His->Lys', 'His->Met@H': 'His->Met', 'His->Phe@H':\n                   'His->Phe', 'His->Pro@H': 'His->Pro', 'His->Ser@H':\n                   'His->Ser', 'His->Thr@H': 'His->Thr', 'His->Trp@H':\n                   'His->Trp', 'His->Tyr@H': 'His->Tyr', 'His->Val@H':\n                   'His->Val', 'His->Xle@H': 'His->Xle',\n                   'Homocysteic_acid@M': 'Homocysteic_acid',\n                   'Hydroxamic_acid@D': 'Hydroxamic_acid',\n                   'Hydroxamic_acid@E': 'Hydroxamic_acid',\n                   'Hydroxycinnamyl@C': 'Hydroxycinnamyl',\n                   'Hydroxyfarnesyl@C': 'Hydroxyfarnesyl',\n                   'Hydroxyheme@E': 'Hydroxyheme', 'Hydroxymethyl@N':\n                   'Hydroxymethyl', 'HydroxymethylOP@K':\n                   'HydroxymethylOP', 'Hydroxytrimethyl@K':\n                   'Hydroxytrimethyl', 'Hypusine@K': 'Hypusine', 'IASD@C':\n                   'IASD', 'IBTP@C': 'IBTP', 'ICAT-C:13C(9)@C':\n                   'ICAT-C:13C(9)', 'ICAT-C@C': 'ICAT-C',\n                   'ICAT-D:2H(8)@C': 'ICAT-D:2H(8)', 'ICAT-D@C': 'ICAT-D',\n                   'ICAT-G:2H(8)@C': 'ICAT-G:2H(8)', 'ICAT-G@C': 'ICAT-G',\n                   'ICAT-H:13C(6)@C': 'ICAT-H:13C(6)', 'ICAT-H@C':\n                   'ICAT-H', 'ICDID:2H(6)@C': 'ICDID:2H(6)', 'ICDID@C':\n                   'ICDID', 'ICPL:13C(6)2H(4)@Any N-term':\n                   'ICPL:13C(6)2H(4)', 'ICPL:13C(6)2H(4)@K':\n                   'ICPL:13C(6)2H(4)', 'ICPL:13C(6)2H(4)@Protein N-term':\n                   'ICPL:13C(6)2H(4)', 'ICPL:13C(6)@Any N-term':\n                   'ICPL:13C(6)', 'ICPL:13C(6)@K': 'ICPL:13C(6)',\n                   'ICPL:13C(6)@Protein N-term': 'ICPL:13C(6)',\n                   'ICPL:2H(4)@Any N-term': 'ICPL:2H(4)', 'ICPL:2H(4)@K':\n                   'ICPL:2H(4)', 'ICPL:2H(4)@Protein N-term':\n                   'ICPL:2H(4)', 'ICPL@Any N-term': 'ICPL', 'ICPL@K':\n                   'ICPL', 'ICPL@Protein N-term': 'ICPL', 'IDEnT@C':\n                   'IDEnT', 'IED-Biotin@C': 'IED-Biotin', 'IGBP:13C(2)@C':\n                   'IGBP:13C(2)', 'IGBP@C': 'IGBP', 'IMEHex(2)NeuAc(1)@K':\n                   'IMEHex(2)NeuAc(1)', 'IMID:2H(4)@K': 'IMID:2H(4)',\n                   'IMID@K': 'IMID', 'ISD_z+2_ion@Any N-term':\n                   'ISD_z+2_ion', 'Iminobiotin@Any N-term': 'Iminobiotin',\n                   'Iminobiotin@K': 'Iminobiotin', 'Iodo@H': 'Iodo',\n                   'Iodo@Y': 'Iodo', 'IodoU-AMP@F': 'IodoU-AMP', 'IodoU-\n                   AMP@W': 'IodoU-AMP', 'IodoU-AMP@Y': 'IodoU-AMP',\n                   'Iodoacetanilide:13C(6)@Any N-term':\n                   'Iodoacetanilide:13C(6)', 'Iodoacetanilide:13C(6)@C':\n                   'Iodoacetanilide:13C(6)', 'Iodoacetanilide:13C(6)@K':\n                   'Iodoacetanilide:13C(6)', 'Iodoacetanilide@Any N-term':\n                   'Iodoacetanilide', 'Iodoacetanilide@C':\n                   'Iodoacetanilide', 'Iodoacetanilide@K':\n                   'Iodoacetanilide', 'Isopropylphospho@S':\n                   'Isopropylphospho', 'Isopropylphospho@T':\n                   'Isopropylphospho', 'Isopropylphospho@Y':\n                   'Isopropylphospho', 'Kdo@S': 'Kdo', 'Kdo@T': 'Kdo',\n                   'LG-Hlactam-K@K': 'LG-Hlactam-K', 'LG-Hlactam-K@Protein\n                   N-term': 'LG-Hlactam-K', 'LG-Hlactam-R@R': 'LG-\n                   Hlactam-R', 'LG-anhydrolactam@Any N-term': 'LG-\n                   anhydrolactam', 'LG-anhydrolactam@K': 'LG-\n                   anhydrolactam', 'LG-anhyropyrrole@Any N-term': 'LG-\n                   anhyropyrrole', 'LG-anhyropyrrole@K': 'LG-\n                   anhyropyrrole', 'LG-lactam-K@K': 'LG-lactam-K', 'LG-\n                   lactam-K@Protein N-term': 'LG-lactam-K', 'LG-\n                   lactam-R@R': 'LG-lactam-R', 'LG-pyrrole@Any N-term':\n                   'LG-pyrrole', 'LG-pyrrole@C': 'LG-pyrrole', 'LG-\n                   pyrrole@K': 'LG-pyrrole', 'LRGG+dimethyl@K':\n                   'LRGG+dimethyl', 'LRGG+methyl@K': 'LRGG+methyl',\n                   'LRGG@K': 'LRGG', 'Label:13C(1)2H(3)+Oxidation@M':\n                   'Label:13C(1)2H(3)+Oxidation', 'Label:13C(1)2H(3)@M':\n                   'Label:13C(1)2H(3)', 'Label:13C(2)15N(2)@K':\n                   'Label:13C(2)15N(2)', 'Label:13C(3)15N(1)@A':\n                   'Label:13C(3)15N(1)', 'Label:13C(3)15N(1)@S':\n                   'Label:13C(3)15N(1)', 'Label:13C(3)@A': 'Label:13C(3)',\n                   'Label:13C(4)+Oxidation@M': 'Label:13C(4)+Oxidation',\n                   'Label:13C(4)15N(1)@D': 'Label:13C(4)15N(1)',\n                   'Label:13C(4)15N(2)+GG@K': 'Label:13C(4)15N(2)+GG',\n                   'Label:13C(4)@M': 'Label:13C(4)',\n                   'Label:13C(5)15N(1)@E': 'Label:13C(5)15N(1)',\n                   'Label:13C(5)15N(1)@M': 'Label:13C(5)15N(1)',\n                   'Label:13C(5)15N(1)@P': 'Label:13C(5)15N(1)',\n                   'Label:13C(5)15N(1)@V': 'Label:13C(5)15N(1)',\n                   'Label:13C(5)@P': 'Label:13C(5)',\n                   'Label:13C(6)+Acetyl@K': 'Label:13C(6)+Acetyl',\n                   'Label:13C(6)+Dimethyl@K': 'Label:13C(6)+Dimethyl',\n                   'Label:13C(6)+GG@K': 'Label:13C(6)+GG',\n                   'Label:13C(6)15N(1)@I': 'Label:13C(6)15N(1)',\n                   'Label:13C(6)15N(1)@L': 'Label:13C(6)15N(1)',\n                   'Label:13C(6)15N(2)+Acetyl@K':\n                   'Label:13C(6)15N(2)+Acetyl',\n                   'Label:13C(6)15N(2)+Dimethyl@K':\n                   'Label:13C(6)15N(2)+Dimethyl',\n                   'Label:13C(6)15N(2)+GG@K': 'Label:13C(6)15N(2)+GG',\n                   'Label:13C(6)15N(2)@K': 'Label:13C(6)15N(2)',\n                   'Label:13C(6)15N(4)+Dimethyl:2H(6)13C(2)@R':\n                   'Label:13C(6)15N(4)+Dimethyl:2H(6)13C(2)',\n                   'Label:13C(6)15N(4)+Dimethyl@R':\n                   'Label:13C(6)15N(4)+Dimethyl',\n                   'Label:13C(6)15N(4)+Methyl:2H(3)13C(1)@R':\n                   'Label:13C(6)15N(4)+Methyl:2H(3)13C(1)',\n                   'Label:13C(6)15N(4)+Methyl@R':\n                   'Label:13C(6)15N(4)+Methyl', 'Label:13C(6)15N(4)@R':\n                   'Label:13C(6)15N(4)', 'Label:13C(6)@I': 'Label:13C(6)',\n                   'Label:13C(6)@K': 'Label:13C(6)', 'Label:13C(6)@L':\n                   'Label:13C(6)', 'Label:13C(6)@R': 'Label:13C(6)',\n                   'Label:13C(9)+Phospho@Y': 'Label:13C(9)+Phospho',\n                   'Label:13C(9)15N(1)@F': 'Label:13C(9)15N(1)',\n                   'Label:13C(9)@F': 'Label:13C(9)', 'Label:13C(9)@Y':\n                   'Label:13C(9)', 'Label:15N(1)@A': 'Label:15N(1)',\n                   'Label:15N(1)@C': 'Label:15N(1)', 'Label:15N(1)@D':\n                   'Label:15N(1)', 'Label:15N(1)@E': 'Label:15N(1)',\n                   'Label:15N(1)@F': 'Label:15N(1)', 'Label:15N(1)@G':\n                   'Label:15N(1)', 'Label:15N(1)@I': 'Label:15N(1)',\n                   'Label:15N(1)@L': 'Label:15N(1)', 'Label:15N(1)@M':\n                   'Label:15N(1)', 'Label:15N(1)@P': 'Label:15N(1)',\n                   'Label:15N(1)@S': 'Label:15N(1)', 'Label:15N(1)@T':\n                   'Label:15N(1)', 'Label:15N(1)@V': 'Label:15N(1)',\n                   'Label:15N(1)@Y': 'Label:15N(1)',\n                   'Label:15N(2)2H(9)@K': 'Label:15N(2)2H(9)',\n                   'Label:15N(2)@K': 'Label:15N(2)', 'Label:15N(2)@N':\n                   'Label:15N(2)', 'Label:15N(2)@Q': 'Label:15N(2)',\n                   'Label:15N(2)@W': 'Label:15N(2)', 'Label:15N(3)@H':\n                   'Label:15N(3)', 'Label:15N(4)@R': 'Label:15N(4)',\n                   'Label:18O(1)@Any C-term': 'Label:18O(1)',\n                   'Label:18O(1)@S': 'Label:18O(1)', 'Label:18O(1)@T':\n                   'Label:18O(1)', 'Label:18O(1)@Y': 'Label:18O(1)',\n                   'Label:18O(2)@Any C-term': 'Label:18O(2)',\n                   'Label:2H(10)@L': 'Label:2H(10)',\n                   'Label:2H(3)+Oxidation@M': 'Label:2H(3)+Oxidation',\n                   'Label:2H(3)@L': 'Label:2H(3)', 'Label:2H(3)@M':\n                   'Label:2H(3)', 'Label:2H(4)+Acetyl@K':\n                   'Label:2H(4)+Acetyl', 'Label:2H(4)+GG@K':\n                   'Label:2H(4)+GG', 'Label:2H(4)13C(1)@R':\n                   'Label:2H(4)13C(1)', 'Label:2H(4)@A': 'Label:2H(4)',\n                   'Label:2H(4)@F': 'Label:2H(4)', 'Label:2H(4)@K':\n                   'Label:2H(4)', 'Label:2H(4)@U': 'Label:2H(4)',\n                   'Label:2H(4)@Y': 'Label:2H(4)', 'Label:2H(6)15N(1)@P':\n                   'Label:2H(6)15N(1)', 'Label:2H(7)15N(4)@R':\n                   'Label:2H(7)15N(4)', 'Label:2H(9)13C(6)15N(2)@K':\n                   'Label:2H(9)13C(6)15N(2)', 'Leu->MetOx@L':\n                   'Leu->MetOx', 'Lipoyl@K': 'Lipoyl', 'Lys->Ala@K':\n                   'Lys->Ala', 'Lys->Allysine@K': 'Lys->Allysine',\n                   'Lys->AminoadipicAcid@K': 'Lys->AminoadipicAcid',\n                   'Lys->Arg@K': 'Lys->Arg', 'Lys->Asn@K': 'Lys->Asn',\n                   'Lys->Asp@K': 'Lys->Asp', 'Lys->CamCys@K':\n                   'Lys->CamCys', 'Lys->Cys@K': 'Lys->Cys', 'Lys->Gln@K':\n                   'Lys->Gln', 'Lys->Glu@K': 'Lys->Glu', 'Lys->Gly@K':\n                   'Lys->Gly', 'Lys->His@K': 'Lys->His', 'Lys->Met@K':\n                   'Lys->Met', 'Lys->MetOx@K': 'Lys->MetOx', 'Lys->Phe@K':\n                   'Lys->Phe', 'Lys->Pro@K': 'Lys->Pro', 'Lys->Ser@K':\n                   'Lys->Ser', 'Lys->Thr@K': 'Lys->Thr', 'Lys->Trp@K':\n                   'Lys->Trp', 'Lys->Tyr@K': 'Lys->Tyr', 'Lys->Val@K':\n                   'Lys->Val', 'Lys->Xle@K': 'Lys->Xle', 'Lys-\n                   loss@K^Protein C-term': 'Lys-loss', 'Lys@Any N-term':\n                   'Lys', 'Lysbiotinhydrazide@K': 'Lysbiotinhydrazide',\n                   'MDCC@C': 'MDCC', 'MG-H1@R': 'MG-H1', 'MM-\n                   diphenylpentanone@C': 'MM-diphenylpentanone', 'MTSL@C':\n                   'MTSL', 'Maleimide-PEO2-Biotin@C': 'Maleimide-\n                   PEO2-Biotin', 'Malonyl@C': 'Malonyl', 'Malonyl@K':\n                   'Malonyl', 'Malonyl@S': 'Malonyl',\n                   'MeMePhosphorothioate@S': 'MeMePhosphorothioate',\n                   'Menadione-HQ@C': 'Menadione-HQ', 'Menadione-HQ@K':\n                   'Menadione-HQ', 'Menadione@C': 'Menadione',\n                   'Menadione@K': 'Menadione', 'MercaptoEthanol@S':\n                   'MercaptoEthanol', 'MercaptoEthanol@T':\n                   'MercaptoEthanol', 'MesitylOxide@H': 'MesitylOxide',\n                   'MesitylOxide@K': 'MesitylOxide', 'MesitylOxide@Protein\n                   N-term': 'MesitylOxide', 'Met->Aha@M': 'Met->Aha',\n                   'Met->Ala@M': 'Met->Ala', 'Met->Arg@M': 'Met->Arg',\n                   'Met->Asn@M': 'Met->Asn', 'Met->Asp@M': 'Met->Asp',\n                   'Met->AspSA@M': 'Met->AspSA', 'Met->Cys@M': 'Met->Cys',\n                   'Met->Gln@M': 'Met->Gln', 'Met->Glu@M': 'Met->Glu',\n                   'Met->Gly@M': 'Met->Gly', 'Met->His@M': 'Met->His',\n                   'Met->Hpg@M': 'Met->Hpg', 'Met->Hse@M^Any C-term':\n                   'Met->Hse', 'Met->Hsl@M^Any C-term': 'Met->Hsl',\n                   'Met->Lys@M': 'Met->Lys', 'Met->Phe@M': 'Met->Phe',\n                   'Met->Pro@M': 'Met->Pro', 'Met->Ser@M': 'Met->Ser',\n                   'Met->Thr@M': 'Met->Thr', 'Met->Trp@M': 'Met->Trp',\n                   'Met->Tyr@M': 'Met->Tyr', 'Met->Val@M': 'Met->Val',\n                   'Met->Xle@M': 'Met->Xle', 'Met-loss+Acetyl@M^Protein\n                   N-term': 'Met-loss+Acetyl', 'Met-loss@M^Protein\n                   N-term': 'Met-loss', 'Methamidophos-O@C':\n                   'Methamidophos-O', 'Methamidophos-O@H':\n                   'Methamidophos-O', 'Methamidophos-O@K':\n                   'Methamidophos-O', 'Methamidophos-O@S':\n                   'Methamidophos-O', 'Methamidophos-O@T':\n                   'Methamidophos-O', 'Methamidophos-O@Y':\n                   'Methamidophos-O', 'Methamidophos-S@C':\n                   'Methamidophos-S', 'Methamidophos-S@H':\n                   'Methamidophos-S', 'Methamidophos-S@K':\n                   'Methamidophos-S', 'Methamidophos-S@S':\n                   'Methamidophos-S', 'Methamidophos-S@T':\n                   'Methamidophos-S', 'Methamidophos-S@Y':\n                   'Methamidophos-S', 'Methyl+Acetyl:2H(3)@K':\n                   'Methyl+Acetyl:2H(3)', 'Methyl+Deamidated@N':\n                   'Methyl+Deamidated', 'Methyl+Deamidated@Q':\n                   'Methyl+Deamidated', 'Methyl-PEO12-Maleimide@C':\n                   'Methyl-PEO12-Maleimide', 'Methyl:2H(2)@Any N-term':\n                   'Methyl:2H(2)', 'Methyl:2H(2)@K': 'Methyl:2H(2)',\n                   'Methyl:2H(3)+Acetyl:2H(3)@K':\n                   'Methyl:2H(3)+Acetyl:2H(3)', 'Methyl:2H(3)13C(1)@Any\n                   N-term': 'Methyl:2H(3)13C(1)', 'Methyl:2H(3)13C(1)@K':\n                   'Methyl:2H(3)13C(1)', 'Methyl:2H(3)13C(1)@R':\n                   'Methyl:2H(3)13C(1)', 'Methyl:2H(3)@Anywhere':\n                   'Methyl:2H(3)', 'Methyl:2H(3)@D': 'Methyl:2H(3)',\n                   'Methyl:2H(3)@E': 'Methyl:2H(3)', 'Methyl:2H(3)@K':\n                   'Methyl:2H(3)', 'Methyl:2H(3)@R': 'Methyl:2H(3)',\n                   'Methyl@Any C-term': 'Methyl', 'Methyl@Any N-term':\n                   'Methyl', 'Methyl@C': 'Methyl', 'Methyl@D': 'Methyl',\n                   'Methyl@E': 'Methyl', 'Methyl@H': 'Methyl', 'Methyl@I':\n                   'Methyl', 'Methyl@K': 'Methyl', 'Methyl@L': 'Methyl',\n                   'Methyl@N': 'Methyl', 'Methyl@Protein N-term':\n                   'Methyl', 'Methyl@Q': 'Methyl', 'Methyl@R': 'Methyl',\n                   'Methyl@S': 'Methyl', 'Methyl@T': 'Methyl',\n                   'Methylamine@S': 'Methylamine', 'Methylamine@T':\n                   'Methylamine', 'Methylmalonylation@S':\n                   'Methylmalonylation', 'Methylphosphonate@S':\n                   'Methylphosphonate', 'Methylphosphonate@T':\n                   'Methylphosphonate', 'Methylphosphonate@Y':\n                   'Methylphosphonate', 'Methylpyrroline@K':\n                   'Methylpyrroline', 'Methylthio@Any N-term':\n                   'Methylthio', 'Methylthio@C': 'Methylthio',\n                   'Methylthio@D': 'Methylthio', 'Methylthio@K':\n                   'Methylthio', 'Methylthio@N': 'Methylthio',\n                   'Microcin@Protein C-term': 'Microcin',\n                   'MicrocinC7@Protein C-term': 'MicrocinC7',\n                   'Molybdopterin@C': 'Molybdopterin',\n                   'MolybdopterinGD+Delta:S(-1)Se(1)@C':\n                   'MolybdopterinGD+Delta:S(-1)Se(1)',\n                   'MolybdopterinGD@C': 'MolybdopterinGD',\n                   'MolybdopterinGD@D': 'MolybdopterinGD',\n                   'MolybdopterinGD@U': 'MolybdopterinGD', 'MurNAc@A':\n                   'MurNAc', 'Myristoleyl@G^Protein N-term':\n                   'Myristoleyl', 'Myristoyl+Delta:H(-4)@G^Protein\n                   N-term': 'Myristoyl+Delta:H(-4)', 'Myristoyl@C':\n                   'Myristoyl', 'Myristoyl@G^Any N-term': 'Myristoyl',\n                   'Myristoyl@K': 'Myristoyl', 'N-dimethylphosphate@S':\n                   'N-dimethylphosphate', 'NA-LNO2@C': 'NA-LNO2', 'NA-\n                   LNO2@H': 'NA-LNO2', 'NA-OA-NO2@C': 'NA-OA-NO2', 'NA-OA-\n                   NO2@H': 'NA-OA-NO2', 'NBS:13C(6)@W': 'NBS:13C(6)',\n                   'NBS@W': 'NBS', 'NDA@Any N-term': 'NDA', 'NDA@K':\n                   'NDA', 'NEIAA:2H(5)@C': 'NEIAA:2H(5)', 'NEIAA:2H(5)@Y':\n                   'NEIAA:2H(5)', 'NEIAA@C': 'NEIAA', 'NEIAA@Y': 'NEIAA',\n                   'NEM:2H(5)+H2O@C': 'NEM:2H(5)+H2O', 'NEM:2H(5)@C':\n                   'NEM:2H(5)', 'NEMsulfur@C': 'NEMsulfur',\n                   'NEMsulfurWater@C': 'NEMsulfurWater', 'NHS-LC-\n                   Biotin@Any N-term': 'NHS-LC-Biotin', 'NHS-LC-Biotin@K':\n                   'NHS-LC-Biotin', 'NHS-fluorescein@K': 'NHS-\n                   fluorescein', 'NIC@Any N-term': 'NIC', 'NIC@K': 'NIC',\n                   'NIPCAM@C': 'NIPCAM', 'NO_SMX_SEMD@C': 'NO_SMX_SEMD',\n                   'NO_SMX_SIMD@C': 'NO_SMX_SIMD', 'NO_SMX_SMCT@C':\n                   'NO_SMX_SMCT', 'NP40@Any N-term': 'NP40', 'NQIGG@K':\n                   'NQIGG', 'Nethylmaleimide+water@C':\n                   'Nethylmaleimide+water', 'Nethylmaleimide+water@K':\n                   'Nethylmaleimide+water', 'Nethylmaleimide@C':\n                   'Nethylmaleimide', 'NeuAc@N': 'NeuAc', 'NeuAc@S':\n                   'NeuAc', 'NeuAc@T': 'NeuAc', 'NeuGc@N': 'NeuGc',\n                   'NeuGc@S': 'NeuGc', 'NeuGc@T': 'NeuGc', 'Nitrene@Y':\n                   'Nitrene', 'Nitro@F': 'Nitro', 'Nitro@W': 'Nitro',\n                   'Nitro@Y': 'Nitro', 'Nitrosyl@C': 'Nitrosyl',\n                   'Nitrosyl@Y': 'Nitrosyl', 'Nmethylmaleimide+water@C':\n                   'Nmethylmaleimide+water', 'Nmethylmaleimide@C':\n                   'Nmethylmaleimide', 'Nmethylmaleimide@K':\n                   'Nmethylmaleimide', 'O-Dimethylphosphate@S':\n                   'O-Dimethylphosphate', 'O-Dimethylphosphate@T':\n                   'O-Dimethylphosphate', 'O-Dimethylphosphate@Y':\n                   'O-Dimethylphosphate', 'O-Et-N-diMePhospho@S': 'O-Et-N-\n                   diMePhospho', 'O-Isopropylmethylphosphonate@S':\n                   'O-Isopropylmethylphosphonate',\n                   'O-Isopropylmethylphosphonate@T':\n                   'O-Isopropylmethylphosphonate',\n                   'O-Isopropylmethylphosphonate@Y':\n                   'O-Isopropylmethylphosphonate', 'O-Methylphosphate@S':\n                   'O-Methylphosphate', 'O-Methylphosphate@T':\n                   'O-Methylphosphate', 'O-Methylphosphate@Y':\n                   'O-Methylphosphate', 'O-pinacolylmethylphosphonate@H':\n                   'O-pinacolylmethylphosphonate',\n                   'O-pinacolylmethylphosphonate@K':\n                   'O-pinacolylmethylphosphonate',\n                   'O-pinacolylmethylphosphonate@S':\n                   'O-pinacolylmethylphosphonate',\n                   'O-pinacolylmethylphosphonate@T':\n                   'O-pinacolylmethylphosphonate',\n                   'O-pinacolylmethylphosphonate@Y':\n                   'O-pinacolylmethylphosphonate', 'Octanoyl@C':\n                   'Octanoyl', 'Octanoyl@S': 'Octanoyl', 'Octanoyl@T':\n                   'Octanoyl', 'OxArgBiotin@R': 'OxArgBiotin',\n                   'OxArgBiotinRed@R': 'OxArgBiotinRed', 'OxLysBiotin@K':\n                   'OxLysBiotin', 'OxLysBiotinRed@K': 'OxLysBiotinRed',\n                   'OxProBiotin@P': 'OxProBiotin', 'OxProBiotinRed@P':\n                   'OxProBiotinRed', 'Oxidation+NEM@C': 'Oxidation+NEM',\n                   'Oxidation@C': 'Oxidation', 'Oxidation@D': 'Oxidation',\n                   'Oxidation@E': 'Oxidation', 'Oxidation@F': 'Oxidation',\n                   'Oxidation@G^Any C-term': 'Oxidation', 'Oxidation@H':\n                   'Oxidation', 'Oxidation@I': 'Oxidation', 'Oxidation@K':\n                   'Oxidation', 'Oxidation@L': 'Oxidation', 'Oxidation@M':\n                   'Oxidation', 'Oxidation@N': 'Oxidation', 'Oxidation@P':\n                   'Oxidation', 'Oxidation@Q': 'Oxidation', 'Oxidation@R':\n                   'Oxidation', 'Oxidation@S': 'Oxidation', 'Oxidation@T':\n                   'Oxidation', 'Oxidation@U': 'Oxidation', 'Oxidation@V':\n                   'Oxidation', 'Oxidation@W': 'Oxidation', 'Oxidation@Y':\n                   'Oxidation', 'PEITC@Any N-term': 'PEITC', 'PEITC@C':\n                   'PEITC', 'PEITC@K': 'PEITC', 'PEO-Iodoacetyl-LC-\n                   Biotin@C': 'PEO-Iodoacetyl-LC-Biotin', 'PET@S': 'PET',\n                   'PET@T': 'PET', 'PS_Hapten@C': 'PS_Hapten',\n                   'PS_Hapten@H': 'PS_Hapten', 'PS_Hapten@K': 'PS_Hapten',\n                   'Palmitoleyl@C': 'Palmitoleyl', 'Palmitoleyl@S':\n                   'Palmitoleyl', 'Palmitoleyl@T': 'Palmitoleyl',\n                   'Palmitoyl@C': 'Palmitoyl', 'Palmitoyl@K': 'Palmitoyl',\n                   'Palmitoyl@Protein N-term': 'Palmitoyl', 'Palmitoyl@S':\n                   'Palmitoyl', 'Palmitoyl@T': 'Palmitoyl',\n                   'Pent(1)HexNAc(1)@S': 'Pent(1)HexNAc(1)',\n                   'Pent(1)HexNAc(1)@T': 'Pent(1)HexNAc(1)', 'Pent(2)@S':\n                   'Pent(2)', 'Pent(2)@T': 'Pent(2)', 'Pentose@S':\n                   'Pentose', 'Pentose@T': 'Pentose', 'Pentylamine@Q':\n                   'Pentylamine', 'Phe->Ala@F': 'Phe->Ala', 'Phe->Arg@F':\n                   'Phe->Arg', 'Phe->Asn@F': 'Phe->Asn', 'Phe->Asp@F':\n                   'Phe->Asp', 'Phe->CamCys@F': 'Phe->CamCys',\n                   'Phe->Cys@F': 'Phe->Cys', 'Phe->Gln@F': 'Phe->Gln',\n                   'Phe->Glu@F': 'Phe->Glu', 'Phe->Gly@F': 'Phe->Gly',\n                   'Phe->His@F': 'Phe->His', 'Phe->Lys@F': 'Phe->Lys',\n                   'Phe->Met@F': 'Phe->Met', 'Phe->Pro@F': 'Phe->Pro',\n                   'Phe->Ser@F': 'Phe->Ser', 'Phe->Thr@F': 'Phe->Thr',\n                   'Phe->Trp@F': 'Phe->Trp', 'Phe->Tyr@F': 'Phe->Tyr',\n                   'Phe->Val@F': 'Phe->Val', 'Phe->Xle@F': 'Phe->Xle',\n                   'Phenylisocyanate:2H(5)@Any N-term':\n                   'Phenylisocyanate:2H(5)', 'Phenylisocyanate@Any\n                   N-term': 'Phenylisocyanate', 'Phospho@C': 'Phospho',\n                   'Phospho@D': 'Phospho', 'Phospho@E': 'Phospho',\n                   'Phospho@H': 'Phospho', 'Phospho@K': 'Phospho',\n                   'Phospho@R': 'Phospho', 'Phospho@S': 'Phospho',\n                   'Phospho@T': 'Phospho', 'Phospho@Y': 'Phospho',\n                   'PhosphoCytidine@S': 'PhosphoCytidine',\n                   'PhosphoCytidine@T': 'PhosphoCytidine',\n                   'PhosphoCytidine@Y': 'PhosphoCytidine',\n                   'PhosphoHex(2)@N': 'PhosphoHex(2)', 'PhosphoHex(2)@S':\n                   'PhosphoHex(2)', 'PhosphoHex(2)@T': 'PhosphoHex(2)',\n                   'PhosphoHex@S': 'PhosphoHex', 'PhosphoHex@T':\n                   'PhosphoHex', 'PhosphoHexNAc@S': 'PhosphoHexNAc',\n                   'PhosphoHexNAc@T': 'PhosphoHexNAc', 'PhosphoUridine@H':\n                   'PhosphoUridine', 'PhosphoUridine@Y': 'PhosphoUridine',\n                   'Phosphoadenosine@H': 'Phosphoadenosine',\n                   'Phosphoadenosine@K': 'Phosphoadenosine',\n                   'Phosphoadenosine@S': 'Phosphoadenosine',\n                   'Phosphoadenosine@T': 'Phosphoadenosine',\n                   'Phosphoadenosine@Y': 'Phosphoadenosine',\n                   'Phosphogluconoylation@Any N-term':\n                   'Phosphogluconoylation', 'Phosphogluconoylation@K':\n                   'Phosphogluconoylation', 'Phosphoguanosine@H':\n                   'Phosphoguanosine', 'Phosphoguanosine@K':\n                   'Phosphoguanosine', 'Phosphopantetheine@S':\n                   'Phosphopantetheine', 'Phosphopropargyl@S':\n                   'Phosphopropargyl', 'Phosphopropargyl@T':\n                   'Phosphopropargyl', 'Phosphopropargyl@Y':\n                   'Phosphopropargyl', 'PhosphoribosyldephosphoCoA@S':\n                   'PhosphoribosyldephosphoCoA', 'Phycocyanobilin@C':\n                   'Phycocyanobilin', 'Phycoerythrobilin@C':\n                   'Phycoerythrobilin', 'Phytochromobilin@C':\n                   'Phytochromobilin', 'Piperidine@Any N-term':\n                   'Piperidine', 'Piperidine@K': 'Piperidine',\n                   'Pro->Ala@P': 'Pro->Ala', 'Pro->Arg@P': 'Pro->Arg',\n                   'Pro->Asn@P': 'Pro->Asn', 'Pro->Asp@P': 'Pro->Asp',\n                   'Pro->Cys@P': 'Pro->Cys', 'Pro->Gln@P': 'Pro->Gln',\n                   'Pro->Glu@P': 'Pro->Glu', 'Pro->Gly@P': 'Pro->Gly',\n                   'Pro->HAVA@P': 'Pro->HAVA', 'Pro->His@P': 'Pro->His',\n                   'Pro->Lys@P': 'Pro->Lys', 'Pro->Met@P': 'Pro->Met',\n                   'Pro->Phe@P': 'Pro->Phe', 'Pro->Pyrrolidinone@P':\n                   'Pro->Pyrrolidinone', 'Pro->Pyrrolidone@P':\n                   'Pro->Pyrrolidone', 'Pro->Ser@P': 'Pro->Ser',\n                   'Pro->Thr@P': 'Pro->Thr', 'Pro->Trp@P': 'Pro->Trp',\n                   'Pro->Tyr@P': 'Pro->Tyr', 'Pro->Val@P': 'Pro->Val',\n                   'Pro->Xle@P': 'Pro->Xle', 'Pro->pyro-Glu@P':\n                   'Pro->pyro-Glu', 'Propargylamine@Any C-term':\n                   'Propargylamine', 'Propargylamine@D': 'Propargylamine',\n                   'Propargylamine@E': 'Propargylamine',\n                   'Propionamide:2H(3)@C': 'Propionamide:2H(3)',\n                   'Propionamide@Any N-term': 'Propionamide',\n                   'Propionamide@C': 'Propionamide', 'Propionamide@K':\n                   'Propionamide', 'Propionyl:13C(3)@Any N-term':\n                   'Propionyl:13C(3)', 'Propionyl:13C(3)@K':\n                   'Propionyl:13C(3)', 'Propionyl@Any N-term':\n                   'Propionyl', 'Propionyl@K': 'Propionyl',\n                   'Propionyl@Protein N-term': 'Propionyl', 'Propionyl@S':\n                   'Propionyl', 'Propionyl@T': 'Propionyl',\n                   'Propiophenone@C': 'Propiophenone', 'Propiophenone@H':\n                   'Propiophenone', 'Propiophenone@K': 'Propiophenone',\n                   'Propiophenone@R': 'Propiophenone', 'Propiophenone@S':\n                   'Propiophenone', 'Propiophenone@T': 'Propiophenone',\n                   'Propiophenone@W': 'Propiophenone', 'Propyl:2H(6)@Any\n                   N-term': 'Propyl:2H(6)', 'Propyl:2H(6)@K':\n                   'Propyl:2H(6)', 'Propyl@Any C-term': 'Propyl',\n                   'Propyl@Any N-term': 'Propyl', 'Propyl@D': 'Propyl',\n                   'Propyl@E': 'Propyl', 'Propyl@K': 'Propyl',\n                   'Propyl@Protein C-term': 'Propyl',\n                   'PropylNAGthiazoline@C': 'PropylNAGthiazoline',\n                   'Puromycin@Any C-term': 'Puromycin', 'PyMIC@Any\n                   N-term': 'PyMIC', 'PyridoxalPhosphate@K':\n                   'PyridoxalPhosphate', 'PyridoxalPhosphateH2@K':\n                   'PyridoxalPhosphateH2', 'Pyridylacetyl@Any N-term':\n                   'Pyridylacetyl', 'Pyridylacetyl@K': 'Pyridylacetyl',\n                   'Pyridylethyl@C': 'Pyridylethyl', 'Pyro-\n                   carbamidomethyl@C^Any N-term': 'Pyro-carbamidomethyl',\n                   'PyruvicAcidIminyl@C^Protein N-term':\n                   'PyruvicAcidIminyl', 'PyruvicAcidIminyl@K':\n                   'PyruvicAcidIminyl', 'PyruvicAcidIminyl@V^Protein\n                   N-term': 'PyruvicAcidIminyl', 'QAT:2H(3)@C':\n                   'QAT:2H(3)', 'QAT@C': 'QAT', 'QEQTGG@K': 'QEQTGG',\n                   'QQQTGG@K': 'QQQTGG', 'QTGG@K': 'QTGG', 'Quinone@W':\n                   'Quinone', 'Quinone@Y': 'Quinone', 'RNPXL@K^Any\n                   N-term': 'RNPXL', 'RNPXL@R^Any N-term': 'RNPXL',\n                   'Retinylidene@K': 'Retinylidene', 'SMA@Any N-term':\n                   'SMA', 'SMA@K': 'SMA', 'SPITC:13C(6)@Any N-term':\n                   'SPITC:13C(6)', 'SPITC:13C(6)@K': 'SPITC:13C(6)',\n                   'SPITC@Any N-term': 'SPITC', 'SPITC@K': 'SPITC',\n                   'SUMO2135@K': 'SUMO2135', 'SUMO3549@K': 'SUMO3549',\n                   'Saligenin@H': 'Saligenin', 'Saligenin@K': 'Saligenin',\n                   'Ser->Ala@S': 'Ser->Ala', 'Ser->Arg@S': 'Ser->Arg',\n                   'Ser->Asn@S': 'Ser->Asn', 'Ser->Asp@S': 'Ser->Asp',\n                   'Ser->Cys@S': 'Ser->Cys', 'Ser->Gln@S': 'Ser->Gln',\n                   'Ser->Glu@S': 'Ser->Glu', 'Ser->Gly@S': 'Ser->Gly',\n                   'Ser->His@S': 'Ser->His', 'Ser->LacticAcid@S^Protein\n                   N-term': 'Ser->LacticAcid', 'Ser->Lys@S': 'Ser->Lys',\n                   'Ser->Met@S': 'Ser->Met', 'Ser->Phe@S': 'Ser->Phe',\n                   'Ser->Pro@S': 'Ser->Pro', 'Ser->Thr@S': 'Ser->Thr',\n                   'Ser->Trp@S': 'Ser->Trp', 'Ser->Tyr@S': 'Ser->Tyr',\n                   'Ser->Val@S': 'Ser->Val', 'Ser->Xle@S': 'Ser->Xle',\n                   'Succinyl:13C(4)@Any N-term': 'Succinyl:13C(4)',\n                   'Succinyl:13C(4)@K': 'Succinyl:13C(4)',\n                   'Succinyl:2H(4)@Any N-term': 'Succinyl:2H(4)',\n                   'Succinyl:2H(4)@K': 'Succinyl:2H(4)', 'Succinyl@Any\n                   N-term': 'Succinyl', 'Succinyl@K': 'Succinyl',\n                   'Succinyl@Protein N-term': 'Succinyl',\n                   'SulfanilicAcid:13C(6)@Any C-term':\n                   'SulfanilicAcid:13C(6)', 'SulfanilicAcid:13C(6)@D':\n                   'SulfanilicAcid:13C(6)', 'SulfanilicAcid:13C(6)@E':\n                   'SulfanilicAcid:13C(6)', 'SulfanilicAcid@Any C-term':\n                   'SulfanilicAcid', 'SulfanilicAcid@D': 'SulfanilicAcid',\n                   'SulfanilicAcid@E': 'SulfanilicAcid', 'Sulfide@C':\n                   'Sulfide', 'Sulfide@D': 'Sulfide', 'Sulfide@W':\n                   'Sulfide', 'Sulfo-NHS-LC-LC-Biotin@Any N-term': 'Sulfo-\n                   NHS-LC-LC-Biotin', 'Sulfo-NHS-LC-LC-Biotin@K': 'Sulfo-\n                   NHS-LC-LC-Biotin', 'Sulfo@C': 'Sulfo', 'Sulfo@S':\n                   'Sulfo', 'Sulfo@T': 'Sulfo', 'Sulfo@Y': 'Sulfo',\n                   'SulfoGMBS@C': 'SulfoGMBS', 'SulfurDioxide@C':\n                   'SulfurDioxide', 'TAMRA-FP@S': 'TAMRA-FP', 'TAMRA-\n                   FP@Y': 'TAMRA-FP', 'TMAB:2H(9)@Any N-term':\n                   'TMAB:2H(9)', 'TMAB:2H(9)@K': 'TMAB:2H(9)', 'TMAB@Any\n                   N-term': 'TMAB', 'TMAB@K': 'TMAB', 'TMPP-Ac:13C(9)@Any\n                   N-term': 'TMPP-Ac:13C(9)', 'TMPP-Ac:13C(9)@K': 'TMPP-\n                   Ac:13C(9)', 'TMPP-Ac:13C(9)@Y': 'TMPP-Ac:13C(9)',\n                   'TMPP-Ac@Any N-term': 'TMPP-Ac', 'TMPP-Ac@K': 'TMPP-\n                   Ac', 'TMPP-Ac@Y': 'TMPP-Ac', 'TMT2plex@Any N-term':\n                   'TMT2plex', 'TMT2plex@H': 'TMT2plex', 'TMT2plex@K':\n                   'TMT2plex', 'TMT2plex@Protein N-term': 'TMT2plex',\n                   'TMT2plex@S': 'TMT2plex', 'TMT2plex@T': 'TMT2plex',\n                   'TMT6plex@Any N-term': 'TMT6plex', 'TMT6plex@H':\n                   'TMT6plex', 'TMT6plex@K': 'TMT6plex', 'TMT6plex@Protein\n                   N-term': 'TMT6plex', 'TMT6plex@S': 'TMT6plex',\n                   'TMT6plex@T': 'TMT6plex', 'TMT@Any N-term': 'TMT',\n                   'TMT@H': 'TMT', 'TMT@K': 'TMT', 'TMT@Protein N-term':\n                   'TMT', 'TMT@S': 'TMT', 'TMT@T': 'TMT', 'TMTpro@Any\n                   N-term': 'TMTpro', 'TMTpro@H': 'TMTpro', 'TMTpro@K':\n                   'TMTpro', 'TMTpro@Protein N-term': 'TMTpro',\n                   'TMTpro@S': 'TMTpro', 'TMTpro@T': 'TMTpro',\n                   'TMTpro_zero@Any N-term': 'TMTpro_zero',\n                   'TMTpro_zero@H': 'TMTpro_zero', 'TMTpro_zero@K':\n                   'TMTpro_zero', 'TMTpro_zero@Protein N-term':\n                   'TMTpro_zero', 'TMTpro_zero@S': 'TMTpro_zero',\n                   'TMTpro_zero@T': 'TMTpro_zero', 'TNBS@Any N-term':\n                   'TNBS', 'TNBS@K': 'TNBS', 'Thiadiazole@C':\n                   'Thiadiazole', 'Thiazolidine@C': 'Thiazolidine',\n                   'Thiazolidine@F': 'Thiazolidine', 'Thiazolidine@H':\n                   'Thiazolidine', 'Thiazolidine@K': 'Thiazolidine',\n                   'Thiazolidine@Protein N-term': 'Thiazolidine',\n                   'Thiazolidine@R': 'Thiazolidine', 'Thiazolidine@W':\n                   'Thiazolidine', 'Thiazolidine@Y': 'Thiazolidine',\n                   'Thiophos-S-S-biotin@S': 'Thiophos-S-S-biotin',\n                   'Thiophos-S-S-biotin@T': 'Thiophos-S-S-biotin',\n                   'Thiophos-S-S-biotin@Y': 'Thiophos-S-S-biotin',\n                   'Thiophospho@S': 'Thiophospho', 'Thiophospho@T':\n                   'Thiophospho', 'Thiophospho@Y': 'Thiophospho',\n                   'Thr->Ala@T': 'Thr->Ala', 'Thr->Arg@T': 'Thr->Arg',\n                   'Thr->Asn@T': 'Thr->Asn', 'Thr->Asp@T': 'Thr->Asp',\n                   'Thr->Cys@T': 'Thr->Cys', 'Thr->Gln@T': 'Thr->Gln',\n                   'Thr->Glu@T': 'Thr->Glu', 'Thr->Gly@T': 'Thr->Gly',\n                   'Thr->His@T': 'Thr->His', 'Thr->Lys@T': 'Thr->Lys',\n                   'Thr->Met@T': 'Thr->Met', 'Thr->Phe@T': 'Thr->Phe',\n                   'Thr->Pro@T': 'Thr->Pro', 'Thr->Ser@T': 'Thr->Ser',\n                   'Thr->Trp@T': 'Thr->Trp', 'Thr->Tyr@T': 'Thr->Tyr',\n                   'Thr->Val@T': 'Thr->Val', 'Thr->Xle@T': 'Thr->Xle',\n                   'Thrbiotinhydrazide@T': 'Thrbiotinhydrazide',\n                   'Thyroxine@Y': 'Thyroxine', 'Triiodo@Y': 'Triiodo',\n                   'Triiodothyronine@Y': 'Triiodothyronine',\n                   'Trimethyl:13C(3)2H(9)@K': 'Trimethyl:13C(3)2H(9)',\n                   'Trimethyl:13C(3)2H(9)@R': 'Trimethyl:13C(3)2H(9)',\n                   'Trimethyl:2H(9)@K': 'Trimethyl:2H(9)',\n                   'Trimethyl:2H(9)@R': 'Trimethyl:2H(9)',\n                   'Trimethyl@A^Protein N-term': 'Trimethyl',\n                   'Trimethyl@K': 'Trimethyl', 'Trimethyl@R': 'Trimethyl',\n                   'Trioxidation@C': 'Trioxidation', 'Trioxidation@F':\n                   'Trioxidation', 'Trioxidation@W': 'Trioxidation',\n                   'Trioxidation@Y': 'Trioxidation',\n                   'Tripalmitate@C^Protein N-term': 'Tripalmitate',\n                   'Tris@N': 'Tris', 'Triton@Any C-term': 'Triton',\n                   'Triton@Any N-term': 'Triton', 'Trp->Ala@W':\n                   'Trp->Ala', 'Trp->Arg@W': 'Trp->Arg', 'Trp->Asn@W':\n                   'Trp->Asn', 'Trp->Asp@W': 'Trp->Asp', 'Trp->Cys@W':\n                   'Trp->Cys', 'Trp->Gln@W': 'Trp->Gln', 'Trp->Glu@W':\n                   'Trp->Glu', 'Trp->Gly@W': 'Trp->Gly', 'Trp->His@W':\n                   'Trp->His', 'Trp->Hydroxykynurenin@W':\n                   'Trp->Hydroxykynurenin', 'Trp->Kynurenin@W':\n                   'Trp->Kynurenin', 'Trp->Lys@W': 'Trp->Lys',\n                   'Trp->Met@W': 'Trp->Met', 'Trp->Oxolactone@W':\n                   'Trp->Oxolactone', 'Trp->Phe@W': 'Trp->Phe',\n                   'Trp->Pro@W': 'Trp->Pro', 'Trp->Ser@W': 'Trp->Ser',\n                   'Trp->Thr@W': 'Trp->Thr', 'Trp->Tyr@W': 'Trp->Tyr',\n                   'Trp->Val@W': 'Trp->Val', 'Trp->Xle@W': 'Trp->Xle',\n                   'Tween20@Any N-term': 'Tween20', 'Tween80@Any C-term':\n                   'Tween80', 'Tyr->Ala@Y': 'Tyr->Ala', 'Tyr->Arg@Y':\n                   'Tyr->Arg', 'Tyr->Asn@Y': 'Tyr->Asn', 'Tyr->Asp@Y':\n                   'Tyr->Asp', 'Tyr->Cys@Y': 'Tyr->Cys', 'Tyr->Dha@Y':\n                   'Tyr->Dha', 'Tyr->Gln@Y': 'Tyr->Gln', 'Tyr->Glu@Y':\n                   'Tyr->Glu', 'Tyr->Gly@Y': 'Tyr->Gly', 'Tyr->His@Y':\n                   'Tyr->His', 'Tyr->Lys@Y': 'Tyr->Lys', 'Tyr->Met@Y':\n                   'Tyr->Met', 'Tyr->Phe@Y': 'Tyr->Phe', 'Tyr->Pro@Y':\n                   'Tyr->Pro', 'Tyr->Ser@Y': 'Tyr->Ser', 'Tyr->Thr@Y':\n                   'Tyr->Thr', 'Tyr->Trp@Y': 'Tyr->Trp', 'Tyr->Val@Y':\n                   'Tyr->Val', 'Tyr->Xle@Y': 'Tyr->Xle', 'Ub-Br2@C': 'Ub-\n                   Br2', 'Ub-VME@C': 'Ub-VME', 'Ub-amide@C': 'Ub-amide',\n                   'Ub-fluorescein@C': 'Ub-fluorescein', 'UgiJoullie@D':\n                   'UgiJoullie', 'UgiJoullie@E': 'UgiJoullie',\n                   'UgiJoullieProGly@D': 'UgiJoullieProGly',\n                   'UgiJoullieProGly@E': 'UgiJoullieProGly',\n                   'UgiJoullieProGlyProGly@D': 'UgiJoullieProGlyProGly',\n                   'UgiJoullieProGlyProGly@E': 'UgiJoullieProGlyProGly',\n                   'Unknown:162@Any C-term': 'Unknown:162',\n                   'Unknown:162@Any N-term': 'Unknown:162',\n                   'Unknown:162@D': 'Unknown:162', 'Unknown:162@E':\n                   'Unknown:162', 'Unknown:177@Any C-term': 'Unknown:177',\n                   'Unknown:177@Any N-term': 'Unknown:177',\n                   'Unknown:177@D': 'Unknown:177', 'Unknown:177@E':\n                   'Unknown:177', 'Unknown:210@Any C-term': 'Unknown:210',\n                   'Unknown:210@Any N-term': 'Unknown:210',\n                   'Unknown:210@D': 'Unknown:210', 'Unknown:210@E':\n                   'Unknown:210', 'Unknown:216@Any C-term': 'Unknown:216',\n                   'Unknown:216@Any N-term': 'Unknown:216',\n                   'Unknown:216@D': 'Unknown:216', 'Unknown:216@E':\n                   'Unknown:216', 'Unknown:234@Any C-term': 'Unknown:234',\n                   'Unknown:234@Any N-term': 'Unknown:234',\n                   'Unknown:234@D': 'Unknown:234', 'Unknown:234@E':\n                   'Unknown:234', 'Unknown:248@Any C-term': 'Unknown:248',\n                   'Unknown:248@Any N-term': 'Unknown:248',\n                   'Unknown:248@D': 'Unknown:248', 'Unknown:248@E':\n                   'Unknown:248', 'Unknown:250@Any C-term': 'Unknown:250',\n                   'Unknown:250@Any N-term': 'Unknown:250',\n                   'Unknown:250@D': 'Unknown:250', 'Unknown:250@E':\n                   'Unknown:250', 'Unknown:302@Any C-term': 'Unknown:302',\n                   'Unknown:302@Any N-term': 'Unknown:302',\n                   'Unknown:302@D': 'Unknown:302', 'Unknown:302@E':\n                   'Unknown:302', 'Unknown:306@Any C-term': 'Unknown:306',\n                   'Unknown:306@Any N-term': 'Unknown:306',\n                   'Unknown:306@D': 'Unknown:306', 'Unknown:306@E':\n                   'Unknown:306', 'Unknown:420@Any C-term': 'Unknown:420',\n                   'Unknown:420@Any N-term': 'Unknown:420', 'VFQQQTGG@K':\n                   'VFQQQTGG', 'VIEVYQEQTGG@K': 'VIEVYQEQTGG',\n                   'Val->Ala@V': 'Val->Ala', 'Val->Arg@V': 'Val->Arg',\n                   'Val->Asn@V': 'Val->Asn', 'Val->Asp@V': 'Val->Asp',\n                   'Val->Cys@V': 'Val->Cys', 'Val->Gln@V': 'Val->Gln',\n                   'Val->Glu@V': 'Val->Glu', 'Val->Gly@V': 'Val->Gly',\n                   'Val->His@V': 'Val->His', 'Val->Lys@V': 'Val->Lys',\n                   'Val->Met@V': 'Val->Met', 'Val->Phe@V': 'Val->Phe',\n                   'Val->Pro@V': 'Val->Pro', 'Val->Ser@V': 'Val->Ser',\n                   'Val->Thr@V': 'Val->Thr', 'Val->Trp@V': 'Val->Trp',\n                   'Val->Tyr@V': 'Val->Tyr', 'Val->Xle@V': 'Val->Xle',\n                   'Withaferin@C': 'Withaferin', 'Xle->Ala@I': 'Xle->Ala',\n                   'Xle->Ala@L': 'Xle->Ala', 'Xle->Arg@I': 'Xle->Arg',\n                   'Xle->Arg@L': 'Xle->Arg', 'Xle->Asn@I': 'Xle->Asn',\n                   'Xle->Asn@L': 'Xle->Asn', 'Xle->Asp@I': 'Xle->Asp',\n                   'Xle->Asp@L': 'Xle->Asp', 'Xle->Cys@I': 'Xle->Cys',\n                   'Xle->Cys@L': 'Xle->Cys', 'Xle->Gln@I': 'Xle->Gln',\n                   'Xle->Gln@L': 'Xle->Gln', 'Xle->Glu@I': 'Xle->Glu',\n                   'Xle->Glu@L': 'Xle->Glu', 'Xle->Gly@I': 'Xle->Gly',\n                   'Xle->Gly@L': 'Xle->Gly', 'Xle->His@I': 'Xle->His',\n                   'Xle->His@L': 'Xle->His', 'Xle->Lys@I': 'Xle->Lys',\n                   'Xle->Lys@L': 'Xle->Lys', 'Xle->Met@I': 'Xle->Met',\n                   'Xle->Met@L': 'Xle->Met', 'Xle->Phe@I': 'Xle->Phe',\n                   'Xle->Phe@L': 'Xle->Phe', 'Xle->Pro@I': 'Xle->Pro',\n                   'Xle->Pro@L': 'Xle->Pro', 'Xle->Ser@I': 'Xle->Ser',\n                   'Xle->Ser@L': 'Xle->Ser', 'Xle->Thr@I': 'Xle->Thr',\n                   'Xle->Thr@L': 'Xle->Thr', 'Xle->Trp@I': 'Xle->Trp',\n                   'Xle->Trp@L': 'Xle->Trp', 'Xle->Tyr@I': 'Xle->Tyr',\n                   'Xle->Tyr@L': 'Xle->Tyr', 'Xle->Val@I': 'Xle->Val',\n                   'Xle->Val@L': 'Xle->Val', 'Xlink:B10621@C':\n                   'Xlink:B10621', 'Xlink:BMOE@C': 'Xlink:BMOE',\n                   'Xlink:BS2G[113]@K': 'Xlink:BS2G[113]',\n                   'Xlink:BS2G[113]@Protein N-term': 'Xlink:BS2G[113]',\n                   'Xlink:BS2G[114]@K': 'Xlink:BS2G[114]',\n                   'Xlink:BS2G[114]@Protein N-term': 'Xlink:BS2G[114]',\n                   'Xlink:BS2G[217]@K': 'Xlink:BS2G[217]',\n                   'Xlink:BS2G[217]@Protein N-term': 'Xlink:BS2G[217]',\n                   'Xlink:BS2G[96]@K': 'Xlink:BS2G[96]',\n                   'Xlink:BS2G[96]@Protein N-term': 'Xlink:BS2G[96]',\n                   'Xlink:BuUrBu[111]@K': 'Xlink:BuUrBu[111]',\n                   'Xlink:BuUrBu[111]@Protein N-term':\n                   'Xlink:BuUrBu[111]', 'Xlink:BuUrBu[196]@K':\n                   'Xlink:BuUrBu[196]', 'Xlink:BuUrBu[196]@Protein\n                   N-term': 'Xlink:BuUrBu[196]', 'Xlink:BuUrBu[213]@K':\n                   'Xlink:BuUrBu[213]', 'Xlink:BuUrBu[213]@Protein\n                   N-term': 'Xlink:BuUrBu[213]', 'Xlink:BuUrBu[214]@K':\n                   'Xlink:BuUrBu[214]', 'Xlink:BuUrBu[214]@Protein\n                   N-term': 'Xlink:BuUrBu[214]', 'Xlink:BuUrBu[317]@K':\n                   'Xlink:BuUrBu[317]', 'Xlink:BuUrBu[317]@Protein\n                   N-term': 'Xlink:BuUrBu[317]', 'Xlink:BuUrBu[85]@K':\n                   'Xlink:BuUrBu[85]', 'Xlink:BuUrBu[85]@Protein N-term':\n                   'Xlink:BuUrBu[85]', 'Xlink:DFDNB@K': 'Xlink:DFDNB',\n                   'Xlink:DFDNB@N': 'Xlink:DFDNB', 'Xlink:DFDNB@Q':\n                   'Xlink:DFDNB', 'Xlink:DFDNB@R': 'Xlink:DFDNB',\n                   'Xlink:DMP[122]@K': 'Xlink:DMP[122]',\n                   'Xlink:DMP[122]@Protein N-term': 'Xlink:DMP[122]',\n                   'Xlink:DMP[139]@K': 'Xlink:DMP[139]',\n                   'Xlink:DMP[139]@Protein N-term': 'Xlink:DMP[139]',\n                   'Xlink:DMP[140]@K': 'Xlink:DMP[140]',\n                   'Xlink:DMP[140]@Protein N-term': 'Xlink:DMP[140]',\n                   'Xlink:DMP[154]@K': 'Xlink:DMP[154]',\n                   'Xlink:DMP[154]@Protein N-term': 'Xlink:DMP[154]',\n                   'Xlink:DSSO[104]@K': 'Xlink:DSSO[104]',\n                   'Xlink:DSSO[104]@Protein N-term': 'Xlink:DSSO[104]',\n                   'Xlink:DSSO[158]@K': 'Xlink:DSSO[158]',\n                   'Xlink:DSSO[158]@Protein N-term': 'Xlink:DSSO[158]',\n                   'Xlink:DSSO[175]@K': 'Xlink:DSSO[175]',\n                   'Xlink:DSSO[175]@Protein N-term': 'Xlink:DSSO[175]',\n                   'Xlink:DSSO[176]@K': 'Xlink:DSSO[176]',\n                   'Xlink:DSSO[176]@Protein N-term': 'Xlink:DSSO[176]',\n                   'Xlink:DSSO[279]@K': 'Xlink:DSSO[279]',\n                   'Xlink:DSSO[279]@Protein N-term': 'Xlink:DSSO[279]',\n                   'Xlink:DSSO[54]@K': 'Xlink:DSSO[54]',\n                   'Xlink:DSSO[54]@Protein N-term': 'Xlink:DSSO[54]',\n                   'Xlink:DSSO[86]@K': 'Xlink:DSSO[86]',\n                   'Xlink:DSSO[86]@Protein N-term': 'Xlink:DSSO[86]',\n                   'Xlink:DSS[138]@K': 'Xlink:DSS[138]',\n                   'Xlink:DSS[138]@Protein N-term': 'Xlink:DSS[138]',\n                   'Xlink:DSS[155]@K': 'Xlink:DSS[155]',\n                   'Xlink:DSS[155]@Protein N-term': 'Xlink:DSS[155]',\n                   'Xlink:DSS[156]@K': 'Xlink:DSS[156]',\n                   'Xlink:DSS[156]@Protein N-term': 'Xlink:DSS[156]',\n                   'Xlink:DSS[259]@K': 'Xlink:DSS[259]',\n                   'Xlink:DSS[259]@Protein N-term': 'Xlink:DSS[259]',\n                   'Xlink:DST[114]@K': 'Xlink:DST[114]',\n                   'Xlink:DST[114]@Protein N-term': 'Xlink:DST[114]',\n                   'Xlink:DST[132]@K': 'Xlink:DST[132]',\n                   'Xlink:DST[132]@Protein N-term': 'Xlink:DST[132]',\n                   'Xlink:DST[56]@K': 'Xlink:DST[56]',\n                   'Xlink:DST[56]@Protein N-term': 'Xlink:DST[56]',\n                   'Xlink:DTBP[172]@K': 'Xlink:DTBP[172]',\n                   'Xlink:DTBP[172]@Protein N-term': 'Xlink:DTBP[172]',\n                   'Xlink:DTBP[87]@K': 'Xlink:DTBP[87]',\n                   'Xlink:DTBP[87]@Protein N-term': 'Xlink:DTBP[87]',\n                   'Xlink:DTSSP[174]@K': 'Xlink:DTSSP[174]',\n                   'Xlink:DTSSP[174]@Protein N-term': 'Xlink:DTSSP[174]',\n                   'Xlink:DTSSP[192]@K': 'Xlink:DTSSP[192]',\n                   'Xlink:DTSSP[192]@Protein N-term': 'Xlink:DTSSP[192]',\n                   'Xlink:DTSSP[88]@K': 'Xlink:DTSSP[88]',\n                   'Xlink:DTSSP[88]@Protein N-term': 'Xlink:DTSSP[88]',\n                   'Xlink:EGS[115]@K': 'Xlink:EGS[115]',\n                   'Xlink:EGS[115]@Protein N-term': 'Xlink:EGS[115]',\n                   'Xlink:EGS[226]@K': 'Xlink:EGS[226]',\n                   'Xlink:EGS[226]@Protein N-term': 'Xlink:EGS[226]',\n                   'Xlink:EGS[244]@K': 'Xlink:EGS[244]',\n                   'Xlink:EGS[244]@Protein N-term': 'Xlink:EGS[244]',\n                   'Xlink:SMCC[219]@C': 'Xlink:SMCC[219]',\n                   'Xlink:SMCC[219]@K': 'Xlink:SMCC[219]',\n                   'Xlink:SMCC[219]@Protein N-term': 'Xlink:SMCC[219]',\n                   'Xlink:SMCC[237]@C': 'Xlink:SMCC[237]',\n                   'Xlink:SMCC[237]@K': 'Xlink:SMCC[237]',\n                   'Xlink:SMCC[237]@Protein N-term': 'Xlink:SMCC[237]',\n                   'Xlink:SMCC[321]@C': 'Xlink:SMCC[321]', 'ZGB@Any\n                   N-term': 'ZGB', 'ZGB@K': 'ZGB', 'ZQG@K': 'ZQG',\n                   'a-type-ion@Any C-term': 'a-type-ion', 'azole@C':\n                   'azole', 'azole@S': 'azole', 'benzylguanidine@K':\n                   'benzylguanidine', 'betaFNA@C': 'betaFNA', 'betaFNA@K':\n                   'betaFNA', 'biotinAcrolein298@C': 'biotinAcrolein298',\n                   'biotinAcrolein298@H': 'biotinAcrolein298',\n                   'biotinAcrolein298@K': 'biotinAcrolein298',\n                   'biotinAcrolein298@Protein N-term':\n                   'biotinAcrolein298', 'bisANS-sulfonates@K': 'bisANS-\n                   sulfonates', 'bisANS-sulfonates@S': 'bisANS-\n                   sulfonates', 'bisANS-sulfonates@T': 'bisANS-\n                   sulfonates', 'cGMP+RMP-loss@C': 'cGMP+RMP-loss',\n                   'cGMP+RMP-loss@S': 'cGMP+RMP-loss', 'cGMP@C': 'cGMP',\n                   'cGMP@S': 'cGMP', 'cysTMT6plex@C': 'cysTMT6plex',\n                   'cysTMT@C': 'cysTMT', 'dHex(1)Hex(1)@S':\n                   'dHex(1)Hex(1)', 'dHex(1)Hex(1)@T': 'dHex(1)Hex(1)',\n                   'dHex(1)Hex(1)HexA(1)HexNAc(3)@S':\n                   'dHex(1)Hex(1)HexA(1)HexNAc(3)',\n                   'dHex(1)Hex(1)HexA(1)HexNAc(3)@T':\n                   'dHex(1)Hex(1)HexA(1)HexNAc(3)',\n                   'dHex(1)Hex(1)HexNAc(1)Kdn(1)@S':\n                   'dHex(1)Hex(1)HexNAc(1)Kdn(1)',\n                   'dHex(1)Hex(1)HexNAc(1)Kdn(1)@T':\n                   'dHex(1)Hex(1)HexNAc(1)Kdn(1)',\n                   'dHex(1)Hex(1)HexNAc(1)NeuAc(1)@S':\n                   'dHex(1)Hex(1)HexNAc(1)NeuAc(1)',\n                   'dHex(1)Hex(1)HexNAc(1)NeuAc(1)@T':\n                   'dHex(1)Hex(1)HexNAc(1)NeuAc(1)',\n                   'dHex(1)Hex(1)HexNAc(1)NeuGc(1)@S':\n                   'dHex(1)Hex(1)HexNAc(1)NeuGc(1)',\n                   'dHex(1)Hex(1)HexNAc(1)NeuGc(1)@T':\n                   'dHex(1)Hex(1)HexNAc(1)NeuGc(1)',\n                   'dHex(1)Hex(1)HexNAc(2)Kdn(1)@S':\n                   'dHex(1)Hex(1)HexNAc(2)Kdn(1)',\n                   'dHex(1)Hex(1)HexNAc(2)Kdn(1)@T':\n                   'dHex(1)Hex(1)HexNAc(2)Kdn(1)',\n                   'dHex(1)Hex(1)HexNAc(2)NeuAc(1)@S':\n                   'dHex(1)Hex(1)HexNAc(2)NeuAc(1)',\n                   'dHex(1)Hex(1)HexNAc(2)NeuAc(1)@T':\n                   'dHex(1)Hex(1)HexNAc(2)NeuAc(1)',\n                   'dHex(1)Hex(1)HexNAc(2)NeuAc(1)Sulf(1)@S':\n                   'dHex(1)Hex(1)HexNAc(2)NeuAc(1)Sulf(1)',\n                   'dHex(1)Hex(1)HexNAc(2)NeuAc(1)Sulf(1)@T':\n                   'dHex(1)Hex(1)HexNAc(2)NeuAc(1)Sulf(1)',\n                   'dHex(1)Hex(1)HexNAc(2)NeuAc(2)@S':\n                   'dHex(1)Hex(1)HexNAc(2)NeuAc(2)',\n                   'dHex(1)Hex(1)HexNAc(2)NeuAc(2)@T':\n                   'dHex(1)Hex(1)HexNAc(2)NeuAc(2)',\n                   'dHex(1)Hex(1)HexNAc(2)Sulf(1)@S':\n                   'dHex(1)Hex(1)HexNAc(2)Sulf(1)',\n                   'dHex(1)Hex(1)HexNAc(2)Sulf(1)@T':\n                   'dHex(1)Hex(1)HexNAc(2)Sulf(1)',\n                   'dHex(1)Hex(1)HexNAc(3)@S': 'dHex(1)Hex(1)HexNAc(3)',\n                   'dHex(1)Hex(1)HexNAc(3)@T': 'dHex(1)Hex(1)HexNAc(3)',\n                   'dHex(1)Hex(1)HexNAc(3)NeuAc(1)@S':\n                   'dHex(1)Hex(1)HexNAc(3)NeuAc(1)',\n                   'dHex(1)Hex(1)HexNAc(3)NeuAc(1)@T':\n                   'dHex(1)Hex(1)HexNAc(3)NeuAc(1)',\n                   'dHex(1)Hex(1)HexNAc(3)NeuAc(1)Sulf(1)@S':\n                   'dHex(1)Hex(1)HexNAc(3)NeuAc(1)Sulf(1)',\n                   'dHex(1)Hex(1)HexNAc(3)NeuAc(1)Sulf(1)@T':\n                   'dHex(1)Hex(1)HexNAc(3)NeuAc(1)Sulf(1)',\n                   'dHex(1)Hex(1)HexNAc(3)NeuGc(1)@S':\n                   'dHex(1)Hex(1)HexNAc(3)NeuGc(1)',\n                   'dHex(1)Hex(1)HexNAc(3)NeuGc(1)@T':\n                   'dHex(1)Hex(1)HexNAc(3)NeuGc(1)',\n                   'dHex(1)Hex(1)HexNAc(3)Sulf(1)@S':\n                   'dHex(1)Hex(1)HexNAc(3)Sulf(1)',\n                   'dHex(1)Hex(1)HexNAc(3)Sulf(1)@T':\n                   'dHex(1)Hex(1)HexNAc(3)Sulf(1)',\n                   'dHex(1)Hex(1)HexNAc(4)@S': 'dHex(1)Hex(1)HexNAc(4)',\n                   'dHex(1)Hex(1)HexNAc(4)@T': 'dHex(1)Hex(1)HexNAc(4)',\n                   'dHex(1)Hex(2)@S': 'dHex(1)Hex(2)', 'dHex(1)Hex(2)@T':\n                   'dHex(1)Hex(2)', 'dHex(1)Hex(2)HexA(1)@S':\n                   'dHex(1)Hex(2)HexA(1)', 'dHex(1)Hex(2)HexA(1)@T':\n                   'dHex(1)Hex(2)HexA(1)',\n                   'dHex(1)Hex(2)HexA(1)HexNAc(1)@S':\n                   'dHex(1)Hex(2)HexA(1)HexNAc(1)',\n                   'dHex(1)Hex(2)HexA(1)HexNAc(1)@T':\n                   'dHex(1)Hex(2)HexA(1)HexNAc(1)',\n                   'dHex(1)Hex(2)HexA(1)HexNAc(1)Sulf(1)@S':\n                   'dHex(1)Hex(2)HexA(1)HexNAc(1)Sulf(1)',\n                   'dHex(1)Hex(2)HexA(1)HexNAc(1)Sulf(1)@T':\n                   'dHex(1)Hex(2)HexA(1)HexNAc(1)Sulf(1)',\n                   'dHex(1)Hex(2)HexA(1)HexNAc(2)@S':\n                   'dHex(1)Hex(2)HexA(1)HexNAc(2)',\n                   'dHex(1)Hex(2)HexA(1)HexNAc(2)@T':\n                   'dHex(1)Hex(2)HexA(1)HexNAc(2)',\n                   'dHex(1)Hex(2)HexNAc(1)@S': 'dHex(1)Hex(2)HexNAc(1)',\n                   'dHex(1)Hex(2)HexNAc(1)@T': 'dHex(1)Hex(2)HexNAc(1)',\n                   'dHex(1)Hex(2)HexNAc(1)NeuAc(2)@S':\n                   'dHex(1)Hex(2)HexNAc(1)NeuAc(2)',\n                   'dHex(1)Hex(2)HexNAc(1)NeuAc(2)@T':\n                   'dHex(1)Hex(2)HexNAc(1)NeuAc(2)',\n                   'dHex(1)Hex(2)HexNAc(1)Sulf(1)@S':\n                   'dHex(1)Hex(2)HexNAc(1)Sulf(1)',\n                   'dHex(1)Hex(2)HexNAc(1)Sulf(1)@T':\n                   'dHex(1)Hex(2)HexNAc(1)Sulf(1)',\n                   'dHex(1)Hex(2)HexNAc(2)NeuAc(1)Sulf(1)@S':\n                   'dHex(1)Hex(2)HexNAc(2)NeuAc(1)Sulf(1)',\n                   'dHex(1)Hex(2)HexNAc(2)NeuAc(1)Sulf(1)@T':\n                   'dHex(1)Hex(2)HexNAc(2)NeuAc(1)Sulf(1)',\n                   'dHex(1)Hex(2)HexNAc(2)NeuAc(2)@S':\n                   'dHex(1)Hex(2)HexNAc(2)NeuAc(2)',\n                   'dHex(1)Hex(2)HexNAc(2)NeuAc(2)@T':\n                   'dHex(1)Hex(2)HexNAc(2)NeuAc(2)',\n                   'dHex(1)Hex(2)HexNAc(2)NeuAc(2)Sulf(1)@S':\n                   'dHex(1)Hex(2)HexNAc(2)NeuAc(2)Sulf(1)',\n                   'dHex(1)Hex(2)HexNAc(2)NeuAc(2)Sulf(1)@T':\n                   'dHex(1)Hex(2)HexNAc(2)NeuAc(2)Sulf(1)',\n                   'dHex(1)Hex(2)HexNAc(2)NeuGc(1)@N':\n                   'dHex(1)Hex(2)HexNAc(2)NeuGc(1)',\n                   'dHex(1)Hex(2)HexNAc(2)NeuGc(1)@S':\n                   'dHex(1)Hex(2)HexNAc(2)NeuGc(1)',\n                   'dHex(1)Hex(2)HexNAc(2)NeuGc(1)@T':\n                   'dHex(1)Hex(2)HexNAc(2)NeuGc(1)',\n                   'dHex(1)Hex(2)HexNAc(2)NeuGc(2)@S':\n                   'dHex(1)Hex(2)HexNAc(2)NeuGc(2)',\n                   'dHex(1)Hex(2)HexNAc(2)NeuGc(2)@T':\n                   'dHex(1)Hex(2)HexNAc(2)NeuGc(2)',\n                   'dHex(1)Hex(2)HexNAc(2)NeuGc(3)@S':\n                   'dHex(1)Hex(2)HexNAc(2)NeuGc(3)',\n                   'dHex(1)Hex(2)HexNAc(2)NeuGc(3)@T':\n                   'dHex(1)Hex(2)HexNAc(2)NeuGc(3)',\n                   'dHex(1)Hex(2)HexNAc(2)Pent(1)@N':\n                   'dHex(1)Hex(2)HexNAc(2)Pent(1)',\n                   'dHex(1)Hex(2)HexNAc(2)Sulf(1)@S':\n                   'dHex(1)Hex(2)HexNAc(2)Sulf(1)',\n                   'dHex(1)Hex(2)HexNAc(2)Sulf(1)@T':\n                   'dHex(1)Hex(2)HexNAc(2)Sulf(1)',\n                   'dHex(1)Hex(2)HexNAc(3)@N': 'dHex(1)Hex(2)HexNAc(3)',\n                   'dHex(1)Hex(2)HexNAc(3)@S': 'dHex(1)Hex(2)HexNAc(3)',\n                   'dHex(1)Hex(2)HexNAc(3)@T': 'dHex(1)Hex(2)HexNAc(3)',\n                   'dHex(1)Hex(2)HexNAc(3)NeuAc(1)@S':\n                   'dHex(1)Hex(2)HexNAc(3)NeuAc(1)',\n                   'dHex(1)Hex(2)HexNAc(3)NeuAc(1)@T':\n                   'dHex(1)Hex(2)HexNAc(3)NeuAc(1)',\n                   'dHex(1)Hex(2)HexNAc(3)NeuAc(1)Sulf(1)@S':\n                   'dHex(1)Hex(2)HexNAc(3)NeuAc(1)Sulf(1)',\n                   'dHex(1)Hex(2)HexNAc(3)NeuAc(1)Sulf(1)@T':\n                   'dHex(1)Hex(2)HexNAc(3)NeuAc(1)Sulf(1)',\n                   'dHex(1)Hex(2)HexNAc(3)Sulf(1)@S':\n                   'dHex(1)Hex(2)HexNAc(3)Sulf(1)',\n                   'dHex(1)Hex(2)HexNAc(3)Sulf(1)@T':\n                   'dHex(1)Hex(2)HexNAc(3)Sulf(1)',\n                   'dHex(1)Hex(2)HexNAc(4)@N': 'dHex(1)Hex(2)HexNAc(4)',\n                   'dHex(1)Hex(2)HexNAc(4)@S': 'dHex(1)Hex(2)HexNAc(4)',\n                   'dHex(1)Hex(2)HexNAc(4)@T': 'dHex(1)Hex(2)HexNAc(4)',\n                   'dHex(1)Hex(2)HexNAc(4)NeuAc(1)@S':\n                   'dHex(1)Hex(2)HexNAc(4)NeuAc(1)',\n                   'dHex(1)Hex(2)HexNAc(4)NeuAc(1)@T':\n                   'dHex(1)Hex(2)HexNAc(4)NeuAc(1)',\n                   'dHex(1)Hex(2)HexNAc(4)NeuAc(2)@S':\n                   'dHex(1)Hex(2)HexNAc(4)NeuAc(2)',\n                   'dHex(1)Hex(2)HexNAc(4)NeuAc(2)@T':\n                   'dHex(1)Hex(2)HexNAc(4)NeuAc(2)',\n                   'dHex(1)Hex(2)HexNAc(4)Sulf(2)@S':\n                   'dHex(1)Hex(2)HexNAc(4)Sulf(2)',\n                   'dHex(1)Hex(2)HexNAc(4)Sulf(2)@T':\n                   'dHex(1)Hex(2)HexNAc(4)Sulf(2)', 'dHex(1)Hex(3)@S':\n                   'dHex(1)Hex(3)', 'dHex(1)Hex(3)@T': 'dHex(1)Hex(3)',\n                   'dHex(1)Hex(3)HexA(1)HexNAc(1)@S':\n                   'dHex(1)Hex(3)HexA(1)HexNAc(1)',\n                   'dHex(1)Hex(3)HexA(1)HexNAc(1)@T':\n                   'dHex(1)Hex(3)HexA(1)HexNAc(1)',\n                   'dHex(1)Hex(3)HexA(1)HexNAc(1)Sulf(1)@S':\n                   'dHex(1)Hex(3)HexA(1)HexNAc(1)Sulf(1)',\n                   'dHex(1)Hex(3)HexA(1)HexNAc(1)Sulf(1)@T':\n                   'dHex(1)Hex(3)HexA(1)HexNAc(1)Sulf(1)',\n                   'dHex(1)Hex(3)HexA(1)HexNAc(2)@S':\n                   'dHex(1)Hex(3)HexA(1)HexNAc(2)',\n                   'dHex(1)Hex(3)HexA(1)HexNAc(2)@T':\n                   'dHex(1)Hex(3)HexA(1)HexNAc(2)',\n                   'dHex(1)Hex(3)HexA(1)HexNAc(2)Sulf(1)@S':\n                   'dHex(1)Hex(3)HexA(1)HexNAc(2)Sulf(1)',\n                   'dHex(1)Hex(3)HexA(1)HexNAc(2)Sulf(1)@T':\n                   'dHex(1)Hex(3)HexA(1)HexNAc(2)Sulf(1)',\n                   'dHex(1)Hex(3)HexA(1)HexNAc(3)Sulf(1)@S':\n                   'dHex(1)Hex(3)HexA(1)HexNAc(3)Sulf(1)',\n                   'dHex(1)Hex(3)HexA(1)HexNAc(3)Sulf(1)@T':\n                   'dHex(1)Hex(3)HexA(1)HexNAc(3)Sulf(1)',\n                   'dHex(1)Hex(3)HexA(2)HexNAc(2)@S':\n                   'dHex(1)Hex(3)HexA(2)HexNAc(2)',\n                   'dHex(1)Hex(3)HexA(2)HexNAc(2)@T':\n                   'dHex(1)Hex(3)HexA(2)HexNAc(2)',\n                   'dHex(1)Hex(3)HexNAc(1)@S': 'dHex(1)Hex(3)HexNAc(1)',\n                   'dHex(1)Hex(3)HexNAc(1)@T': 'dHex(1)Hex(3)HexNAc(1)',\n                   'dHex(1)Hex(3)HexNAc(1)Sulf(1)@S':\n                   'dHex(1)Hex(3)HexNAc(1)Sulf(1)',\n                   'dHex(1)Hex(3)HexNAc(1)Sulf(1)@T':\n                   'dHex(1)Hex(3)HexNAc(1)Sulf(1)',\n                   'dHex(1)Hex(3)HexNAc(2)@N': 'dHex(1)Hex(3)HexNAc(2)',\n                   'dHex(1)Hex(3)HexNAc(2)@S': 'dHex(1)Hex(3)HexNAc(2)',\n                   'dHex(1)Hex(3)HexNAc(2)@T': 'dHex(1)Hex(3)HexNAc(2)',\n                   'dHex(1)Hex(3)HexNAc(2)NeuGc(1)@S':\n                   'dHex(1)Hex(3)HexNAc(2)NeuGc(1)',\n                   'dHex(1)Hex(3)HexNAc(2)NeuGc(1)@T':\n                   'dHex(1)Hex(3)HexNAc(2)NeuGc(1)',\n                   'dHex(1)Hex(3)HexNAc(2)Pent(1)@N':\n                   'dHex(1)Hex(3)HexNAc(2)Pent(1)',\n                   'dHex(1)Hex(3)HexNAc(2)Sulf(1)@N':\n                   'dHex(1)Hex(3)HexNAc(2)Sulf(1)',\n                   'dHex(1)Hex(3)HexNAc(2)Sulf(1)@S':\n                   'dHex(1)Hex(3)HexNAc(2)Sulf(1)',\n                   'dHex(1)Hex(3)HexNAc(2)Sulf(1)@T':\n                   'dHex(1)Hex(3)HexNAc(2)Sulf(1)',\n                   'dHex(1)Hex(3)HexNAc(3)@N': 'dHex(1)Hex(3)HexNAc(3)',\n                   'dHex(1)Hex(3)HexNAc(3)@S': 'dHex(1)Hex(3)HexNAc(3)',\n                   'dHex(1)Hex(3)HexNAc(3)@T': 'dHex(1)Hex(3)HexNAc(3)',\n                   'dHex(1)Hex(3)HexNAc(3)NeuAc(2)@S':\n                   'dHex(1)Hex(3)HexNAc(3)NeuAc(2)',\n                   'dHex(1)Hex(3)HexNAc(3)NeuAc(2)@T':\n                   'dHex(1)Hex(3)HexNAc(3)NeuAc(2)',\n                   'dHex(1)Hex(3)HexNAc(3)Pent(1)@N':\n                   'dHex(1)Hex(3)HexNAc(3)Pent(1)',\n                   'dHex(1)Hex(3)HexNAc(3)Pent(2)@N':\n                   'dHex(1)Hex(3)HexNAc(3)Pent(2)',\n                   'dHex(1)Hex(3)HexNAc(3)Pent(3)@N':\n                   'dHex(1)Hex(3)HexNAc(3)Pent(3)',\n                   'dHex(1)Hex(3)HexNAc(3)Sulf(1)@S':\n                   'dHex(1)Hex(3)HexNAc(3)Sulf(1)',\n                   'dHex(1)Hex(3)HexNAc(3)Sulf(1)@T':\n                   'dHex(1)Hex(3)HexNAc(3)Sulf(1)',\n                   'dHex(1)Hex(3)HexNAc(4)@N': 'dHex(1)Hex(3)HexNAc(4)',\n                   'dHex(1)Hex(3)HexNAc(4)@S': 'dHex(1)Hex(3)HexNAc(4)',\n                   'dHex(1)Hex(3)HexNAc(4)@T': 'dHex(1)Hex(3)HexNAc(4)',\n                   'dHex(1)Hex(3)HexNAc(4)NeuAc(1)@N':\n                   'dHex(1)Hex(3)HexNAc(4)NeuAc(1)',\n                   'dHex(1)Hex(3)HexNAc(4)Pent(1)@N':\n                   'dHex(1)Hex(3)HexNAc(4)Pent(1)',\n                   'dHex(1)Hex(3)HexNAc(4)Pent(2)@N':\n                   'dHex(1)Hex(3)HexNAc(4)Pent(2)',\n                   'dHex(1)Hex(3)HexNAc(4)Pent(3)@N':\n                   'dHex(1)Hex(3)HexNAc(4)Pent(3)',\n                   'dHex(1)Hex(3)HexNAc(4)Sulf(1)@N':\n                   'dHex(1)Hex(3)HexNAc(4)Sulf(1)',\n                   'dHex(1)Hex(3)HexNAc(5)@N': 'dHex(1)Hex(3)HexNAc(5)',\n                   'dHex(1)Hex(3)HexNAc(5)@S': 'dHex(1)Hex(3)HexNAc(5)',\n                   'dHex(1)Hex(3)HexNAc(5)@T': 'dHex(1)Hex(3)HexNAc(5)',\n                   'dHex(1)Hex(3)HexNAc(5)NeuAc(1)@N':\n                   'dHex(1)Hex(3)HexNAc(5)NeuAc(1)',\n                   'dHex(1)Hex(3)HexNAc(5)NeuAc(1)@S':\n                   'dHex(1)Hex(3)HexNAc(5)NeuAc(1)',\n                   'dHex(1)Hex(3)HexNAc(5)NeuAc(1)@T':\n                   'dHex(1)Hex(3)HexNAc(5)NeuAc(1)',\n                   'dHex(1)Hex(3)HexNAc(5)Sulf(1)@N':\n                   'dHex(1)Hex(3)HexNAc(5)Sulf(1)',\n                   'dHex(1)Hex(3)HexNAc(6)@N': 'dHex(1)Hex(3)HexNAc(6)',\n                   'dHex(1)Hex(3)HexNAc(6)@S': 'dHex(1)Hex(3)HexNAc(6)',\n                   'dHex(1)Hex(3)HexNAc(6)@T': 'dHex(1)Hex(3)HexNAc(6)',\n                   'dHex(1)Hex(3)HexNAc(6)Sulf(1)@N':\n                   'dHex(1)Hex(3)HexNAc(6)Sulf(1)', 'dHex(1)Hex(4)@S':\n                   'dHex(1)Hex(4)', 'dHex(1)Hex(4)@T': 'dHex(1)Hex(4)',\n                   'dHex(1)Hex(4)HexA(1)@S': 'dHex(1)Hex(4)HexA(1)',\n                   'dHex(1)Hex(4)HexA(1)@T': 'dHex(1)Hex(4)HexA(1)',\n                   'dHex(1)Hex(4)HexA(1)HexNAc(2)@S':\n                   'dHex(1)Hex(4)HexA(1)HexNAc(2)',\n                   'dHex(1)Hex(4)HexA(1)HexNAc(2)@T':\n                   'dHex(1)Hex(4)HexA(1)HexNAc(2)',\n                   'dHex(1)Hex(4)HexA(1)HexNAc(3)Sulf(1)@S':\n                   'dHex(1)Hex(4)HexA(1)HexNAc(3)Sulf(1)',\n                   'dHex(1)Hex(4)HexA(1)HexNAc(3)Sulf(1)@T':\n                   'dHex(1)Hex(4)HexA(1)HexNAc(3)Sulf(1)',\n                   'dHex(1)Hex(4)HexNAc(1)Pent(1)@N':\n                   'dHex(1)Hex(4)HexNAc(1)Pent(1)',\n                   'dHex(1)Hex(4)HexNAc(2)@N': 'dHex(1)Hex(4)HexNAc(2)',\n                   'dHex(1)Hex(4)HexNAc(2)@S': 'dHex(1)Hex(4)HexNAc(2)',\n                   'dHex(1)Hex(4)HexNAc(2)@T': 'dHex(1)Hex(4)HexNAc(2)',\n                   'dHex(1)Hex(4)HexNAc(2)Pent(1)@N':\n                   'dHex(1)Hex(4)HexNAc(2)Pent(1)',\n                   'dHex(1)Hex(4)HexNAc(3)@N': 'dHex(1)Hex(4)HexNAc(3)',\n                   'dHex(1)Hex(4)HexNAc(3)NeuAc(1)@N':\n                   'dHex(1)Hex(4)HexNAc(3)NeuAc(1)',\n                   'dHex(1)Hex(4)HexNAc(3)NeuAc(1)@S':\n                   'dHex(1)Hex(4)HexNAc(3)NeuAc(1)',\n                   'dHex(1)Hex(4)HexNAc(3)NeuAc(1)@T':\n                   'dHex(1)Hex(4)HexNAc(3)NeuAc(1)',\n                   'dHex(1)Hex(4)HexNAc(3)NeuAc(1)Sulf(1)@N':\n                   'dHex(1)Hex(4)HexNAc(3)NeuAc(1)Sulf(1)',\n                   'dHex(1)Hex(4)HexNAc(3)NeuGc(1)@N':\n                   'dHex(1)Hex(4)HexNAc(3)NeuGc(1)',\n                   'dHex(1)Hex(4)HexNAc(3)Pent(1)@N':\n                   'dHex(1)Hex(4)HexNAc(3)Pent(1)',\n                   'dHex(1)Hex(4)HexNAc(3)Sulf(1)@N':\n                   'dHex(1)Hex(4)HexNAc(3)Sulf(1)',\n                   'dHex(1)Hex(4)HexNAc(4)@N': 'dHex(1)Hex(4)HexNAc(4)',\n                   'dHex(1)Hex(4)HexNAc(4)@S': 'dHex(1)Hex(4)HexNAc(4)',\n                   'dHex(1)Hex(4)HexNAc(4)@T': 'dHex(1)Hex(4)HexNAc(4)',\n                   'dHex(1)Hex(4)HexNAc(4)NeuAc(1)@N':\n                   'dHex(1)Hex(4)HexNAc(4)NeuAc(1)',\n                   'dHex(1)Hex(4)HexNAc(4)NeuAc(1)@S':\n                   'dHex(1)Hex(4)HexNAc(4)NeuAc(1)',\n                   'dHex(1)Hex(4)HexNAc(4)NeuAc(1)@T':\n                   'dHex(1)Hex(4)HexNAc(4)NeuAc(1)',\n                   'dHex(1)Hex(4)HexNAc(4)NeuAc(1)Sulf(1)@N':\n                   'dHex(1)Hex(4)HexNAc(4)NeuAc(1)Sulf(1)',\n                   'dHex(1)Hex(4)HexNAc(4)Pent(1)@N':\n                   'dHex(1)Hex(4)HexNAc(4)Pent(1)',\n                   'dHex(1)Hex(4)HexNAc(4)Sulf(1)@N':\n                   'dHex(1)Hex(4)HexNAc(4)Sulf(1)',\n                   'dHex(1)Hex(4)HexNAc(5)@N': 'dHex(1)Hex(4)HexNAc(5)',\n                   'dHex(1)Hex(4)HexNAc(5)Sulf(1)@N':\n                   'dHex(1)Hex(4)HexNAc(5)Sulf(1)', 'dHex(1)Hex(5)@S':\n                   'dHex(1)Hex(5)', 'dHex(1)Hex(5)@T': 'dHex(1)Hex(5)',\n                   'dHex(1)Hex(5)HexA(1)HexNAc(3)Sulf(1)@N':\n                   'dHex(1)Hex(5)HexA(1)HexNAc(3)Sulf(1)',\n                   'dHex(1)Hex(5)HexA(1)HexNAc(3)Sulf(2)@N':\n                   'dHex(1)Hex(5)HexA(1)HexNAc(3)Sulf(2)',\n                   'dHex(1)Hex(5)HexNAc(2)@N': 'dHex(1)Hex(5)HexNAc(2)',\n                   'dHex(1)Hex(5)HexNAc(2)Pent(1)@N':\n                   'dHex(1)Hex(5)HexNAc(2)Pent(1)',\n                   'dHex(1)Hex(5)HexNAc(3)@N': 'dHex(1)Hex(5)HexNAc(3)',\n                   'dHex(1)Hex(5)HexNAc(3)NeuAc(1)@N':\n                   'dHex(1)Hex(5)HexNAc(3)NeuAc(1)',\n                   'dHex(1)Hex(5)HexNAc(3)NeuAc(1)Sulf(1)@N':\n                   'dHex(1)Hex(5)HexNAc(3)NeuAc(1)Sulf(1)',\n                   'dHex(1)Hex(5)HexNAc(3)NeuGc(1)@N':\n                   'dHex(1)Hex(5)HexNAc(3)NeuGc(1)',\n                   'dHex(1)Hex(5)HexNAc(3)NeuGc(1)Sulf(1)@N':\n                   'dHex(1)Hex(5)HexNAc(3)NeuGc(1)Sulf(1)',\n                   'dHex(1)Hex(5)HexNAc(3)Sulf(1)@N':\n                   'dHex(1)Hex(5)HexNAc(3)Sulf(1)',\n                   'dHex(1)Hex(5)HexNAc(4)@N': 'dHex(1)Hex(5)HexNAc(4)',\n                   'dHex(1)Hex(5)HexNAc(4)Me(2)Pent(1)@N':\n                   'dHex(1)Hex(5)HexNAc(4)Me(2)Pent(1)',\n                   'dHex(1)Hex(5)HexNAc(4)NeuAc(1)@N':\n                   'dHex(1)Hex(5)HexNAc(4)NeuAc(1)',\n                   'dHex(1)Hex(5)HexNAc(4)NeuAc(2)@N':\n                   'dHex(1)Hex(5)HexNAc(4)NeuAc(2)',\n                   'dHex(1)Hex(5)HexNAc(4)Pent(1)@N':\n                   'dHex(1)Hex(5)HexNAc(4)Pent(1)',\n                   'dHex(1)Hex(5)HexNAc(4)Sulf(1)@N':\n                   'dHex(1)Hex(5)HexNAc(4)Sulf(1)',\n                   'dHex(1)Hex(5)HexNAc(4)Sulf(2)@N':\n                   'dHex(1)Hex(5)HexNAc(4)Sulf(2)',\n                   'dHex(1)Hex(5)HexNAc(5)@N': 'dHex(1)Hex(5)HexNAc(5)',\n                   'dHex(1)Hex(6)@S': 'dHex(1)Hex(6)', 'dHex(1)Hex(6)@T':\n                   'dHex(1)Hex(6)', 'dHex(1)Hex(6)HexNAc(2)@N':\n                   'dHex(1)Hex(6)HexNAc(2)', 'dHex(1)Hex(6)HexNAc(3)@N':\n                   'dHex(1)Hex(6)HexNAc(3)',\n                   'dHex(1)Hex(6)HexNAc(3)Sulf(1)@N':\n                   'dHex(1)Hex(6)HexNAc(3)Sulf(1)',\n                   'dHex(1)Hex(6)HexNAc(4)@N': 'dHex(1)Hex(6)HexNAc(4)',\n                   'dHex(1)Hex(7)HexNAc(2)@N': 'dHex(1)Hex(7)HexNAc(2)',\n                   'dHex(1)Hex(7)HexNAc(3)@N': 'dHex(1)Hex(7)HexNAc(3)',\n                   'dHex(1)Hex(7)HexNAc(3)Phos(1)@N':\n                   'dHex(1)Hex(7)HexNAc(3)Phos(1)',\n                   'dHex(1)Hex(7)HexNAc(3)Sulf(1)@N':\n                   'dHex(1)Hex(7)HexNAc(3)Sulf(1)',\n                   'dHex(1)Hex(7)HexNAc(4)@N': 'dHex(1)Hex(7)HexNAc(4)',\n                   'dHex(1)Hex(8)HexNAc(2)@N': 'dHex(1)Hex(8)HexNAc(2)',\n                   'dHex(1)HexNAc(3)@S': 'dHex(1)HexNAc(3)',\n                   'dHex(1)HexNAc(3)@T': 'dHex(1)HexNAc(3)',\n                   'dHex(1)HexNAc(4)@S': 'dHex(1)HexNAc(4)',\n                   'dHex(1)HexNAc(4)@T': 'dHex(1)HexNAc(4)',\n                   'dHex(1)HexNAc(5)@S': 'dHex(1)HexNAc(5)',\n                   'dHex(1)HexNAc(5)@T': 'dHex(1)HexNAc(5)',\n                   'dHex(2)Hex(1)HexNAc(1)Kdn(1)@S':\n                   'dHex(2)Hex(1)HexNAc(1)Kdn(1)',\n                   'dHex(2)Hex(1)HexNAc(1)Kdn(1)@T':\n                   'dHex(2)Hex(1)HexNAc(1)Kdn(1)',\n                   'dHex(2)Hex(1)HexNAc(2)Kdn(1)@S':\n                   'dHex(2)Hex(1)HexNAc(2)Kdn(1)',\n                   'dHex(2)Hex(1)HexNAc(2)Kdn(1)@T':\n                   'dHex(2)Hex(1)HexNAc(2)Kdn(1)',\n                   'dHex(2)Hex(1)HexNAc(2)NeuAc(1)@S':\n                   'dHex(2)Hex(1)HexNAc(2)NeuAc(1)',\n                   'dHex(2)Hex(1)HexNAc(2)NeuAc(1)@T':\n                   'dHex(2)Hex(1)HexNAc(2)NeuAc(1)',\n                   'dHex(2)Hex(1)HexNAc(2)NeuGc(1)@S':\n                   'dHex(2)Hex(1)HexNAc(2)NeuGc(1)',\n                   'dHex(2)Hex(1)HexNAc(2)NeuGc(1)@T':\n                   'dHex(2)Hex(1)HexNAc(2)NeuGc(1)',\n                   'dHex(2)Hex(1)HexNAc(3)@S': 'dHex(2)Hex(1)HexNAc(3)',\n                   'dHex(2)Hex(1)HexNAc(3)@T': 'dHex(2)Hex(1)HexNAc(3)',\n                   'dHex(2)Hex(1)HexNAc(4)Sulf(1)@S':\n                   'dHex(2)Hex(1)HexNAc(4)Sulf(1)',\n                   'dHex(2)Hex(1)HexNAc(4)Sulf(1)@T':\n                   'dHex(2)Hex(1)HexNAc(4)Sulf(1)', 'dHex(2)Hex(2)@S':\n                   'dHex(2)Hex(2)', 'dHex(2)Hex(2)@T': 'dHex(2)Hex(2)',\n                   'dHex(2)Hex(2)HexA(1)@S': 'dHex(2)Hex(2)HexA(1)',\n                   'dHex(2)Hex(2)HexA(1)@T': 'dHex(2)Hex(2)HexA(1)',\n                   'dHex(2)Hex(2)HexA(1)HexNAc(1)@S':\n                   'dHex(2)Hex(2)HexA(1)HexNAc(1)',\n                   'dHex(2)Hex(2)HexA(1)HexNAc(1)@T':\n                   'dHex(2)Hex(2)HexA(1)HexNAc(1)',\n                   'dHex(2)Hex(2)HexA(1)HexNAc(2)Sulf(1)@S':\n                   'dHex(2)Hex(2)HexA(1)HexNAc(2)Sulf(1)',\n                   'dHex(2)Hex(2)HexA(1)HexNAc(2)Sulf(1)@T':\n                   'dHex(2)Hex(2)HexA(1)HexNAc(2)Sulf(1)',\n                   'dHex(2)Hex(2)HexNAc(1)@S': 'dHex(2)Hex(2)HexNAc(1)',\n                   'dHex(2)Hex(2)HexNAc(1)@T': 'dHex(2)Hex(2)HexNAc(1)',\n                   'dHex(2)Hex(2)HexNAc(2)@N': 'dHex(2)Hex(2)HexNAc(2)',\n                   'dHex(2)Hex(2)HexNAc(2)@S': 'dHex(2)Hex(2)HexNAc(2)',\n                   'dHex(2)Hex(2)HexNAc(2)@T': 'dHex(2)Hex(2)HexNAc(2)',\n                   'dHex(2)Hex(2)HexNAc(2)Kdn(1)@S':\n                   'dHex(2)Hex(2)HexNAc(2)Kdn(1)',\n                   'dHex(2)Hex(2)HexNAc(2)Kdn(1)@T':\n                   'dHex(2)Hex(2)HexNAc(2)Kdn(1)',\n                   'dHex(2)Hex(2)HexNAc(2)NeuAc(1)@S':\n                   'dHex(2)Hex(2)HexNAc(2)NeuAc(1)',\n                   'dHex(2)Hex(2)HexNAc(2)NeuAc(1)@T':\n                   'dHex(2)Hex(2)HexNAc(2)NeuAc(1)',\n                   'dHex(2)Hex(2)HexNAc(2)NeuAc(1)Sulf(1)@S':\n                   'dHex(2)Hex(2)HexNAc(2)NeuAc(1)Sulf(1)',\n                   'dHex(2)Hex(2)HexNAc(2)NeuAc(1)Sulf(1)@T':\n                   'dHex(2)Hex(2)HexNAc(2)NeuAc(1)Sulf(1)',\n                   'dHex(2)Hex(2)HexNAc(2)NeuGc(1)@S':\n                   'dHex(2)Hex(2)HexNAc(2)NeuGc(1)',\n                   'dHex(2)Hex(2)HexNAc(2)NeuGc(1)@T':\n                   'dHex(2)Hex(2)HexNAc(2)NeuGc(1)',\n                   'dHex(2)Hex(2)HexNAc(2)Sulf(1)@S':\n                   'dHex(2)Hex(2)HexNAc(2)Sulf(1)',\n                   'dHex(2)Hex(2)HexNAc(2)Sulf(1)@T':\n                   'dHex(2)Hex(2)HexNAc(2)Sulf(1)',\n                   'dHex(2)Hex(2)HexNAc(2)Sulf(2)@S':\n                   'dHex(2)Hex(2)HexNAc(2)Sulf(2)',\n                   'dHex(2)Hex(2)HexNAc(2)Sulf(2)@T':\n                   'dHex(2)Hex(2)HexNAc(2)Sulf(2)',\n                   'dHex(2)Hex(2)HexNAc(3)@N': 'dHex(2)Hex(2)HexNAc(3)',\n                   'dHex(2)Hex(2)HexNAc(3)@S': 'dHex(2)Hex(2)HexNAc(3)',\n                   'dHex(2)Hex(2)HexNAc(3)@T': 'dHex(2)Hex(2)HexNAc(3)',\n                   'dHex(2)Hex(2)HexNAc(3)NeuAc(1)@S':\n                   'dHex(2)Hex(2)HexNAc(3)NeuAc(1)',\n                   'dHex(2)Hex(2)HexNAc(3)NeuAc(1)@T':\n                   'dHex(2)Hex(2)HexNAc(3)NeuAc(1)',\n                   'dHex(2)Hex(2)HexNAc(3)NeuGc(1)@S':\n                   'dHex(2)Hex(2)HexNAc(3)NeuGc(1)',\n                   'dHex(2)Hex(2)HexNAc(3)NeuGc(1)@T':\n                   'dHex(2)Hex(2)HexNAc(3)NeuGc(1)',\n                   'dHex(2)Hex(2)HexNAc(3)Sulf(1)@S':\n                   'dHex(2)Hex(2)HexNAc(3)Sulf(1)',\n                   'dHex(2)Hex(2)HexNAc(3)Sulf(1)@T':\n                   'dHex(2)Hex(2)HexNAc(3)Sulf(1)',\n                   'dHex(2)Hex(2)HexNAc(4)@S': 'dHex(2)Hex(2)HexNAc(4)',\n                   'dHex(2)Hex(2)HexNAc(4)@T': 'dHex(2)Hex(2)HexNAc(4)',\n                   'dHex(2)Hex(2)HexNAc(4)Sulf(2)@S':\n                   'dHex(2)Hex(2)HexNAc(4)Sulf(2)',\n                   'dHex(2)Hex(2)HexNAc(4)Sulf(2)@T':\n                   'dHex(2)Hex(2)HexNAc(4)Sulf(2)',\n                   'dHex(2)Hex(2)HexNAc(5)@S': 'dHex(2)Hex(2)HexNAc(5)',\n                   'dHex(2)Hex(2)HexNAc(5)@T': 'dHex(2)Hex(2)HexNAc(5)',\n                   'dHex(2)Hex(2)HexNAc(6)Sulf(1)@S':\n                   'dHex(2)Hex(2)HexNAc(6)Sulf(1)',\n                   'dHex(2)Hex(2)HexNAc(6)Sulf(1)@T':\n                   'dHex(2)Hex(2)HexNAc(6)Sulf(1)', 'dHex(2)Hex(3)@S':\n                   'dHex(2)Hex(3)', 'dHex(2)Hex(3)@T': 'dHex(2)Hex(3)',\n                   'dHex(2)Hex(3)HexA(1)HexNAc(1)Sulf(1)@S':\n                   'dHex(2)Hex(3)HexA(1)HexNAc(1)Sulf(1)',\n                   'dHex(2)Hex(3)HexA(1)HexNAc(1)Sulf(1)@T':\n                   'dHex(2)Hex(3)HexA(1)HexNAc(1)Sulf(1)',\n                   'dHex(2)Hex(3)HexA(1)HexNAc(2)Sulf(1)@S':\n                   'dHex(2)Hex(3)HexA(1)HexNAc(2)Sulf(1)',\n                   'dHex(2)Hex(3)HexA(1)HexNAc(2)Sulf(1)@T':\n                   'dHex(2)Hex(3)HexA(1)HexNAc(2)Sulf(1)',\n                   'dHex(2)Hex(3)HexA(1)HexNAc(3)Sulf(1)@S':\n                   'dHex(2)Hex(3)HexA(1)HexNAc(3)Sulf(1)',\n                   'dHex(2)Hex(3)HexA(1)HexNAc(3)Sulf(1)@T':\n                   'dHex(2)Hex(3)HexA(1)HexNAc(3)Sulf(1)',\n                   'dHex(2)Hex(3)HexNAc(1)Sulf(1)@S':\n                   'dHex(2)Hex(3)HexNAc(1)Sulf(1)',\n                   'dHex(2)Hex(3)HexNAc(1)Sulf(1)@T':\n                   'dHex(2)Hex(3)HexNAc(1)Sulf(1)',\n                   'dHex(2)Hex(3)HexNAc(2)@N': 'dHex(2)Hex(3)HexNAc(2)',\n                   'dHex(2)Hex(3)HexNAc(2)@S': 'dHex(2)Hex(3)HexNAc(2)',\n                   'dHex(2)Hex(3)HexNAc(2)@T': 'dHex(2)Hex(3)HexNAc(2)',\n                   'dHex(2)Hex(3)HexNAc(2)NeuGc(1)@S':\n                   'dHex(2)Hex(3)HexNAc(2)NeuGc(1)',\n                   'dHex(2)Hex(3)HexNAc(2)NeuGc(1)@T':\n                   'dHex(2)Hex(3)HexNAc(2)NeuGc(1)',\n                   'dHex(2)Hex(3)HexNAc(2)Sulf(1)@S':\n                   'dHex(2)Hex(3)HexNAc(2)Sulf(1)',\n                   'dHex(2)Hex(3)HexNAc(2)Sulf(1)@T':\n                   'dHex(2)Hex(3)HexNAc(2)Sulf(1)',\n                   'dHex(2)Hex(3)HexNAc(3)@N': 'dHex(2)Hex(3)HexNAc(3)',\n                   'dHex(2)Hex(3)HexNAc(3)@S': 'dHex(2)Hex(3)HexNAc(3)',\n                   'dHex(2)Hex(3)HexNAc(3)@T': 'dHex(2)Hex(3)HexNAc(3)',\n                   'dHex(2)Hex(3)HexNAc(3)NeuAc(1)@S':\n                   'dHex(2)Hex(3)HexNAc(3)NeuAc(1)',\n                   'dHex(2)Hex(3)HexNAc(3)NeuAc(1)@T':\n                   'dHex(2)Hex(3)HexNAc(3)NeuAc(1)',\n                   'dHex(2)Hex(3)HexNAc(3)NeuAc(2)@S':\n                   'dHex(2)Hex(3)HexNAc(3)NeuAc(2)',\n                   'dHex(2)Hex(3)HexNAc(3)NeuAc(2)@T':\n                   'dHex(2)Hex(3)HexNAc(3)NeuAc(2)',\n                   'dHex(2)Hex(3)HexNAc(3)Pent(1)@N':\n                   'dHex(2)Hex(3)HexNAc(3)Pent(1)',\n                   'dHex(2)Hex(3)HexNAc(3)Pent(2)@N':\n                   'dHex(2)Hex(3)HexNAc(3)Pent(2)',\n                   'dHex(2)Hex(3)HexNAc(3)Sulf(1)@S':\n                   'dHex(2)Hex(3)HexNAc(3)Sulf(1)',\n                   'dHex(2)Hex(3)HexNAc(3)Sulf(1)@T':\n                   'dHex(2)Hex(3)HexNAc(3)Sulf(1)',\n                   'dHex(2)Hex(3)HexNAc(4)@N': 'dHex(2)Hex(3)HexNAc(4)',\n                   'dHex(2)Hex(3)HexNAc(4)@S': 'dHex(2)Hex(3)HexNAc(4)',\n                   'dHex(2)Hex(3)HexNAc(4)@T': 'dHex(2)Hex(3)HexNAc(4)',\n                   'dHex(2)Hex(3)HexNAc(4)NeuAc(1)@N':\n                   'dHex(2)Hex(3)HexNAc(4)NeuAc(1)',\n                   'dHex(2)Hex(3)HexNAc(4)Pent(1)@N':\n                   'dHex(2)Hex(3)HexNAc(4)Pent(1)',\n                   'dHex(2)Hex(3)HexNAc(4)Pent(2)@N':\n                   'dHex(2)Hex(3)HexNAc(4)Pent(2)',\n                   'dHex(2)Hex(3)HexNAc(5)@N': 'dHex(2)Hex(3)HexNAc(5)',\n                   'dHex(2)Hex(3)HexNAc(5)@S': 'dHex(2)Hex(3)HexNAc(5)',\n                   'dHex(2)Hex(3)HexNAc(5)@T': 'dHex(2)Hex(3)HexNAc(5)',\n                   'dHex(2)Hex(3)HexNAc(6)@N': 'dHex(2)Hex(3)HexNAc(6)',\n                   'dHex(2)Hex(4)@S': 'dHex(2)Hex(4)', 'dHex(2)Hex(4)@T':\n                   'dHex(2)Hex(4)',\n                   'dHex(2)Hex(4)HexA(1)HexNAc(3)Sulf(1)@S':\n                   'dHex(2)Hex(4)HexA(1)HexNAc(3)Sulf(1)',\n                   'dHex(2)Hex(4)HexA(1)HexNAc(3)Sulf(1)@T':\n                   'dHex(2)Hex(4)HexA(1)HexNAc(3)Sulf(1)',\n                   'dHex(2)Hex(4)HexNAc(1)@S': 'dHex(2)Hex(4)HexNAc(1)',\n                   'dHex(2)Hex(4)HexNAc(1)@T': 'dHex(2)Hex(4)HexNAc(1)',\n                   'dHex(2)Hex(4)HexNAc(2)@N': 'dHex(2)Hex(4)HexNAc(2)',\n                   'dHex(2)Hex(4)HexNAc(2)@S': 'dHex(2)Hex(4)HexNAc(2)',\n                   'dHex(2)Hex(4)HexNAc(2)@T': 'dHex(2)Hex(4)HexNAc(2)',\n                   'dHex(2)Hex(4)HexNAc(3)@N': 'dHex(2)Hex(4)HexNAc(3)',\n                   'dHex(2)Hex(4)HexNAc(3)NeuAc(1)Sulf(1)@N':\n                   'dHex(2)Hex(4)HexNAc(3)NeuAc(1)Sulf(1)',\n                   'dHex(2)Hex(4)HexNAc(3)Pent(1)@N':\n                   'dHex(2)Hex(4)HexNAc(3)Pent(1)',\n                   'dHex(2)Hex(4)HexNAc(4)@N': 'dHex(2)Hex(4)HexNAc(4)',\n                   'dHex(2)Hex(4)HexNAc(4)@S': 'dHex(2)Hex(4)HexNAc(4)',\n                   'dHex(2)Hex(4)HexNAc(4)@T': 'dHex(2)Hex(4)HexNAc(4)',\n                   'dHex(2)Hex(4)HexNAc(4)Pent(1)@N':\n                   'dHex(2)Hex(4)HexNAc(4)Pent(1)',\n                   'dHex(2)Hex(4)HexNAc(4)Sulf(1)@N':\n                   'dHex(2)Hex(4)HexNAc(4)Sulf(1)',\n                   'dHex(2)Hex(4)HexNAc(5)@N': 'dHex(2)Hex(4)HexNAc(5)',\n                   'dHex(2)Hex(4)HexNAc(5)@S': 'dHex(2)Hex(4)HexNAc(5)',\n                   'dHex(2)Hex(4)HexNAc(5)@T': 'dHex(2)Hex(4)HexNAc(5)',\n                   'dHex(2)Hex(5)HexNAc(2)Me(1)@S':\n                   'dHex(2)Hex(5)HexNAc(2)Me(1)',\n                   'dHex(2)Hex(5)HexNAc(2)Me(1)@T':\n                   'dHex(2)Hex(5)HexNAc(2)Me(1)',\n                   'dHex(2)Hex(5)HexNAc(3)Pent(1)@N':\n                   'dHex(2)Hex(5)HexNAc(3)Pent(1)',\n                   'dHex(2)Hex(5)HexNAc(4)@N': 'dHex(2)Hex(5)HexNAc(4)',\n                   'dHex(2)HexNAc(2)Kdn(1)@S': 'dHex(2)HexNAc(2)Kdn(1)',\n                   'dHex(2)HexNAc(2)Kdn(1)@T': 'dHex(2)HexNAc(2)Kdn(1)',\n                   'dHex(2)HexNAc(5)@S': 'dHex(2)HexNAc(5)',\n                   'dHex(2)HexNAc(5)@T': 'dHex(2)HexNAc(5)',\n                   'dHex(2)HexNAc(7)@S': 'dHex(2)HexNAc(7)',\n                   'dHex(2)HexNAc(7)@T': 'dHex(2)HexNAc(7)',\n                   'dHex(3)Hex(1)HexNAc(2)Kdn(1)@S':\n                   'dHex(3)Hex(1)HexNAc(2)Kdn(1)',\n                   'dHex(3)Hex(1)HexNAc(2)Kdn(1)@T':\n                   'dHex(3)Hex(1)HexNAc(2)Kdn(1)',\n                   'dHex(3)Hex(1)HexNAc(3)Kdn(1)@S':\n                   'dHex(3)Hex(1)HexNAc(3)Kdn(1)',\n                   'dHex(3)Hex(1)HexNAc(3)Kdn(1)@T':\n                   'dHex(3)Hex(1)HexNAc(3)Kdn(1)',\n                   'dHex(3)Hex(2)HexA(1)HexNAc(2)Sulf(1)@S':\n                   'dHex(3)Hex(2)HexA(1)HexNAc(2)Sulf(1)',\n                   'dHex(3)Hex(2)HexA(1)HexNAc(2)Sulf(1)@T':\n                   'dHex(3)Hex(2)HexA(1)HexNAc(2)Sulf(1)',\n                   'dHex(3)Hex(2)HexNAc(2)@S': 'dHex(3)Hex(2)HexNAc(2)',\n                   'dHex(3)Hex(2)HexNAc(2)@T': 'dHex(3)Hex(2)HexNAc(2)',\n                   'dHex(3)Hex(2)HexNAc(2)Kdn(1)@S':\n                   'dHex(3)Hex(2)HexNAc(2)Kdn(1)',\n                   'dHex(3)Hex(2)HexNAc(2)Kdn(1)@T':\n                   'dHex(3)Hex(2)HexNAc(2)Kdn(1)',\n                   'dHex(3)Hex(2)HexNAc(3)@S': 'dHex(3)Hex(2)HexNAc(3)',\n                   'dHex(3)Hex(2)HexNAc(3)@T': 'dHex(3)Hex(2)HexNAc(3)',\n                   'dHex(3)Hex(2)HexNAc(3)Kdn(1)@S':\n                   'dHex(3)Hex(2)HexNAc(3)Kdn(1)',\n                   'dHex(3)Hex(2)HexNAc(3)Kdn(1)@T':\n                   'dHex(3)Hex(2)HexNAc(3)Kdn(1)',\n                   'dHex(3)Hex(2)HexNAc(4)@S': 'dHex(3)Hex(2)HexNAc(4)',\n                   'dHex(3)Hex(2)HexNAc(4)@T': 'dHex(3)Hex(2)HexNAc(4)',\n                   'dHex(3)Hex(2)HexNAc(4)Sulf(2)@S':\n                   'dHex(3)Hex(2)HexNAc(4)Sulf(2)',\n                   'dHex(3)Hex(2)HexNAc(4)Sulf(2)@T':\n                   'dHex(3)Hex(2)HexNAc(4)Sulf(2)',\n                   'dHex(3)Hex(3)HexNAc(1)@S': 'dHex(3)Hex(3)HexNAc(1)',\n                   'dHex(3)Hex(3)HexNAc(1)@T': 'dHex(3)Hex(3)HexNAc(1)',\n                   'dHex(3)Hex(3)HexNAc(2)@S': 'dHex(3)Hex(3)HexNAc(2)',\n                   'dHex(3)Hex(3)HexNAc(2)@T': 'dHex(3)Hex(3)HexNAc(2)',\n                   'dHex(3)Hex(3)HexNAc(3)@S': 'dHex(3)Hex(3)HexNAc(3)',\n                   'dHex(3)Hex(3)HexNAc(3)@T': 'dHex(3)Hex(3)HexNAc(3)',\n                   'dHex(3)Hex(3)HexNAc(3)NeuAc(1)@S':\n                   'dHex(3)Hex(3)HexNAc(3)NeuAc(1)',\n                   'dHex(3)Hex(3)HexNAc(3)NeuAc(1)@T':\n                   'dHex(3)Hex(3)HexNAc(3)NeuAc(1)',\n                   'dHex(3)Hex(3)HexNAc(3)Pent(1)@N':\n                   'dHex(3)Hex(3)HexNAc(3)Pent(1)',\n                   'dHex(3)Hex(3)HexNAc(4)@N': 'dHex(3)Hex(3)HexNAc(4)',\n                   'dHex(3)Hex(3)HexNAc(4)Pent(1)@N':\n                   'dHex(3)Hex(3)HexNAc(4)Pent(1)',\n                   'dHex(3)Hex(4)HexNAc(4)@N': 'dHex(3)Hex(4)HexNAc(4)',\n                   'dHex(3)Hex(4)HexNAc(4)@S': 'dHex(3)Hex(4)HexNAc(4)',\n                   'dHex(3)Hex(4)HexNAc(4)@T': 'dHex(3)Hex(4)HexNAc(4)',\n                   'dHex(3)Hex(4)HexNAc(4)Sulf(1)@N':\n                   'dHex(3)Hex(4)HexNAc(4)Sulf(1)',\n                   'dHex(3)HexNAc(3)Kdn(1)@S': 'dHex(3)HexNAc(3)Kdn(1)',\n                   'dHex(3)HexNAc(3)Kdn(1)@T': 'dHex(3)HexNAc(3)Kdn(1)',\n                   'dHex(4)Hex(1)HexNAc(1)Kdn(2)@S':\n                   'dHex(4)Hex(1)HexNAc(1)Kdn(2)',\n                   'dHex(4)Hex(1)HexNAc(1)Kdn(2)@T':\n                   'dHex(4)Hex(1)HexNAc(1)Kdn(2)',\n                   'dHex(4)Hex(1)HexNAc(2)Kdn(1)@S':\n                   'dHex(4)Hex(1)HexNAc(2)Kdn(1)',\n                   'dHex(4)Hex(1)HexNAc(2)Kdn(1)@T':\n                   'dHex(4)Hex(1)HexNAc(2)Kdn(1)',\n                   'dHex(4)Hex(1)HexNAc(3)Kdn(1)@S':\n                   'dHex(4)Hex(1)HexNAc(3)Kdn(1)',\n                   'dHex(4)Hex(1)HexNAc(3)Kdn(1)@T':\n                   'dHex(4)Hex(1)HexNAc(3)Kdn(1)',\n                   'dHex(4)Hex(2)HexNAc(2)Kdn(1)@S':\n                   'dHex(4)Hex(2)HexNAc(2)Kdn(1)',\n                   'dHex(4)Hex(2)HexNAc(2)Kdn(1)@T':\n                   'dHex(4)Hex(2)HexNAc(2)Kdn(1)',\n                   'dHex(4)Hex(2)HexNAc(3)@S': 'dHex(4)Hex(2)HexNAc(3)',\n                   'dHex(4)Hex(2)HexNAc(3)@T': 'dHex(4)Hex(2)HexNAc(3)',\n                   'dHex(4)Hex(3)HexNAc(2)NeuAc(1)@S':\n                   'dHex(4)Hex(3)HexNAc(2)NeuAc(1)',\n                   'dHex(4)Hex(3)HexNAc(2)NeuAc(1)@T':\n                   'dHex(4)Hex(3)HexNAc(2)NeuAc(1)',\n                   'dHex(4)Hex(3)HexNAc(3)@S': 'dHex(4)Hex(3)HexNAc(3)',\n                   'dHex(4)Hex(3)HexNAc(3)@T': 'dHex(4)Hex(3)HexNAc(3)',\n                   'dHex(4)HexNAc(3)Kdn(1)@S': 'dHex(4)HexNAc(3)Kdn(1)',\n                   'dHex(4)HexNAc(3)Kdn(1)@T': 'dHex(4)HexNAc(3)Kdn(1)',\n                   'dHex@N': 'dHex', 'dHex@S': 'dHex', 'dHex@T': 'dHex',\n                   'dNIC@Any N-term': 'dNIC', 'dNIC@K': 'dNIC',\n                   'dichlorination@C': 'dichlorination',\n                   'dichlorination@Y': 'dichlorination', 'ethylamino@S':\n                   'ethylamino', 'ethylamino@T': 'ethylamino',\n                   'ethylsulfonylethyl@C': 'ethylsulfonylethyl',\n                   'ethylsulfonylethyl@H': 'ethylsulfonylethyl',\n                   'ethylsulfonylethyl@K': 'ethylsulfonylethyl',\n                   'glucosone@R': 'glucosone', 'glycidamide@Any N-term':\n                   'glycidamide', 'glycidamide@K': 'glycidamide',\n                   'glyoxalAGE@R': 'glyoxalAGE', 'hydroxyisobutyryl@K':\n                   'hydroxyisobutyryl', 'iTRAQ4plex114@Any N-term':\n                   'iTRAQ4plex114', 'iTRAQ4plex114@C': 'iTRAQ4plex114',\n                   'iTRAQ4plex114@K': 'iTRAQ4plex114', 'iTRAQ4plex114@Y':\n                   'iTRAQ4plex114', 'iTRAQ4plex115@Any N-term':\n                   'iTRAQ4plex115', 'iTRAQ4plex115@C': 'iTRAQ4plex115',\n                   'iTRAQ4plex115@K': 'iTRAQ4plex115', 'iTRAQ4plex115@Y':\n                   'iTRAQ4plex115', 'iTRAQ4plex@Any N-term': 'iTRAQ4plex',\n                   'iTRAQ4plex@C': 'iTRAQ4plex', 'iTRAQ4plex@H':\n                   'iTRAQ4plex', 'iTRAQ4plex@K': 'iTRAQ4plex',\n                   'iTRAQ4plex@Protein N-term': 'iTRAQ4plex',\n                   'iTRAQ4plex@S': 'iTRAQ4plex', 'iTRAQ4plex@T':\n                   'iTRAQ4plex', 'iTRAQ4plex@Y': 'iTRAQ4plex',\n                   'iTRAQ8plex:13C(6)15N(2)@Any N-term':\n                   'iTRAQ8plex:13C(6)15N(2)', 'iTRAQ8plex:13C(6)15N(2)@C':\n                   'iTRAQ8plex:13C(6)15N(2)', 'iTRAQ8plex:13C(6)15N(2)@K':\n                   'iTRAQ8plex:13C(6)15N(2)', 'iTRAQ8plex:13C(6)15N(2)@Y':\n                   'iTRAQ8plex:13C(6)15N(2)', 'iTRAQ8plex@Any N-term':\n                   'iTRAQ8plex', 'iTRAQ8plex@C': 'iTRAQ8plex',\n                   'iTRAQ8plex@H': 'iTRAQ8plex', 'iTRAQ8plex@K':\n                   'iTRAQ8plex', 'iTRAQ8plex@Protein N-term':\n                   'iTRAQ8plex', 'iTRAQ8plex@S': 'iTRAQ8plex',\n                   'iTRAQ8plex@T': 'iTRAQ8plex', 'iTRAQ8plex@Y':\n                   'iTRAQ8plex', 'iodoTMT6plex@C': 'iodoTMT6plex',\n                   'iodoTMT6plex@D': 'iodoTMT6plex', 'iodoTMT6plex@E':\n                   'iodoTMT6plex', 'iodoTMT6plex@H': 'iodoTMT6plex',\n                   'iodoTMT6plex@K': 'iodoTMT6plex', 'iodoTMT@C':\n                   'iodoTMT', 'iodoTMT@D': 'iodoTMT', 'iodoTMT@E':\n                   'iodoTMT', 'iodoTMT@H': 'iodoTMT', 'iodoTMT@K':\n                   'iodoTMT', 'lapachenole@C': 'lapachenole',\n                   'mTRAQ:13C(3)15N(1)@Any N-term': 'mTRAQ:13C(3)15N(1)',\n                   'mTRAQ:13C(3)15N(1)@H': 'mTRAQ:13C(3)15N(1)',\n                   'mTRAQ:13C(3)15N(1)@K': 'mTRAQ:13C(3)15N(1)',\n                   'mTRAQ:13C(3)15N(1)@S': 'mTRAQ:13C(3)15N(1)',\n                   'mTRAQ:13C(3)15N(1)@T': 'mTRAQ:13C(3)15N(1)',\n                   'mTRAQ:13C(3)15N(1)@Y': 'mTRAQ:13C(3)15N(1)',\n                   'mTRAQ:13C(6)15N(2)@Any N-term': 'mTRAQ:13C(6)15N(2)',\n                   'mTRAQ:13C(6)15N(2)@H': 'mTRAQ:13C(6)15N(2)',\n                   'mTRAQ:13C(6)15N(2)@K': 'mTRAQ:13C(6)15N(2)',\n                   'mTRAQ:13C(6)15N(2)@S': 'mTRAQ:13C(6)15N(2)',\n                   'mTRAQ:13C(6)15N(2)@T': 'mTRAQ:13C(6)15N(2)',\n                   'mTRAQ:13C(6)15N(2)@Y': 'mTRAQ:13C(6)15N(2)',\n                   'mTRAQ@Any N-term': 'mTRAQ', 'mTRAQ@H': 'mTRAQ',\n                   'mTRAQ@K': 'mTRAQ', 'mTRAQ@S': 'mTRAQ', 'mTRAQ@T':\n                   'mTRAQ', 'mTRAQ@Y': 'mTRAQ', 'maleimide3@C':\n                   'maleimide3', 'maleimide3@K': 'maleimide3',\n                   'maleimide5@C': 'maleimide5', 'maleimide5@K':\n                   'maleimide5', 'maleimide@C': 'maleimide',\n                   'maleimide@K': 'maleimide', 'methylol@K': 'methylol',\n                   'methylol@W': 'methylol', 'methylol@Y': 'methylol',\n                   'methylsulfonylethyl@C': 'methylsulfonylethyl',\n                   'methylsulfonylethyl@H': 'methylsulfonylethyl',\n                   'methylsulfonylethyl@K': 'methylsulfonylethyl',\n                   'monomethylphosphothione@C': 'monomethylphosphothione',\n                   'monomethylphosphothione@H': 'monomethylphosphothione',\n                   'monomethylphosphothione@K': 'monomethylphosphothione',\n                   'monomethylphosphothione@S': 'monomethylphosphothione',\n                   'monomethylphosphothione@T': 'monomethylphosphothione',\n                   'monomethylphosphothione@Y': 'monomethylphosphothione',\n                   'phenylsulfonylethyl@C': 'phenylsulfonylethyl',\n                   'phosphoRibosyl@D': 'phosphoRibosyl',\n                   'phosphoRibosyl@E': 'phosphoRibosyl',\n                   'phosphoRibosyl@R': 'phosphoRibosyl',\n                   'probiotinhydrazide@P': 'probiotinhydrazide',\n                   'pupylation@K': 'pupylation', 'pyrophospho@S':\n                   'pyrophospho', 'pyrophospho@T': 'pyrophospho',\n                   's-GlcNAc@S': 's-GlcNAc', 's-GlcNAc@T': 's-GlcNAc',\n                   'serotonylation@Q': 'serotonylation', 'shTMT@Any\n                   N-term': 'shTMT', 'shTMT@K': 'shTMT', 'shTMT@Protein\n                   N-term': 'shTMT', 'spermidine@Q': 'spermidine',\n                   'spermine@Q': 'spermine', 'sulfo+amino@Y':\n                   'sulfo+amino', 'thioacylPA@K': 'thioacylPA',\n                   'trifluoro@L': 'trifluoro'}, multiprocessing:bool=True)\n\n\n\n\nWritingProcess\n\n WritingProcess (task_queue, tsv, *args, **kwargs)\n\nProcess objects represent activity that is run in a separate process\nThe class is analogous to threading.Thread\n\n\n\nspeclib_to_swath_df\n\n speclib_to_swath_df\n                      (speclib:alphabase.spectral_library.library_base.Spe\n                      cLibBase, keep_k_highest_fragments:int=12,\n                      min_frag_mz=200, max_frag_mz=2000,\n                      min_frag_intensity=0.01)\n\n\n\n\nspeclib_to_single_df\n\n speclib_to_single_df\n                       (speclib:alphabase.spectral_library.library_base.Sp\n                       ecLibBase, translate_mod_dict:dict=None,\n                       keep_k_highest_fragments:int=12, min_frag_mz=200,\n                       max_frag_mz=2000, min_frag_intensity=0.01,\n                       min_frag_nAA=0, modloss='H3PO4',\n                       frag_type_head:str='FragmentType',\n                       frag_mass_head:str='FragmentMz',\n                       frag_inten_head:str='RelativeIntensity',\n                       frag_charge_head:str='FragmentCharge',\n                       frag_loss_head:str='FragmentLossType',\n                       frag_num_head:str='FragmentNumber', verbose=True)\n\nConvert alphabase library to diann (or Spectronaut) library dataframe This method is not important, as it will be only used by DiaNN, or spectronaut, or others Args: translate_mod_dict (dict): a dict map modifications from alphabase to other software. Default: build-in alpha_to_other_mod_dict keep_k_highest_peaks (int): only keep highest fragments for each precursor. Default: 12 Returns: pd.DataFrame: a single dataframe in the SWATH-like format\n\n\n\nmask_fragment_intensity_by_frag_nAA\n\n mask_fragment_intensity_by_frag_nAA\n                                      (fragment_intensity_df:pandas.core.f\n                                      rame.DataFrame, precursor_df:pandas.\n                                      core.frame.DataFrame,\n                                      max_mask_frag_nAA)\n\n\n\n\nmask_fragment_intensity_by_mz_\n\n mask_fragment_intensity_by_mz_\n                                 (fragment_mz_df:pandas.core.frame.DataFra\n                                 me, fragment_intensity_df:pandas.core.fra\n                                 me.DataFrame, min_frag_mz, max_frag_mz)\n\n\n\n\nis_nterm_frag\n\n is_nterm_frag (frag_type:str)\n\n\n\n\nmerge_precursor_fragment_df\n\n merge_precursor_fragment_df (precursor_df:pandas.core.frame.DataFrame,\n                              fragment_mz_df:pandas.core.frame.DataFrame, \n                              fragment_inten_df:pandas.core.frame.DataFram\n                              e, top_n_inten:int,\n                              frag_type_head:str='FragmentType',\n                              frag_mass_head:str='FragmentMz',\n                              frag_inten_head:str='RelativeIntensity',\n                              frag_charge_head:str='FragmentCharge',\n                              frag_loss_head:str='FragmentLossType',\n                              frag_num_head:str='FragmentNumber',\n                              verbose=True)\n\nConvert alphabase library into a single dataframe. This method is not important, as it will be only used by DiaNN, or spectronaut, or others\n\nfrom alphabase.peptide.fragment import create_fragment_mz_dataframe\nrepeat = 10\ncharged_frag_types = ['b_z1','y_z1','y_modloss_z1']\nprecursor_df = pd.DataFrame({\n    'sequence': ['ASGHCEWMKYR']*repeat+['ASGHCEWMAAR'],\n    'mods': ['Acetyl@Protein N-term;Carbamidomethyl@C;Oxidation@M']*repeat+[''],\n    'mod_sites': ['0;4;8']*repeat+[''],\n    'nAA': 11,\n    'NCE': 20,\n    'instrument': 'QE',\n    'rt_pred': 10,\n    'charge': 2,\n    'protein_name': 'unknown',\n    'mobility_pred': 1,\n})\nprecursor_df.loc[0,['mods','mod_sites']] = ['Phospho@S','2']\nfrag_mass_df = create_fragment_mz_dataframe(precursor_df, charged_frag_types)\nfrag_mass_df\n\n\n\n\n\n  \n    \n      \n      b_z1\n      y_z1\n      y_modloss_z1\n    \n  \n  \n    \n      0\n      72.044390\n      1376.527555\n      1278.550659\n    \n    \n      1\n      239.042750\n      1209.529195\n      0.000000\n    \n    \n      2\n      296.064213\n      1152.507732\n      0.000000\n    \n    \n      3\n      433.123125\n      1015.448820\n      0.000000\n    \n    \n      4\n      536.132310\n      912.439635\n      0.000000\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      105\n      585.208572\n      634.312978\n      0.000000\n    \n    \n      106\n      771.287885\n      448.233665\n      0.000000\n    \n    \n      107\n      902.328370\n      317.193180\n      0.000000\n    \n    \n      108\n      973.365484\n      246.156066\n      0.000000\n    \n    \n      109\n      1044.402598\n      175.118952\n      0.000000\n    \n  \n\n110 rows × 3 columns\n\n\n\n\nprecursor_df\n\n\n\n\n\n  \n    \n      \n      sequence\n      mods\n      mod_sites\n      nAA\n      NCE\n      instrument\n      rt_pred\n      charge\n      protein_name\n      mobility_pred\n      frag_start_idx\n      frag_end_idx\n    \n  \n  \n    \n      0\n      ASGHCEWMKYR\n      Phospho@S\n      2\n      11\n      20\n      QE\n      10\n      2\n      unknown\n      1\n      0\n      10\n    \n    \n      1\n      ASGHCEWMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      20\n      QE\n      10\n      2\n      unknown\n      1\n      10\n      20\n    \n    \n      2\n      ASGHCEWMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      20\n      QE\n      10\n      2\n      unknown\n      1\n      20\n      30\n    \n    \n      3\n      ASGHCEWMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      20\n      QE\n      10\n      2\n      unknown\n      1\n      30\n      40\n    \n    \n      4\n      ASGHCEWMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      20\n      QE\n      10\n      2\n      unknown\n      1\n      40\n      50\n    \n    \n      5\n      ASGHCEWMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      20\n      QE\n      10\n      2\n      unknown\n      1\n      50\n      60\n    \n    \n      6\n      ASGHCEWMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      20\n      QE\n      10\n      2\n      unknown\n      1\n      60\n      70\n    \n    \n      7\n      ASGHCEWMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      20\n      QE\n      10\n      2\n      unknown\n      1\n      70\n      80\n    \n    \n      8\n      ASGHCEWMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      20\n      QE\n      10\n      2\n      unknown\n      1\n      80\n      90\n    \n    \n      9\n      ASGHCEWMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      20\n      QE\n      10\n      2\n      unknown\n      1\n      90\n      100\n    \n    \n      10\n      ASGHCEWMAAR\n      \n      \n      11\n      20\n      QE\n      10\n      2\n      unknown\n      1\n      100\n      110\n    \n  \n\n\n\n\n\nspec_lib = SpecLibBase(charged_frag_types)\nspec_lib._precursor_df = precursor_df\nspec_lib._fragment_intensity_df = frag_mass_df.copy()\nspec_lib._fragment_mz_df = frag_mass_df.copy()\ndf = speclib_to_single_df(spec_lib, min_frag_mz=300, max_frag_mz=1800)\nassert (df.FragmentMz>=300).all()\nassert (df.FragmentMz<=1800).all()\ndf = speclib_to_single_df(spec_lib, min_frag_mz=200, min_frag_nAA=3)\nassert (df.FragmentNumber>=3).all()\n\n11it [00:01,  6.80it/s]\n11it [00:00, 2460.92it/s]"
  },
  {
    "objectID": "spec_lib/spec_lib.predict_lib.html",
    "href": "spec_lib/spec_lib.predict_lib.html",
    "title": "Base functionalities to predict libraries",
    "section": "",
    "text": "Both peptdeep.spec_lib.predict_lib.PredictSpecLib and peptdeep.protein.fasta.PredictFastaSpecLib take peptdeep.pretrained_models.ModelManager as the first positional argument.\n\n\nPredictSpecLib\n\n PredictSpecLib\n                 (model_manager:peptdeep.pretrained_models.ModelManager=No\n                 ne, charged_frag_types=['b_z1', 'b_z2', 'y_z1', 'y_z2'],\n                 precursor_mz_min=400, precursor_mz_max=2000,\n                 decoy:str='pseudo_reverse')\n\nBase spectral library in alphabase and alphapeptdeep.\nArgs: charged_frag_types (typing.List[str], optional): fragment types with charge. Defaults to [ ‘b_z1’,‘b_z2’,‘y_z1’, ‘y_z2’ ]. precursor_mz_min (int, optional): Use this to clip precursor df. Defaults to 400. precursor_mz_max (int, optional): Use this to clip precursor df. Defaults to 6000. decoy (str, optional): Decoy methods, could be “pseudo_reverse” or “diann”. Defaults to None.\nAttributes: precursor_df (pd.DataFrame): precursor dataframe. fragment_mz_df (pd.DataFrame): fragment m/z dataframe. fragment_intensity_df (pd.DataFrame): fragment intensity dataframe. charged_frag_types (list): same as charged_frag_types in Args. min_precursor_mz (float): same as precursor_mz_min in Args. max_precursor_mz (float): same as precursor_mz_max in Args. decoy (str): same as decoy in Args. key_numeric_columns (list of str): key numeric columns to be saved into library/precursor_df in the hdf file. Others will be saved into library/mod_seq_df instead.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nmodel_manager\nModelManager\nNone\n\n\n\ncharged_frag_types\nlist\n[‘b_z1’, ‘b_z2’, ‘y_z1’, ‘y_z2’]\n[‘b_modloss_z1’, …]\n\n\nprecursor_mz_min\nint\n400\n\n\n\nprecursor_mz_max\nint\n2000\n\n\n\ndecoy\nstr\npseudo_reverse"
  },
  {
    "objectID": "spec_lib/spec_lib.library_factory.html",
    "href": "spec_lib/spec_lib.library_factory.html",
    "title": "Factory classes to predict libraries from different sources",
    "section": "",
    "text": "PredictLibraryMakerBase\n\n PredictLibraryMakerBase (settings:dict={'model': {'frag_types': ['b',\n                          'y', 'b_modloss', 'y_modloss'],\n                          'max_frag_charge': 2}, 'PEPTDEEP_HOME':\n                          '~/peptdeep', 'local_model_zip_name':\n                          'pretrained_models.zip', 'model_url': 'https://g\n                          ithub.com/MannLabs/alphapeptdeep/releases/downlo\n                          ad/pre-trained-models/pretrained_models.zip',\n                          'thread_num': 8, 'log_level': 'info',\n                          'log_level_choices': ['debug', 'info',\n                          'warning', 'error', 'critical'], 'common':\n                          {'modloss_importance_level': 1.0},\n                          'peak_matching': {'ms2_ppm': True,\n                          'ms2_tol_value': 20.0, 'ms1_ppm': True,\n                          'ms1_tol_value': 20.0}, 'model_mgr':\n                          {'default_nce': 30.0, 'default_instrument':\n                          'Lumos', 'mask_modloss': True, 'model_type':\n                          'generic', 'model_choices': ['generic', 'phos',\n                          'hla', 'digly'], 'external_ms2_model': '',\n                          'external_rt_model': '', 'external_ccs_model':\n                          '', 'instrument_group': {'Lumos': 'Lumos', 'QE':\n                          'QE', 'timsTOF': 'timsTOF', 'SciexTOF':\n                          'SciexTOF', 'Fusion': 'Lumos', 'Eclipse':\n                          'Lumos', 'Velos': 'Lumos', 'Elite': 'Lumos',\n                          'OrbitrapTribrid': 'Lumos', 'ThermoTribrid':\n                          'Lumos', 'QE+': 'QE', 'QEHF': 'QE', 'QEHFX':\n                          'QE', 'Exploris': 'QE', 'Exploris480': 'QE',\n                          'LUMOS': 'Lumos', 'TIMSTOF': 'timsTOF',\n                          'SCIEXTOF': 'SciexTOF', 'FUSION': 'Lumos',\n                          'ECLIPSE': 'Lumos', 'VELOS': 'Lumos', 'ELITE':\n                          'Lumos', 'ORBITRAPTRIBRID': 'Lumos',\n                          'THERMOTRIBRID': 'Lumos', 'EXPLORIS': 'QE',\n                          'EXPLORIS480': 'QE'}, 'predict':\n                          {'batch_size_ms2': 512, 'batch_size_rt_ccs':\n                          1024, 'verbose': True, 'multiprocessing': True},\n                          'transfer': {'model_output_folder': '',\n                          'epoch_ms2': 20, 'warmup_epoch_ms2': 10,\n                          'batch_size_ms2': 512, 'lr_ms2': 0.0001,\n                          'epoch_rt_ccs': 40, 'warmup_epoch_rt_ccs': 10,\n                          'batch_size_rt_ccs': 1024, 'lr_rt_ccs': 0.0001,\n                          'verbose': False, 'grid_nce_search': True,\n                          'grid_nce_first': 15.0, 'grid_nce_last': 45.0,\n                          'grid_nce_step': 3.0, 'grid_instrument':\n                          ['Lumos'], 'psm_type': 'alphapept',\n                          'psm_type_choices': ['alphapept', 'pfind',\n                          'maxquant', 'diann', 'speclib_tsv'],\n                          'psm_files': [], 'ms_file_type':\n                          'alphapept_hdf', 'ms_file_type_choices':\n                          ['alphapept_hdf', 'thermo_raw', 'mgf', 'mzml'],\n                          'ms_files': [], 'psm_num_to_train_ms2':\n                          100000000, 'psm_num_per_mod_to_train_ms2': 50,\n                          'psm_num_to_train_rt_ccs': 100000000,\n                          'psm_num_per_mod_to_train_rt_ccs': 50,\n                          'top_n_mods_to_train': 10}}, 'percolator':\n                          {'require_model_tuning': True,\n                          'raw_num_to_tune': 8,\n                          'require_raw_specific_tuning': True,\n                          'raw_specific_ms2_tuning': False,\n                          'psm_num_per_raw_to_tune': 200,\n                          'epoch_per_raw_to_tune': 5, 'multiprocessing':\n                          True, 'top_k_frags_to_calc_spc': 10, 'ms2_ppm':\n                          True, 'ms2_tol': 20,\n                          'calibrate_frag_mass_error': False,\n                          'max_perc_train_sample': 1000000,\n                          'min_perc_train_sample': 100,\n                          'percolator_backend': 'sklearn',\n                          'percolator_backend_choices': ['sklearn',\n                          'pytorch'], 'percolator_model': 'linear',\n                          'percolator_model_choices':\n                          {'pytorch_as_backend': ['linear', 'mlp'],\n                          'sklearn_as_backend': ['linear',\n                          'random_forest']}, 'lr_percolator_torch_model':\n                          0.1, 'percolator_iter_num': 5, 'cv_fold': 1,\n                          'fdr': 0.01, 'fdr_level': 'psm',\n                          'fdr_level_choices': ['psm', 'precursor',\n                          'peptide', 'sequence'], 'use_fdr_for_each_raw':\n                          False, 'frag_types': ['b_z1', 'b_z2', 'y_z1',\n                          'y_z2'], 'input_files': {'psm_type':\n                          'alphapept', 'psm_type_choices': ['alphapept',\n                          'pfind', 'maxquant'], 'psm_files': [],\n                          'ms_file_type': 'alphapept_hdf',\n                          'ms_file_type_choices': ['hdf', 'thermo_raw',\n                          'mgf', 'mzml'], 'ms_files': [],\n                          'other_score_column_mapping': {'alphapept': {},\n                          'pfind': {'raw_score': 'Raw_Score'},\n                          'msfragger': {'hyperscore': 'hyperscore',\n                          'nextscore': 'nextscore'}, 'maxquant': {}}},\n                          'output_folder': 'C:/datasets/percolaotr'},\n                          'library': {'input': {'type': 'fasta',\n                          'type_choices': ['fasta', 'sequence_table',\n                          'peptide_table', 'precursor_table'], 'paths':\n                          ['xxx.fasta'], 'fasta': {'protease': '([KR])',\n                          'protease_choices': ['trypsin/P', '([KR])',\n                          'trypsin', '([KR](?=[^P]))', 'lys-c', 'K',\n                          'lys-n', '\\\\w(?=K)', 'chymotrypsin'],\n                          'max_miss_cleave': 2}, 'fix_mods':\n                          ['Carbamidomethyl@C'], 'var_mods':\n                          ['Oxidation@M'], 'min_var_mod_num': 0,\n                          'max_var_mod_num': 2, 'min_precursor_charge': 2,\n                          'max_precursor_charge': 4, 'min_peptide_len': 7,\n                          'max_peptide_len': 35, 'min_precursor_mz':\n                          200.0, 'max_precursor_mz': 2000.0, 'decoy':\n                          'pseudo_reverse', 'decoy_choices':\n                          ['pseudo_reverse', 'diann', 'None'],\n                          'max_frag_charge': 2, 'frag_types': ['b', 'y']},\n                          'output_folder': '~/peptdeep_library',\n                          'output_tsv': {'enabled': False,\n                          'min_fragment_mz': 200, 'max_fragment_mz': 2000,\n                          'min_relative_intensity': 0.01,\n                          'keep_higest_k_peaks': 12,\n                          'translate_batch_size': 1000000,\n                          'translate_mod_to_unimod_id': False}}}, model_ma\n                          nager:peptdeep.pretrained_models.ModelManager=No\n                          ne)\n\nInitialize self. See help(type(self)) for accurate signature.\n\n\n\nFastaLibraryMaker\n\n FastaLibraryMaker (settings:dict={'model': {'frag_types': ['b', 'y',\n                    'b_modloss', 'y_modloss'], 'max_frag_charge': 2},\n                    'PEPTDEEP_HOME': '~/peptdeep', 'local_model_zip_name':\n                    'pretrained_models.zip', 'model_url': 'https://github.\n                    com/MannLabs/alphapeptdeep/releases/download/pre-\n                    trained-models/pretrained_models.zip', 'thread_num':\n                    8, 'log_level': 'info', 'log_level_choices': ['debug',\n                    'info', 'warning', 'error', 'critical'], 'common':\n                    {'modloss_importance_level': 1.0}, 'peak_matching':\n                    {'ms2_ppm': True, 'ms2_tol_value': 20.0, 'ms1_ppm':\n                    True, 'ms1_tol_value': 20.0}, 'model_mgr':\n                    {'default_nce': 30.0, 'default_instrument': 'Lumos',\n                    'mask_modloss': True, 'model_type': 'generic',\n                    'model_choices': ['generic', 'phos', 'hla', 'digly'],\n                    'external_ms2_model': '', 'external_rt_model': '',\n                    'external_ccs_model': '', 'instrument_group':\n                    {'Lumos': 'Lumos', 'QE': 'QE', 'timsTOF': 'timsTOF',\n                    'SciexTOF': 'SciexTOF', 'Fusion': 'Lumos', 'Eclipse':\n                    'Lumos', 'Velos': 'Lumos', 'Elite': 'Lumos',\n                    'OrbitrapTribrid': 'Lumos', 'ThermoTribrid': 'Lumos',\n                    'QE+': 'QE', 'QEHF': 'QE', 'QEHFX': 'QE', 'Exploris':\n                    'QE', 'Exploris480': 'QE', 'LUMOS': 'Lumos',\n                    'TIMSTOF': 'timsTOF', 'SCIEXTOF': 'SciexTOF',\n                    'FUSION': 'Lumos', 'ECLIPSE': 'Lumos', 'VELOS':\n                    'Lumos', 'ELITE': 'Lumos', 'ORBITRAPTRIBRID': 'Lumos',\n                    'THERMOTRIBRID': 'Lumos', 'EXPLORIS': 'QE',\n                    'EXPLORIS480': 'QE'}, 'predict': {'batch_size_ms2':\n                    512, 'batch_size_rt_ccs': 1024, 'verbose': True,\n                    'multiprocessing': True}, 'transfer':\n                    {'model_output_folder': '', 'epoch_ms2': 20,\n                    'warmup_epoch_ms2': 10, 'batch_size_ms2': 512,\n                    'lr_ms2': 0.0001, 'epoch_rt_ccs': 40,\n                    'warmup_epoch_rt_ccs': 10, 'batch_size_rt_ccs': 1024,\n                    'lr_rt_ccs': 0.0001, 'verbose': False,\n                    'grid_nce_search': True, 'grid_nce_first': 15.0,\n                    'grid_nce_last': 45.0, 'grid_nce_step': 3.0,\n                    'grid_instrument': ['Lumos'], 'psm_type': 'alphapept',\n                    'psm_type_choices': ['alphapept', 'pfind', 'maxquant',\n                    'diann', 'speclib_tsv'], 'psm_files': [],\n                    'ms_file_type': 'alphapept_hdf',\n                    'ms_file_type_choices': ['alphapept_hdf',\n                    'thermo_raw', 'mgf', 'mzml'], 'ms_files': [],\n                    'psm_num_to_train_ms2': 100000000,\n                    'psm_num_per_mod_to_train_ms2': 50,\n                    'psm_num_to_train_rt_ccs': 100000000,\n                    'psm_num_per_mod_to_train_rt_ccs': 50,\n                    'top_n_mods_to_train': 10}}, 'percolator':\n                    {'require_model_tuning': True, 'raw_num_to_tune': 8,\n                    'require_raw_specific_tuning': True,\n                    'raw_specific_ms2_tuning': False,\n                    'psm_num_per_raw_to_tune': 200,\n                    'epoch_per_raw_to_tune': 5, 'multiprocessing': True,\n                    'top_k_frags_to_calc_spc': 10, 'ms2_ppm': True,\n                    'ms2_tol': 20, 'calibrate_frag_mass_error': False,\n                    'max_perc_train_sample': 1000000,\n                    'min_perc_train_sample': 100, 'percolator_backend':\n                    'sklearn', 'percolator_backend_choices': ['sklearn',\n                    'pytorch'], 'percolator_model': 'linear',\n                    'percolator_model_choices': {'pytorch_as_backend':\n                    ['linear', 'mlp'], 'sklearn_as_backend': ['linear',\n                    'random_forest']}, 'lr_percolator_torch_model': 0.1,\n                    'percolator_iter_num': 5, 'cv_fold': 1, 'fdr': 0.01,\n                    'fdr_level': 'psm', 'fdr_level_choices': ['psm',\n                    'precursor', 'peptide', 'sequence'],\n                    'use_fdr_for_each_raw': False, 'frag_types': ['b_z1',\n                    'b_z2', 'y_z1', 'y_z2'], 'input_files': {'psm_type':\n                    'alphapept', 'psm_type_choices': ['alphapept',\n                    'pfind', 'maxquant'], 'psm_files': [], 'ms_file_type':\n                    'alphapept_hdf', 'ms_file_type_choices': ['hdf',\n                    'thermo_raw', 'mgf', 'mzml'], 'ms_files': [],\n                    'other_score_column_mapping': {'alphapept': {},\n                    'pfind': {'raw_score': 'Raw_Score'}, 'msfragger':\n                    {'hyperscore': 'hyperscore', 'nextscore':\n                    'nextscore'}, 'maxquant': {}}}, 'output_folder':\n                    'C:/datasets/percolaotr'}, 'library': {'input':\n                    {'type': 'fasta', 'type_choices': ['fasta',\n                    'sequence_table', 'peptide_table', 'precursor_table'],\n                    'paths': ['xxx.fasta'], 'fasta': {'protease':\n                    '([KR])', 'protease_choices': ['trypsin/P', '([KR])',\n                    'trypsin', '([KR](?=[^P]))', 'lys-c', 'K', 'lys-n',\n                    '\\\\w(?=K)', 'chymotrypsin'], 'max_miss_cleave': 2},\n                    'fix_mods': ['Carbamidomethyl@C'], 'var_mods':\n                    ['Oxidation@M'], 'min_var_mod_num': 0,\n                    'max_var_mod_num': 2, 'min_precursor_charge': 2,\n                    'max_precursor_charge': 4, 'min_peptide_len': 7,\n                    'max_peptide_len': 35, 'min_precursor_mz': 200.0,\n                    'max_precursor_mz': 2000.0, 'decoy': 'pseudo_reverse',\n                    'decoy_choices': ['pseudo_reverse', 'diann', 'None'],\n                    'max_frag_charge': 2, 'frag_types': ['b', 'y']},\n                    'output_folder': '~/peptdeep_library', 'output_tsv':\n                    {'enabled': False, 'min_fragment_mz': 200,\n                    'max_fragment_mz': 2000, 'min_relative_intensity':\n                    0.01, 'keep_higest_k_peaks': 12,\n                    'translate_batch_size': 1000000,\n                    'translate_mod_to_unimod_id': False}}}, model_manager:\n                    peptdeep.pretrained_models.ModelManager=None)\n\nFor fasta or a list of fasta files\n\n\n\nSequenceLibraryMaker\n\n SequenceLibraryMaker (settings:dict={'model': {'frag_types': ['b', 'y',\n                       'b_modloss', 'y_modloss'], 'max_frag_charge': 2},\n                       'PEPTDEEP_HOME': '~/peptdeep',\n                       'local_model_zip_name': 'pretrained_models.zip',\n                       'model_url': 'https://github.com/MannLabs/alphapept\n                       deep/releases/download/pre-trained-\n                       models/pretrained_models.zip', 'thread_num': 8,\n                       'log_level': 'info', 'log_level_choices': ['debug',\n                       'info', 'warning', 'error', 'critical'], 'common':\n                       {'modloss_importance_level': 1.0}, 'peak_matching':\n                       {'ms2_ppm': True, 'ms2_tol_value': 20.0, 'ms1_ppm':\n                       True, 'ms1_tol_value': 20.0}, 'model_mgr':\n                       {'default_nce': 30.0, 'default_instrument':\n                       'Lumos', 'mask_modloss': True, 'model_type':\n                       'generic', 'model_choices': ['generic', 'phos',\n                       'hla', 'digly'], 'external_ms2_model': '',\n                       'external_rt_model': '', 'external_ccs_model': '',\n                       'instrument_group': {'Lumos': 'Lumos', 'QE': 'QE',\n                       'timsTOF': 'timsTOF', 'SciexTOF': 'SciexTOF',\n                       'Fusion': 'Lumos', 'Eclipse': 'Lumos', 'Velos':\n                       'Lumos', 'Elite': 'Lumos', 'OrbitrapTribrid':\n                       'Lumos', 'ThermoTribrid': 'Lumos', 'QE+': 'QE',\n                       'QEHF': 'QE', 'QEHFX': 'QE', 'Exploris': 'QE',\n                       'Exploris480': 'QE', 'LUMOS': 'Lumos', 'TIMSTOF':\n                       'timsTOF', 'SCIEXTOF': 'SciexTOF', 'FUSION':\n                       'Lumos', 'ECLIPSE': 'Lumos', 'VELOS': 'Lumos',\n                       'ELITE': 'Lumos', 'ORBITRAPTRIBRID': 'Lumos',\n                       'THERMOTRIBRID': 'Lumos', 'EXPLORIS': 'QE',\n                       'EXPLORIS480': 'QE'}, 'predict': {'batch_size_ms2':\n                       512, 'batch_size_rt_ccs': 1024, 'verbose': True,\n                       'multiprocessing': True}, 'transfer':\n                       {'model_output_folder': '', 'epoch_ms2': 20,\n                       'warmup_epoch_ms2': 10, 'batch_size_ms2': 512,\n                       'lr_ms2': 0.0001, 'epoch_rt_ccs': 40,\n                       'warmup_epoch_rt_ccs': 10, 'batch_size_rt_ccs':\n                       1024, 'lr_rt_ccs': 0.0001, 'verbose': False,\n                       'grid_nce_search': True, 'grid_nce_first': 15.0,\n                       'grid_nce_last': 45.0, 'grid_nce_step': 3.0,\n                       'grid_instrument': ['Lumos'], 'psm_type':\n                       'alphapept', 'psm_type_choices': ['alphapept',\n                       'pfind', 'maxquant', 'diann', 'speclib_tsv'],\n                       'psm_files': [], 'ms_file_type': 'alphapept_hdf',\n                       'ms_file_type_choices': ['alphapept_hdf',\n                       'thermo_raw', 'mgf', 'mzml'], 'ms_files': [],\n                       'psm_num_to_train_ms2': 100000000,\n                       'psm_num_per_mod_to_train_ms2': 50,\n                       'psm_num_to_train_rt_ccs': 100000000,\n                       'psm_num_per_mod_to_train_rt_ccs': 50,\n                       'top_n_mods_to_train': 10}}, 'percolator':\n                       {'require_model_tuning': True, 'raw_num_to_tune':\n                       8, 'require_raw_specific_tuning': True,\n                       'raw_specific_ms2_tuning': False,\n                       'psm_num_per_raw_to_tune': 200,\n                       'epoch_per_raw_to_tune': 5, 'multiprocessing':\n                       True, 'top_k_frags_to_calc_spc': 10, 'ms2_ppm':\n                       True, 'ms2_tol': 20, 'calibrate_frag_mass_error':\n                       False, 'max_perc_train_sample': 1000000,\n                       'min_perc_train_sample': 100, 'percolator_backend':\n                       'sklearn', 'percolator_backend_choices':\n                       ['sklearn', 'pytorch'], 'percolator_model':\n                       'linear', 'percolator_model_choices':\n                       {'pytorch_as_backend': ['linear', 'mlp'],\n                       'sklearn_as_backend': ['linear', 'random_forest']},\n                       'lr_percolator_torch_model': 0.1,\n                       'percolator_iter_num': 5, 'cv_fold': 1, 'fdr':\n                       0.01, 'fdr_level': 'psm', 'fdr_level_choices':\n                       ['psm', 'precursor', 'peptide', 'sequence'],\n                       'use_fdr_for_each_raw': False, 'frag_types':\n                       ['b_z1', 'b_z2', 'y_z1', 'y_z2'], 'input_files':\n                       {'psm_type': 'alphapept', 'psm_type_choices':\n                       ['alphapept', 'pfind', 'maxquant'], 'psm_files':\n                       [], 'ms_file_type': 'alphapept_hdf',\n                       'ms_file_type_choices': ['hdf', 'thermo_raw',\n                       'mgf', 'mzml'], 'ms_files': [],\n                       'other_score_column_mapping': {'alphapept': {},\n                       'pfind': {'raw_score': 'Raw_Score'}, 'msfragger':\n                       {'hyperscore': 'hyperscore', 'nextscore':\n                       'nextscore'}, 'maxquant': {}}}, 'output_folder':\n                       'C:/datasets/percolaotr'}, 'library': {'input':\n                       {'type': 'fasta', 'type_choices': ['fasta',\n                       'sequence_table', 'peptide_table',\n                       'precursor_table'], 'paths': ['xxx.fasta'],\n                       'fasta': {'protease': '([KR])', 'protease_choices':\n                       ['trypsin/P', '([KR])', 'trypsin',\n                       '([KR](?=[^P]))', 'lys-c', 'K', 'lys-n',\n                       '\\\\w(?=K)', 'chymotrypsin'], 'max_miss_cleave': 2},\n                       'fix_mods': ['Carbamidomethyl@C'], 'var_mods':\n                       ['Oxidation@M'], 'min_var_mod_num': 0,\n                       'max_var_mod_num': 2, 'min_precursor_charge': 2,\n                       'max_precursor_charge': 4, 'min_peptide_len': 7,\n                       'max_peptide_len': 35, 'min_precursor_mz': 200.0,\n                       'max_precursor_mz': 2000.0, 'decoy':\n                       'pseudo_reverse', 'decoy_choices':\n                       ['pseudo_reverse', 'diann', 'None'],\n                       'max_frag_charge': 2, 'frag_types': ['b', 'y']},\n                       'output_folder': '~/peptdeep_library',\n                       'output_tsv': {'enabled': False, 'min_fragment_mz':\n                       200, 'max_fragment_mz': 2000,\n                       'min_relative_intensity': 0.01,\n                       'keep_higest_k_peaks': 12, 'translate_batch_size':\n                       1000000, 'translate_mod_to_unimod_id': False}}}, mo\n                       del_manager:peptdeep.pretrained_models.ModelManager\n                       =None)\n\nFor input dataframe of sequences\n\n\n\nPeptideLibraryMaker\n\n PeptideLibraryMaker (settings:dict={'model': {'frag_types': ['b', 'y',\n                      'b_modloss', 'y_modloss'], 'max_frag_charge': 2},\n                      'PEPTDEEP_HOME': '~/peptdeep',\n                      'local_model_zip_name': 'pretrained_models.zip',\n                      'model_url': 'https://github.com/MannLabs/alphapeptd\n                      eep/releases/download/pre-trained-\n                      models/pretrained_models.zip', 'thread_num': 8,\n                      'log_level': 'info', 'log_level_choices': ['debug',\n                      'info', 'warning', 'error', 'critical'], 'common':\n                      {'modloss_importance_level': 1.0}, 'peak_matching':\n                      {'ms2_ppm': True, 'ms2_tol_value': 20.0, 'ms1_ppm':\n                      True, 'ms1_tol_value': 20.0}, 'model_mgr':\n                      {'default_nce': 30.0, 'default_instrument': 'Lumos',\n                      'mask_modloss': True, 'model_type': 'generic',\n                      'model_choices': ['generic', 'phos', 'hla',\n                      'digly'], 'external_ms2_model': '',\n                      'external_rt_model': '', 'external_ccs_model': '',\n                      'instrument_group': {'Lumos': 'Lumos', 'QE': 'QE',\n                      'timsTOF': 'timsTOF', 'SciexTOF': 'SciexTOF',\n                      'Fusion': 'Lumos', 'Eclipse': 'Lumos', 'Velos':\n                      'Lumos', 'Elite': 'Lumos', 'OrbitrapTribrid':\n                      'Lumos', 'ThermoTribrid': 'Lumos', 'QE+': 'QE',\n                      'QEHF': 'QE', 'QEHFX': 'QE', 'Exploris': 'QE',\n                      'Exploris480': 'QE', 'LUMOS': 'Lumos', 'TIMSTOF':\n                      'timsTOF', 'SCIEXTOF': 'SciexTOF', 'FUSION':\n                      'Lumos', 'ECLIPSE': 'Lumos', 'VELOS': 'Lumos',\n                      'ELITE': 'Lumos', 'ORBITRAPTRIBRID': 'Lumos',\n                      'THERMOTRIBRID': 'Lumos', 'EXPLORIS': 'QE',\n                      'EXPLORIS480': 'QE'}, 'predict': {'batch_size_ms2':\n                      512, 'batch_size_rt_ccs': 1024, 'verbose': True,\n                      'multiprocessing': True}, 'transfer':\n                      {'model_output_folder': '', 'epoch_ms2': 20,\n                      'warmup_epoch_ms2': 10, 'batch_size_ms2': 512,\n                      'lr_ms2': 0.0001, 'epoch_rt_ccs': 40,\n                      'warmup_epoch_rt_ccs': 10, 'batch_size_rt_ccs':\n                      1024, 'lr_rt_ccs': 0.0001, 'verbose': False,\n                      'grid_nce_search': True, 'grid_nce_first': 15.0,\n                      'grid_nce_last': 45.0, 'grid_nce_step': 3.0,\n                      'grid_instrument': ['Lumos'], 'psm_type':\n                      'alphapept', 'psm_type_choices': ['alphapept',\n                      'pfind', 'maxquant', 'diann', 'speclib_tsv'],\n                      'psm_files': [], 'ms_file_type': 'alphapept_hdf',\n                      'ms_file_type_choices': ['alphapept_hdf',\n                      'thermo_raw', 'mgf', 'mzml'], 'ms_files': [],\n                      'psm_num_to_train_ms2': 100000000,\n                      'psm_num_per_mod_to_train_ms2': 50,\n                      'psm_num_to_train_rt_ccs': 100000000,\n                      'psm_num_per_mod_to_train_rt_ccs': 50,\n                      'top_n_mods_to_train': 10}}, 'percolator':\n                      {'require_model_tuning': True, 'raw_num_to_tune': 8,\n                      'require_raw_specific_tuning': True,\n                      'raw_specific_ms2_tuning': False,\n                      'psm_num_per_raw_to_tune': 200,\n                      'epoch_per_raw_to_tune': 5, 'multiprocessing': True,\n                      'top_k_frags_to_calc_spc': 10, 'ms2_ppm': True,\n                      'ms2_tol': 20, 'calibrate_frag_mass_error': False,\n                      'max_perc_train_sample': 1000000,\n                      'min_perc_train_sample': 100, 'percolator_backend':\n                      'sklearn', 'percolator_backend_choices': ['sklearn',\n                      'pytorch'], 'percolator_model': 'linear',\n                      'percolator_model_choices': {'pytorch_as_backend':\n                      ['linear', 'mlp'], 'sklearn_as_backend': ['linear',\n                      'random_forest']}, 'lr_percolator_torch_model': 0.1,\n                      'percolator_iter_num': 5, 'cv_fold': 1, 'fdr': 0.01,\n                      'fdr_level': 'psm', 'fdr_level_choices': ['psm',\n                      'precursor', 'peptide', 'sequence'],\n                      'use_fdr_for_each_raw': False, 'frag_types':\n                      ['b_z1', 'b_z2', 'y_z1', 'y_z2'], 'input_files':\n                      {'psm_type': 'alphapept', 'psm_type_choices':\n                      ['alphapept', 'pfind', 'maxquant'], 'psm_files': [],\n                      'ms_file_type': 'alphapept_hdf',\n                      'ms_file_type_choices': ['hdf', 'thermo_raw', 'mgf',\n                      'mzml'], 'ms_files': [],\n                      'other_score_column_mapping': {'alphapept': {},\n                      'pfind': {'raw_score': 'Raw_Score'}, 'msfragger':\n                      {'hyperscore': 'hyperscore', 'nextscore':\n                      'nextscore'}, 'maxquant': {}}}, 'output_folder':\n                      'C:/datasets/percolaotr'}, 'library': {'input':\n                      {'type': 'fasta', 'type_choices': ['fasta',\n                      'sequence_table', 'peptide_table',\n                      'precursor_table'], 'paths': ['xxx.fasta'], 'fasta':\n                      {'protease': '([KR])', 'protease_choices':\n                      ['trypsin/P', '([KR])', 'trypsin', '([KR](?=[^P]))',\n                      'lys-c', 'K', 'lys-n', '\\\\w(?=K)', 'chymotrypsin'],\n                      'max_miss_cleave': 2}, 'fix_mods':\n                      ['Carbamidomethyl@C'], 'var_mods': ['Oxidation@M'],\n                      'min_var_mod_num': 0, 'max_var_mod_num': 2,\n                      'min_precursor_charge': 2, 'max_precursor_charge':\n                      4, 'min_peptide_len': 7, 'max_peptide_len': 35,\n                      'min_precursor_mz': 200.0, 'max_precursor_mz':\n                      2000.0, 'decoy': 'pseudo_reverse', 'decoy_choices':\n                      ['pseudo_reverse', 'diann', 'None'],\n                      'max_frag_charge': 2, 'frag_types': ['b', 'y']},\n                      'output_folder': '~/peptdeep_library', 'output_tsv':\n                      {'enabled': False, 'min_fragment_mz': 200,\n                      'max_fragment_mz': 2000, 'min_relative_intensity':\n                      0.01, 'keep_higest_k_peaks': 12,\n                      'translate_batch_size': 1000000,\n                      'translate_mod_to_unimod_id': False}}}, model_manage\n                      r:peptdeep.pretrained_models.ModelManager=None)\n\nFor input dataframe of modified sequences\n\n\n\nPrecursorLibraryMaker\n\n PrecursorLibraryMaker (settings:dict={'model': {'frag_types': ['b', 'y',\n                        'b_modloss', 'y_modloss'], 'max_frag_charge': 2},\n                        'PEPTDEEP_HOME': '~/peptdeep',\n                        'local_model_zip_name': 'pretrained_models.zip',\n                        'model_url': 'https://github.com/MannLabs/alphapep\n                        tdeep/releases/download/pre-trained-\n                        models/pretrained_models.zip', 'thread_num': 8,\n                        'log_level': 'info', 'log_level_choices':\n                        ['debug', 'info', 'warning', 'error', 'critical'],\n                        'common': {'modloss_importance_level': 1.0},\n                        'peak_matching': {'ms2_ppm': True,\n                        'ms2_tol_value': 20.0, 'ms1_ppm': True,\n                        'ms1_tol_value': 20.0}, 'model_mgr':\n                        {'default_nce': 30.0, 'default_instrument':\n                        'Lumos', 'mask_modloss': True, 'model_type':\n                        'generic', 'model_choices': ['generic', 'phos',\n                        'hla', 'digly'], 'external_ms2_model': '',\n                        'external_rt_model': '', 'external_ccs_model': '',\n                        'instrument_group': {'Lumos': 'Lumos', 'QE': 'QE',\n                        'timsTOF': 'timsTOF', 'SciexTOF': 'SciexTOF',\n                        'Fusion': 'Lumos', 'Eclipse': 'Lumos', 'Velos':\n                        'Lumos', 'Elite': 'Lumos', 'OrbitrapTribrid':\n                        'Lumos', 'ThermoTribrid': 'Lumos', 'QE+': 'QE',\n                        'QEHF': 'QE', 'QEHFX': 'QE', 'Exploris': 'QE',\n                        'Exploris480': 'QE', 'LUMOS': 'Lumos', 'TIMSTOF':\n                        'timsTOF', 'SCIEXTOF': 'SciexTOF', 'FUSION':\n                        'Lumos', 'ECLIPSE': 'Lumos', 'VELOS': 'Lumos',\n                        'ELITE': 'Lumos', 'ORBITRAPTRIBRID': 'Lumos',\n                        'THERMOTRIBRID': 'Lumos', 'EXPLORIS': 'QE',\n                        'EXPLORIS480': 'QE'}, 'predict':\n                        {'batch_size_ms2': 512, 'batch_size_rt_ccs': 1024,\n                        'verbose': True, 'multiprocessing': True},\n                        'transfer': {'model_output_folder': '',\n                        'epoch_ms2': 20, 'warmup_epoch_ms2': 10,\n                        'batch_size_ms2': 512, 'lr_ms2': 0.0001,\n                        'epoch_rt_ccs': 40, 'warmup_epoch_rt_ccs': 10,\n                        'batch_size_rt_ccs': 1024, 'lr_rt_ccs': 0.0001,\n                        'verbose': False, 'grid_nce_search': True,\n                        'grid_nce_first': 15.0, 'grid_nce_last': 45.0,\n                        'grid_nce_step': 3.0, 'grid_instrument':\n                        ['Lumos'], 'psm_type': 'alphapept',\n                        'psm_type_choices': ['alphapept', 'pfind',\n                        'maxquant', 'diann', 'speclib_tsv'], 'psm_files':\n                        [], 'ms_file_type': 'alphapept_hdf',\n                        'ms_file_type_choices': ['alphapept_hdf',\n                        'thermo_raw', 'mgf', 'mzml'], 'ms_files': [],\n                        'psm_num_to_train_ms2': 100000000,\n                        'psm_num_per_mod_to_train_ms2': 50,\n                        'psm_num_to_train_rt_ccs': 100000000,\n                        'psm_num_per_mod_to_train_rt_ccs': 50,\n                        'top_n_mods_to_train': 10}}, 'percolator':\n                        {'require_model_tuning': True, 'raw_num_to_tune':\n                        8, 'require_raw_specific_tuning': True,\n                        'raw_specific_ms2_tuning': False,\n                        'psm_num_per_raw_to_tune': 200,\n                        'epoch_per_raw_to_tune': 5, 'multiprocessing':\n                        True, 'top_k_frags_to_calc_spc': 10, 'ms2_ppm':\n                        True, 'ms2_tol': 20, 'calibrate_frag_mass_error':\n                        False, 'max_perc_train_sample': 1000000,\n                        'min_perc_train_sample': 100,\n                        'percolator_backend': 'sklearn',\n                        'percolator_backend_choices': ['sklearn',\n                        'pytorch'], 'percolator_model': 'linear',\n                        'percolator_model_choices': {'pytorch_as_backend':\n                        ['linear', 'mlp'], 'sklearn_as_backend':\n                        ['linear', 'random_forest']},\n                        'lr_percolator_torch_model': 0.1,\n                        'percolator_iter_num': 5, 'cv_fold': 1, 'fdr':\n                        0.01, 'fdr_level': 'psm', 'fdr_level_choices':\n                        ['psm', 'precursor', 'peptide', 'sequence'],\n                        'use_fdr_for_each_raw': False, 'frag_types':\n                        ['b_z1', 'b_z2', 'y_z1', 'y_z2'], 'input_files':\n                        {'psm_type': 'alphapept', 'psm_type_choices':\n                        ['alphapept', 'pfind', 'maxquant'], 'psm_files':\n                        [], 'ms_file_type': 'alphapept_hdf',\n                        'ms_file_type_choices': ['hdf', 'thermo_raw',\n                        'mgf', 'mzml'], 'ms_files': [],\n                        'other_score_column_mapping': {'alphapept': {},\n                        'pfind': {'raw_score': 'Raw_Score'}, 'msfragger':\n                        {'hyperscore': 'hyperscore', 'nextscore':\n                        'nextscore'}, 'maxquant': {}}}, 'output_folder':\n                        'C:/datasets/percolaotr'}, 'library': {'input':\n                        {'type': 'fasta', 'type_choices': ['fasta',\n                        'sequence_table', 'peptide_table',\n                        'precursor_table'], 'paths': ['xxx.fasta'],\n                        'fasta': {'protease': '([KR])',\n                        'protease_choices': ['trypsin/P', '([KR])',\n                        'trypsin', '([KR](?=[^P]))', 'lys-c', 'K',\n                        'lys-n', '\\\\w(?=K)', 'chymotrypsin'],\n                        'max_miss_cleave': 2}, 'fix_mods':\n                        ['Carbamidomethyl@C'], 'var_mods':\n                        ['Oxidation@M'], 'min_var_mod_num': 0,\n                        'max_var_mod_num': 2, 'min_precursor_charge': 2,\n                        'max_precursor_charge': 4, 'min_peptide_len': 7,\n                        'max_peptide_len': 35, 'min_precursor_mz': 200.0,\n                        'max_precursor_mz': 2000.0, 'decoy':\n                        'pseudo_reverse', 'decoy_choices':\n                        ['pseudo_reverse', 'diann', 'None'],\n                        'max_frag_charge': 2, 'frag_types': ['b', 'y']},\n                        'output_folder': '~/peptdeep_library',\n                        'output_tsv': {'enabled': False,\n                        'min_fragment_mz': 200, 'max_fragment_mz': 2000,\n                        'min_relative_intensity': 0.01,\n                        'keep_higest_k_peaks': 12, 'translate_batch_size':\n                        1000000, 'translate_mod_to_unimod_id': False}}}, m\n                        odel_manager:peptdeep.pretrained_models.ModelManag\n                        er=None)\n\nFor input dataframe of charged modified sequences\n\n\n\nLibraryMakerProvider\n\n LibraryMakerProvider ()\n\nInitialize self. See help(type(self)) for accurate signature."
  },
  {
    "objectID": "spec_lib/test_translate_tsv.html",
    "href": "spec_lib/test_translate_tsv.html",
    "title": "Testing translate_tsv()",
    "section": "",
    "text": "from alphabase.spectral_library.library_base import SpecLibBase\nspec_lib = SpecLibBase(charged_frag_types)\nspec_lib._precursor_df = precursor_df\nspec_lib._fragment_intensity_df = frag_mass_df.copy()\nspec_lib._fragment_mz_df = frag_mass_df.copy()\n\n\nfrom peptdeep.spec_lib.translate import speclib_to_single_df, translate_to_tsv\nimport numpy as np\nspeclib_sdf = speclib_to_single_df(spec_lib)\ntranslate_to_tsv(spec_lib, 'sandbox/lib.tsv', batch_size=2, multiprocessing=True)\nddf = pd.read_csv('sandbox/lib.tsv', sep=\"\\t\")\nassert len(ddf) == len(speclib_sdf)\nassert ddf.StrippedPeptide.values[0] == speclib_sdf.StrippedPeptide.values[0]\nassert ddf.StrippedPeptide.values[-1] == speclib_sdf.StrippedPeptide.values[-1]\nassert ddf.PrecursorCharge.dtype==np.int\n\n11it [00:01,  5.70it/s]\n100%|██████████| 6/6 [00:00<00:00, 51.14it/s]\n\n\nTranslation finished, it will take several minutes to export the rest precursors to the tsv file..."
  },
  {
    "objectID": "settings.html",
    "href": "settings.html",
    "title": "All global settings for peptdeep",
    "section": "",
    "text": "update_modifications\n\n update_modifications (tsv:str='', modloss_importance_level:bool=1.0)\n\n\n\n\nupdate_settings\n\n update_settings (dict_, new_dict)"
  },
  {
    "objectID": "rescore/rescore.fdr.html",
    "href": "rescore/rescore.fdr.html",
    "title": "Functionalities to calculate FDRs",
    "section": "",
    "text": "calc_fdr_from_ref\n\n calc_fdr_from_ref (df:pandas.core.frame.DataFrame,\n                    ref_scores:numpy.ndarray,\n                    ref_fdr_values:numpy.ndarray, score_column:str,\n                    decoy_column:str='decoy')\n\nCalculate FDR values for a PSM dataframe from the given reference scores and fdr_values. It is used to extend peptide-level or sequence-level FDR (reference) to each PSM, as PSMs are more useful for quantification. ``\nArgs: df (pd.DataFrame): PSM dataframe ref_scores (np.array): reference scores that used to calculate ref_fdr_values, also sorted in decending order. ref_fdr_values (np.array): fdr values corresponding to ref_scores score_column (str): score column in the dataframe decoy_column (str, optional): decoy column in the dataframe. 1=target, 0=decoy. Defaults to ‘decoy’.\nReturns: pd.DataFrame: dataframe with ‘fdr’ column added\n\n\n\nfdr_from_ref\n\n fdr_from_ref (sorted_scores:numpy.ndarray, ref_scores:numpy.ndarray,\n               ref_fdr_values:numpy.ndarray)\n\nCalculate FDR values from the given reference scores and fdr_values. It is used to extend peptide-level or sequence-level FDR (reference) to each PSM, as PSMs are more useful for quantification.\nArgs: sorted_scores (np.array): the scores to calculate FDRs, they must be sorted in decending order. ref_scores (np.array): reference scores that used to calculate ref_fdr_values, also sorted in decending order. ref_fdr_values (np.array): fdr values corresponding to ref_scores\nReturns: np.array: fdr values corresponding to sorted_scores.\n\n\n\ncalc_fdr\n\n calc_fdr (df:pandas.core.frame.DataFrame, score_column:str,\n           decoy_column:str='decoy')\n\nCalculate FDR values (q_values in fact) for the given dataframe\nArgs: df (pd.DataFrame): PSM dataframe to calculate FDRs score_column (str): score column to sort in decending order decoy_column (str, optional): decoy column in the dataframe. 1=target, 0=decoy. Defaults to ‘decoy’.\nReturns: pd.DataFrame: PSM dataframe with ‘fdr’ column added\n\n\n\nfdr_to_q_values\n\n fdr_to_q_values (fdr_values:numpy.ndarray)\n\nconvert FDR values to q_values.\nArgs: fdr_values (np.ndarray): FDR values, they should be sorted according to the descending order of the score\nReturns: np.ndarray: q_values\n\ndf = pd.DataFrame(\n    {\n        'score': np.random.random(500)*10+11,\n        'decoy': 0,\n        'kind': True,\n    }\n)\nf_score = np.random.random(500)*9.9\ndf = df.append(\n    pd.DataFrame(\n        {\n            'score': f_score+0.01,\n            'decoy': 1,\n            'kind': False\n        }\n    )\n)\ndf = df.append(\n    pd.DataFrame(\n        {\n            'score': f_score,\n            'decoy': 0,\n            'kind': False\n        }\n    )\n)\ndf = df.append(\n    pd.DataFrame(\n        {\n            'score': np.random.random(5)+10,\n            'decoy': 1,\n            'kind': False\n        }\n    )\n)\n\ndf = calc_fdr(df, 'score', 'decoy')\ndf\n\n\n\n\n\n  \n    \n      \n      score\n      decoy\n      kind\n      fdr\n    \n  \n  \n    \n      347\n      20.999467\n      0\n      True\n      0.000000\n    \n    \n      366\n      20.978207\n      0\n      True\n      0.000000\n    \n    \n      266\n      20.976567\n      0\n      True\n      0.000000\n    \n    \n      498\n      20.900502\n      0\n      True\n      0.000000\n    \n    \n      213\n      20.893660\n      0\n      True\n      0.000000\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      1216\n      0.064770\n      0\n      False\n      0.504008\n    \n    \n      669\n      0.062011\n      1\n      False\n      0.504505\n    \n    \n      1169\n      0.052011\n      0\n      False\n      0.504505\n    \n    \n      614\n      0.038895\n      1\n      False\n      0.505000\n    \n    \n      1114\n      0.028895\n      0\n      False\n      0.505000\n    \n  \n\n1505 rows × 4 columns\n\n\n\n\ndf[(df.fdr < 0.01)&(df.decoy==0)]\n\n\n\n\n\n  \n    \n      \n      score\n      decoy\n      kind\n      fdr\n    \n  \n  \n    \n      347\n      20.999467\n      0\n      True\n      0.0\n    \n    \n      366\n      20.978207\n      0\n      True\n      0.0\n    \n    \n      266\n      20.976567\n      0\n      True\n      0.0\n    \n    \n      498\n      20.900502\n      0\n      True\n      0.0\n    \n    \n      213\n      20.893660\n      0\n      True\n      0.0\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      312\n      11.078605\n      0\n      True\n      0.0\n    \n    \n      493\n      11.052031\n      0\n      True\n      0.0\n    \n    \n      487\n      11.047116\n      0\n      True\n      0.0\n    \n    \n      363\n      11.044195\n      0\n      True\n      0.0\n    \n    \n      428\n      11.028248\n      0\n      True\n      0.0\n    \n  \n\n500 rows × 4 columns"
  },
  {
    "objectID": "rescore/rescore.percolator.html",
    "href": "rescore/rescore.percolator.html",
    "title": "Percolator functionalities",
    "section": "",
    "text": "NNRescore\n\n NNRescore (num_features, nn_model_type='linear')\n\nInitialize self. See help(type(self)) for accurate signature.\n\n\n\nRescoreModelProvider\n\n RescoreModelProvider ()\n\nInitialize self. See help(type(self)) for accurate signature.\n\n\n\nLogisticRegressionTorch\n\n LogisticRegressionTorch (input_dim, **kwargs)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\nBuild-in percolator algorithm\n\n\n\nPercolator\n\n Percolator (percolator_model:str='linear',\n             percolator_backend:str='sklearn', cv_fold:int=1,\n             iter_num:int=5, ms2_ppm:bool=True, ms2_tol:float=20.0,\n             model_mgr:peptdeep.pretrained_models.ModelManager=None)\n\nPercolator model Note that in the Args list,\n  perc_settings = peptdeep.settings.global_settings['percolator']\nArgs: percolator_model (str, optional): machine learning model type for rescoring, could be: “linear”: logistic regression “random_forest”: random forest Defaults to perc_settings[‘percolator_model’]. percolator_backend(str, optional): sklearn or pytorch. Defaults to perc_settings[‘percolator_backend’] cv_fold (int, optional): cross-validation fold. Defaults to perc_settings[‘cv_fold’]. iter_num (int, optional): percolator iteration number. Defaults to perc_settings[‘percolator_iter_num’]. ms2_ppm (bool, optional): is ms2 tolerance the ppm. Defaults to perc_settings[‘ms2_ppm’]. ms2_tol (float, optional): ms2 tolerance. Defaults to perc_settings[‘ms2_tol’]. model_mgr (ModelManager, optional): peptdeep.pretrained_model.ModelManager. If None, self.model_mgr will be init by: self.model_mgr = ModelManager(           mask_modloss=perc_settings[               'mask_modloss'           ]       )       self.model_mgr.load_installed_models(           perc_settings['peptdeep_model_type'],       ) Defaults to None."
  },
  {
    "objectID": "rescore/rescore.feature_extractor.html",
    "href": "rescore/rescore.feature_extractor.html",
    "title": "Functionalities to extract features from peptdeep prediction",
    "section": "",
    "text": "get_ms2_features_mp\n\n get_ms2_features_mp (args)\n\n\n\n\nmatch_one_raw_mp\n\n match_one_raw_mp (args)\n\n\n\n\nget_ms2_features\n\n get_ms2_features (psm_df, frag_types, predict_intensity_df,\n                   matched_intensity_df, matched_mass_err_df)\n\nExtract ms2 features from the given predict_intensity_df and matched_intensity_df. It will add columns into psm_df: cos: cosine similarity between predicted and matched fragments pcc: pearson correlation between predicted and matched fragments sa: spectral angle between predicted and matched fragments spc: Spearman’s rank correlation between predicted and matched fragments. cos_bion: … cos_yion: … pcc_bion: … pcc_yion: … sa_bion: … sa_yion: … spc_bion: … spc_yion: … matched_frag_ratio: # matched fragments / # total b+y fragments matched_bion_ratio: # matched b fragments / # total b fragments matched_yion_ratio: # matched y fragments / # total y fragments and more …\n\n\n\nget_psm_scores\n\n get_psm_scores (psm_df:pandas.core.frame.DataFrame,\n                 predict_intensity_df:pandas.core.frame.DataFrame,\n                 matched_intensity_df:pandas.core.frame.DataFrame,\n                 matched_mass_err_df:pandas.core.frame.DataFrame)\n\n\n\n\nmatch_one_raw\n\n match_one_raw (psm_df_one_raw, ms2_file, ms2_file_type,\n                frag_types_to_match, ms2_ppm, ms2_tol,\n                calibrate_frag_mass_error)\n\nInternal function\n\n\nScoreFeatureExtractor\nScoreFeatureExtractor and its sub-classes are the most important functionalities for rescoring.\nThey define the fine-tuning parameters to tune RT/CCS/MS2 models. They also define the feature list to feed to Percolator.\nWe recommend to use ScoreFeatureExtractorMP as it is faster by using multiprocessing while remain the prediction performance.\n\n\n\nScoreFeatureExtractor\n\n ScoreFeatureExtractor (model_mgr:peptdeep.pretrained_models.ModelManager)\n\nScoreFeatureExtractor: Feature extractor for percolator with a single process.\nArgs: model_mgr (ModelManager): The ModelManager in peptdeep.pretrained_models.\n\n\nScoreFeatureExtractorMP\nScoreFeatureExtractorMP uses multiprocessing to accelerate the feature extraction procedure. The pipeline is: 1. Randomly select some raw files to fine-tuning the model. This step also includes two steps: a. ms2 matching with multiprocessing; b. model tuning with a single thread (or GPU). 2. Match PSM results of each raw file in the psm_df against the corresponding ms2 file in ms2_file_dict ({raw_name: ms2_file_path}) to get matched fragment intensity with multiprocessing. 3. Predict fragment intensity as well as RT and mobility with a single thread (or GPU). We use a single thread here becauase GPU memory is the main limitation, and we also enable raw-specific fine-tuning for different raw files. 4. Calculate the feature values with multiprocessing.\nThe key in ScoreFeatureExtractorMP is to access the GPU section without multiprocessing to avoid GPU memory conflicts.\nThe processing speed is very fast with a normal GPU (GTX1080). In our testing, peptdeep can rescore 371 HLA raw files within 1 hour.\n\n\n\nScoreFeatureExtractorMP\n\n ScoreFeatureExtractorMP\n                          (model_mgr:peptdeep.pretrained_models.ModelManag\n                          er)\n\nScoreFeatureExtractorMP: Feature extractor for percolator with multiprocessing.\nArgs: model_mgr (ModelManager): The ModelManager in peptdeep.pretrained_models."
  },
  {
    "objectID": "pipeline_api.html#parameters",
    "href": "pipeline_api.html#parameters",
    "title": "The high-level pipeline APIs",
    "section": "Parameters",
    "text": "Parameters\nsettings_yaml : str The settings yaml file.\n\n\n\n\nType\nDetails\n\n\n\n\nsettings_yaml\nstr\nThe settings yaml file."
  },
  {
    "objectID": "pipeline_api.html#transfer-learning-pipeline",
    "href": "pipeline_api.html#transfer-learning-pipeline",
    "title": "The high-level pipeline APIs",
    "section": "Transfer learning pipeline",
    "text": "Transfer learning pipeline\nTransfer learning pipeline includes: 1. Loading PSM files of the search engine results. 2. Matching PSMs against the MS files. 3. Loading pre-trained models and refining RT/CCS(/MS2) models.\nThe refined models will be saved in the path pointed by “PEPTDEEP_HOME” in peptdeep.settings.global_settings.\n/Users/zengwenfeng/opt/anaconda3/lib/python3.8/site-packages/fastcore/docscrape.py:225: UserWarning: Unknown section Raises\n  else: warn(msg)\n\n\ntransfer_learn\n\n transfer_learn (settings_dict:dict={'model': {'frag_types': ['b', 'y',\n                 'b_modloss', 'y_modloss'], 'max_frag_charge': 2},\n                 'PEPTDEEP_HOME': '~/peptdeep', 'local_model_zip_name':\n                 'pretrained_models.zip', 'model_url': 'https://github.com\n                 /MannLabs/alphapeptdeep/releases/download/pre-trained-\n                 models/pretrained_models.zip', 'thread_num': 8,\n                 'log_level': 'info', 'log_level_choices': ['debug',\n                 'info', 'warning', 'error', 'critical'], 'common':\n                 {'modloss_importance_level': 1.0}, 'peak_matching':\n                 {'ms2_ppm': True, 'ms2_tol_value': 20.0, 'ms1_ppm': True,\n                 'ms1_tol_value': 20.0}, 'model_mgr': {'default_nce':\n                 30.0, 'default_instrument': 'Lumos', 'mask_modloss':\n                 True, 'model_type': 'generic', 'model_choices':\n                 ['generic', 'phos', 'hla', 'digly'],\n                 'external_ms2_model': '', 'external_rt_model': '',\n                 'external_ccs_model': '', 'instrument_group': {'Lumos':\n                 'Lumos', 'QE': 'QE', 'timsTOF': 'timsTOF', 'SciexTOF':\n                 'SciexTOF', 'Fusion': 'Lumos', 'Eclipse': 'Lumos',\n                 'Velos': 'Lumos', 'Elite': 'Lumos', 'OrbitrapTribrid':\n                 'Lumos', 'ThermoTribrid': 'Lumos', 'QE+': 'QE', 'QEHF':\n                 'QE', 'QEHFX': 'QE', 'Exploris': 'QE', 'Exploris480':\n                 'QE', 'LUMOS': 'Lumos', 'TIMSTOF': 'timsTOF', 'SCIEXTOF':\n                 'SciexTOF', 'FUSION': 'Lumos', 'ECLIPSE': 'Lumos',\n                 'VELOS': 'Lumos', 'ELITE': 'Lumos', 'ORBITRAPTRIBRID':\n                 'Lumos', 'THERMOTRIBRID': 'Lumos', 'EXPLORIS': 'QE',\n                 'EXPLORIS480': 'QE'}, 'predict': {'batch_size_ms2': 512,\n                 'batch_size_rt_ccs': 1024, 'verbose': True,\n                 'multiprocessing': True}, 'transfer':\n                 {'model_output_folder': '', 'epoch_ms2': 20,\n                 'warmup_epoch_ms2': 10, 'batch_size_ms2': 512, 'lr_ms2':\n                 0.0001, 'epoch_rt_ccs': 40, 'warmup_epoch_rt_ccs': 10,\n                 'batch_size_rt_ccs': 1024, 'lr_rt_ccs': 0.0001,\n                 'verbose': False, 'grid_nce_search': True,\n                 'grid_nce_first': 15.0, 'grid_nce_last': 45.0,\n                 'grid_nce_step': 3.0, 'grid_instrument': ['Lumos'],\n                 'psm_type': 'alphapept', 'psm_type_choices':\n                 ['alphapept', 'pfind', 'maxquant', 'diann',\n                 'speclib_tsv'], 'psm_files': [], 'ms_file_type':\n                 'alphapept_hdf', 'ms_file_type_choices':\n                 ['alphapept_hdf', 'thermo_raw', 'mgf', 'mzml'],\n                 'ms_files': [], 'psm_num_to_train_ms2': 100000000,\n                 'psm_num_per_mod_to_train_ms2': 50,\n                 'psm_num_to_train_rt_ccs': 100000000,\n                 'psm_num_per_mod_to_train_rt_ccs': 50,\n                 'top_n_mods_to_train': 10}}, 'percolator':\n                 {'require_model_tuning': True, 'raw_num_to_tune': 8,\n                 'require_raw_specific_tuning': True,\n                 'raw_specific_ms2_tuning': False,\n                 'psm_num_per_raw_to_tune': 200, 'epoch_per_raw_to_tune':\n                 5, 'multiprocessing': True, 'top_k_frags_to_calc_spc':\n                 10, 'ms2_ppm': True, 'ms2_tol': 20,\n                 'calibrate_frag_mass_error': False,\n                 'max_perc_train_sample': 1000000,\n                 'min_perc_train_sample': 100, 'percolator_backend':\n                 'sklearn', 'percolator_backend_choices': ['sklearn',\n                 'pytorch'], 'percolator_model': 'linear',\n                 'percolator_model_choices': {'pytorch_as_backend':\n                 ['linear', 'mlp'], 'sklearn_as_backend': ['linear',\n                 'random_forest']}, 'lr_percolator_torch_model': 0.1,\n                 'percolator_iter_num': 5, 'cv_fold': 1, 'fdr': 0.01,\n                 'fdr_level': 'psm', 'fdr_level_choices': ['psm',\n                 'precursor', 'peptide', 'sequence'],\n                 'use_fdr_for_each_raw': False, 'frag_types': ['b_z1',\n                 'b_z2', 'y_z1', 'y_z2'], 'input_files': {'psm_type':\n                 'alphapept', 'psm_type_choices': ['alphapept', 'pfind',\n                 'maxquant'], 'psm_files': [], 'ms_file_type':\n                 'alphapept_hdf', 'ms_file_type_choices': ['hdf',\n                 'thermo_raw', 'mgf', 'mzml'], 'ms_files': [],\n                 'other_score_column_mapping': {'alphapept': {}, 'pfind':\n                 {'raw_score': 'Raw_Score'}, 'msfragger': {'hyperscore':\n                 'hyperscore', 'nextscore': 'nextscore'}, 'maxquant':\n                 {}}}, 'output_folder': 'C:/datasets/percolaotr'},\n                 'library': {'input': {'type': 'fasta', 'type_choices':\n                 ['fasta', 'sequence_table', 'peptide_table',\n                 'precursor_table'], 'paths': ['xxx.fasta'], 'fasta':\n                 {'protease': '([KR])', 'protease_choices': ['trypsin/P',\n                 '([KR])', 'trypsin', '([KR](?=[^P]))', 'lys-c', 'K',\n                 'lys-n', '\\\\w(?=K)', 'chymotrypsin'], 'max_miss_cleave':\n                 2}, 'fix_mods': ['Carbamidomethyl@C'], 'var_mods':\n                 ['Oxidation@M'], 'min_var_mod_num': 0, 'max_var_mod_num':\n                 2, 'min_precursor_charge': 2, 'max_precursor_charge': 4,\n                 'min_peptide_len': 7, 'max_peptide_len': 35,\n                 'min_precursor_mz': 200.0, 'max_precursor_mz': 2000.0,\n                 'decoy': 'pseudo_reverse', 'decoy_choices':\n                 ['pseudo_reverse', 'diann', 'None'], 'max_frag_charge':\n                 2, 'frag_types': ['b', 'y']}, 'output_folder':\n                 '~/peptdeep_library', 'output_tsv': {'enabled': False,\n                 'min_fragment_mz': 200, 'max_fragment_mz': 2000,\n                 'min_relative_intensity': 0.01, 'keep_higest_k_peaks':\n                 12, 'translate_batch_size': 1000000,\n                 'translate_mod_to_unimod_id': False}}}, verbose=True)\n\nTransfer learn / refine the RT/CCS(/MS2) models.\nAll required information in settings_dict:\nmgr_settings = settings_dict['model_mgr']\nmgr_settings['transfer']['verbose'] = verbose # bool\nsettings_dict['PEPTDEEP_HOME'] # str. The folder to store all refined models. By default \"~/peptdeep\".\nFor transfer learning of MS2 model, the required information:\nmgr_settings['transfer']['psm_files'] # list. PSM file paths\nmgr_settings['transfer']['psm_type'] # str. PSM type or earch engine type\nmgr_settings['transfer']['ms_files'] # list. MS files or RAW files\nmgr_settings['transfer']['ms_file_type'] # str. MS file type\nsettings_dict['model']['frag_types'] # list. Fragment types to be considered, e.g. b_z1, y_modloss_z2 ...\nsettings_dict['model']['max_frag_charge'] # int. Max fragment charge to be considered\nsettings_dict['peak_matching']['ms2_ppm'] # bool. If use ppm as MS2 tolerance\nsettings_dict['peak_matching']['ms2_tol_value'] # float. MS2 tolerance value"
  },
  {
    "objectID": "pipeline_api.html#parameters-1",
    "href": "pipeline_api.html#parameters-1",
    "title": "The high-level pipeline APIs",
    "section": "Parameters",
    "text": "Parameters\nsettings_dict : dict, optional The settings dict, by default peptdeep.settings.global_settings. verbose : bool, optional Print the training details, by default True"
  },
  {
    "objectID": "pipeline_api.html#raises",
    "href": "pipeline_api.html#raises",
    "title": "The high-level pipeline APIs",
    "section": "Raises",
    "text": "Raises\nException Any kinds of exception if the pipeline fails.\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nsettings_dict\ndict\n{‘model’: {‘frag_types’: [‘b’, ‘y’, ‘b_modloss’, ‘y_modloss’], ‘max_frag_charge’: 2}, ‘PEPTDEEP_HOME’: ‘~/peptdeep’, ‘local_model_zip_name’: ‘pretrained_models.zip’, ‘model_url’: ‘https://github.com/MannLabs/alphapeptdeep/releases/download/pre-trained-models/pretrained_models.zip’, ‘thread_num’: 8, ‘log_level’: ‘info’, ‘log_level_choices’: [‘debug’, ‘info’, ‘warning’, ‘error’, ‘critical’], ‘common’: {‘modloss_importance_level’: 1.0}, ‘peak_matching’: {‘ms2_ppm’: True, ‘ms2_tol_value’: 20.0, ‘ms1_ppm’: True, ‘ms1_tol_value’: 20.0}, ‘model_mgr’: {‘default_nce’: 30.0, ‘default_instrument’: ‘Lumos’, ‘mask_modloss’: True, ‘model_type’: ‘generic’, ‘model_choices’: [‘generic’, ‘phos’, ‘hla’, ‘digly’], ‘external_ms2_model’: ’‘, ’external_rt_model’: ’‘, ’external_ccs_model’: ’‘, ’instrument_group’: {‘Lumos’: ‘Lumos’, ‘QE’: ‘QE’, ‘timsTOF’: ‘timsTOF’, ‘SciexTOF’: ‘SciexTOF’, ‘Fusion’: ‘Lumos’, ‘Eclipse’: ‘Lumos’, ‘Velos’: ‘Lumos’, ‘Elite’: ‘Lumos’, ‘OrbitrapTribrid’: ‘Lumos’, ‘ThermoTribrid’: ‘Lumos’, ‘QE+’: ‘QE’, ‘QEHF’: ‘QE’, ‘QEHFX’: ‘QE’, ‘Exploris’: ‘QE’, ‘Exploris480’: ‘QE’, ‘LUMOS’: ‘Lumos’, ‘TIMSTOF’: ‘timsTOF’, ‘SCIEXTOF’: ‘SciexTOF’, ‘FUSION’: ‘Lumos’, ‘ECLIPSE’: ‘Lumos’, ‘VELOS’: ‘Lumos’, ‘ELITE’: ‘Lumos’, ‘ORBITRAPTRIBRID’: ‘Lumos’, ‘THERMOTRIBRID’: ‘Lumos’, ‘EXPLORIS’: ‘QE’, ‘EXPLORIS480’: ‘QE’}, ‘predict’: {‘batch_size_ms2’: 512, ‘batch_size_rt_ccs’: 1024, ‘verbose’: True, ‘multiprocessing’: True}, ‘transfer’: {‘model_output_folder’: ’‘, ’epoch_ms2’: 20, ‘warmup_epoch_ms2’: 10, ‘batch_size_ms2’: 512, ‘lr_ms2’: 0.0001, ‘epoch_rt_ccs’: 40, ‘warmup_epoch_rt_ccs’: 10, ‘batch_size_rt_ccs’: 1024, ‘lr_rt_ccs’: 0.0001, ‘verbose’: False, ‘grid_nce_search’: True, ‘grid_nce_first’: 15.0, ‘grid_nce_last’: 45.0, ‘grid_nce_step’: 3.0, ‘grid_instrument’: [‘Lumos’], ‘psm_type’: ‘alphapept’, ‘psm_type_choices’: [‘alphapept’, ‘pfind’, ‘maxquant’, ‘diann’, ‘speclib_tsv’], ‘psm_files’: [], ‘ms_file_type’: ‘alphapept_hdf’, ‘ms_file_type_choices’: [‘alphapept_hdf’, ‘thermo_raw’, ‘mgf’, ‘mzml’], ‘ms_files’: [], ‘psm_num_to_train_ms2’: 100000000, ‘psm_num_per_mod_to_train_ms2’: 50, ‘psm_num_to_train_rt_ccs’: 100000000, ‘psm_num_per_mod_to_train_rt_ccs’: 50, ‘top_n_mods_to_train’: 10}}, ‘percolator’: {‘require_model_tuning’: True, ‘raw_num_to_tune’: 8, ‘require_raw_specific_tuning’: True, ‘raw_specific_ms2_tuning’: False, ‘psm_num_per_raw_to_tune’: 200, ‘epoch_per_raw_to_tune’: 5, ‘multiprocessing’: True, ‘top_k_frags_to_calc_spc’: 10, ‘ms2_ppm’: True, ‘ms2_tol’: 20, ‘calibrate_frag_mass_error’: False, ‘max_perc_train_sample’: 1000000, ‘min_perc_train_sample’: 100, ‘percolator_backend’: ‘sklearn’, ‘percolator_backend_choices’: [‘sklearn’, ‘pytorch’], ‘percolator_model’: ‘linear’, ‘percolator_model_choices’: {‘pytorch_as_backend’: [‘linear’, ‘mlp’], ‘sklearn_as_backend’: [‘linear’, ‘random_forest’]}, ‘lr_percolator_torch_model’: 0.1, ‘percolator_iter_num’: 5, ‘cv_fold’: 1, ‘fdr’: 0.01, ‘fdr_level’: ‘psm’, ‘fdr_level_choices’: [‘psm’, ‘precursor’, ‘peptide’, ‘sequence’], ‘use_fdr_for_each_raw’: False, ‘frag_types’: [‘b_z1’, ‘b_z2’, ‘y_z1’, ‘y_z2’], ‘input_files’: {‘psm_type’: ‘alphapept’, ‘psm_type_choices’: [‘alphapept’, ‘pfind’, ‘maxquant’], ‘psm_files’: [], ‘ms_file_type’: ‘alphapept_hdf’, ‘ms_file_type_choices’: [‘hdf’, ‘thermo_raw’, ‘mgf’, ‘mzml’], ‘ms_files’: [], ‘other_score_column_mapping’: {‘alphapept’: {}, ‘pfind’: {‘raw_score’: ‘Raw_Score’}, ‘msfragger’: {‘hyperscore’: ‘hyperscore’, ‘nextscore’: ‘nextscore’}, ‘maxquant’: {}}}, ‘output_folder’: ‘C:/datasets/percolaotr’}, ‘library’: {‘input’: {‘type’: ‘fasta’, ‘type_choices’: [‘fasta’, ‘sequence_table’, ‘peptide_table’, ‘precursor_table’], ‘paths’: [‘xxx.fasta’], ‘fasta’: {‘protease’: ‘([KR])’, ‘protease_choices’: [‘trypsin/P’, ‘([KR])’, ‘trypsin’, ‘(KR)’, ‘lys-c’, ‘K’, ‘lys-n’, ‘\\w(?=K)’, ‘chymotrypsin’], ‘max_miss_cleave’: 2}, ‘fix_mods’: [‘Carbamidomethyl@C’], ‘var_mods’: [‘Oxidation@M’], ‘min_var_mod_num’: 0, ‘max_var_mod_num’: 2, ‘min_precursor_charge’: 2, ‘max_precursor_charge’: 4, ‘min_peptide_len’: 7, ‘max_peptide_len’: 35, ‘min_precursor_mz’: 200.0, ‘max_precursor_mz’: 2000.0, ‘decoy’: ‘pseudo_reverse’, ‘decoy_choices’: [‘pseudo_reverse’, ‘diann’, ‘None’], ‘max_frag_charge’: 2, ‘frag_types’: [‘b’, ‘y’]}, ‘output_folder’: ‘~/peptdeep_library’, ‘output_tsv’: {‘enabled’: False, ‘min_fragment_mz’: 200, ‘max_fragment_mz’: 2000, ‘min_relative_intensity’: 0.01, ‘keep_higest_k_peaks’: 12, ‘translate_batch_size’: 1000000, ‘translate_mod_to_unimod_id’: False}}}\nThe settings dict, by default peptdeep.settings.global_settings.\n\n\nverbose\nbool\nTrue\nPrint the training details, by default True\n\n\n\n\n\nmatch_psms\n\n match_psms (settings_dict:dict={'model': {'frag_types': ['b', 'y',\n             'b_modloss', 'y_modloss'], 'max_frag_charge': 2},\n             'PEPTDEEP_HOME': '~/peptdeep', 'local_model_zip_name':\n             'pretrained_models.zip', 'model_url': 'https://github.com/Man\n             nLabs/alphapeptdeep/releases/download/pre-trained-\n             models/pretrained_models.zip', 'thread_num': 8, 'log_level':\n             'info', 'log_level_choices': ['debug', 'info', 'warning',\n             'error', 'critical'], 'common': {'modloss_importance_level':\n             1.0}, 'peak_matching': {'ms2_ppm': True, 'ms2_tol_value':\n             20.0, 'ms1_ppm': True, 'ms1_tol_value': 20.0}, 'model_mgr':\n             {'default_nce': 30.0, 'default_instrument': 'Lumos',\n             'mask_modloss': True, 'model_type': 'generic',\n             'model_choices': ['generic', 'phos', 'hla', 'digly'],\n             'external_ms2_model': '', 'external_rt_model': '',\n             'external_ccs_model': '', 'instrument_group': {'Lumos':\n             'Lumos', 'QE': 'QE', 'timsTOF': 'timsTOF', 'SciexTOF':\n             'SciexTOF', 'Fusion': 'Lumos', 'Eclipse': 'Lumos', 'Velos':\n             'Lumos', 'Elite': 'Lumos', 'OrbitrapTribrid': 'Lumos',\n             'ThermoTribrid': 'Lumos', 'QE+': 'QE', 'QEHF': 'QE', 'QEHFX':\n             'QE', 'Exploris': 'QE', 'Exploris480': 'QE', 'LUMOS':\n             'Lumos', 'TIMSTOF': 'timsTOF', 'SCIEXTOF': 'SciexTOF',\n             'FUSION': 'Lumos', 'ECLIPSE': 'Lumos', 'VELOS': 'Lumos',\n             'ELITE': 'Lumos', 'ORBITRAPTRIBRID': 'Lumos',\n             'THERMOTRIBRID': 'Lumos', 'EXPLORIS': 'QE', 'EXPLORIS480':\n             'QE'}, 'predict': {'batch_size_ms2': 512,\n             'batch_size_rt_ccs': 1024, 'verbose': True,\n             'multiprocessing': True}, 'transfer': {'model_output_folder':\n             '', 'epoch_ms2': 20, 'warmup_epoch_ms2': 10,\n             'batch_size_ms2': 512, 'lr_ms2': 0.0001, 'epoch_rt_ccs': 40,\n             'warmup_epoch_rt_ccs': 10, 'batch_size_rt_ccs': 1024,\n             'lr_rt_ccs': 0.0001, 'verbose': False, 'grid_nce_search':\n             True, 'grid_nce_first': 15.0, 'grid_nce_last': 45.0,\n             'grid_nce_step': 3.0, 'grid_instrument': ['Lumos'],\n             'psm_type': 'alphapept', 'psm_type_choices': ['alphapept',\n             'pfind', 'maxquant', 'diann', 'speclib_tsv'], 'psm_files':\n             [], 'ms_file_type': 'alphapept_hdf', 'ms_file_type_choices':\n             ['alphapept_hdf', 'thermo_raw', 'mgf', 'mzml'], 'ms_files':\n             [], 'psm_num_to_train_ms2': 100000000,\n             'psm_num_per_mod_to_train_ms2': 50,\n             'psm_num_to_train_rt_ccs': 100000000,\n             'psm_num_per_mod_to_train_rt_ccs': 50, 'top_n_mods_to_train':\n             10}}, 'percolator': {'require_model_tuning': True,\n             'raw_num_to_tune': 8, 'require_raw_specific_tuning': True,\n             'raw_specific_ms2_tuning': False, 'psm_num_per_raw_to_tune':\n             200, 'epoch_per_raw_to_tune': 5, 'multiprocessing': True,\n             'top_k_frags_to_calc_spc': 10, 'ms2_ppm': True, 'ms2_tol':\n             20, 'calibrate_frag_mass_error': False,\n             'max_perc_train_sample': 1000000, 'min_perc_train_sample':\n             100, 'percolator_backend': 'sklearn',\n             'percolator_backend_choices': ['sklearn', 'pytorch'],\n             'percolator_model': 'linear', 'percolator_model_choices':\n             {'pytorch_as_backend': ['linear', 'mlp'],\n             'sklearn_as_backend': ['linear', 'random_forest']},\n             'lr_percolator_torch_model': 0.1, 'percolator_iter_num': 5,\n             'cv_fold': 1, 'fdr': 0.01, 'fdr_level': 'psm',\n             'fdr_level_choices': ['psm', 'precursor', 'peptide',\n             'sequence'], 'use_fdr_for_each_raw': False, 'frag_types':\n             ['b_z1', 'b_z2', 'y_z1', 'y_z2'], 'input_files': {'psm_type':\n             'alphapept', 'psm_type_choices': ['alphapept', 'pfind',\n             'maxquant'], 'psm_files': [], 'ms_file_type':\n             'alphapept_hdf', 'ms_file_type_choices': ['hdf',\n             'thermo_raw', 'mgf', 'mzml'], 'ms_files': [],\n             'other_score_column_mapping': {'alphapept': {}, 'pfind':\n             {'raw_score': 'Raw_Score'}, 'msfragger': {'hyperscore':\n             'hyperscore', 'nextscore': 'nextscore'}, 'maxquant': {}}},\n             'output_folder': 'C:/datasets/percolaotr'}, 'library':\n             {'input': {'type': 'fasta', 'type_choices': ['fasta',\n             'sequence_table', 'peptide_table', 'precursor_table'],\n             'paths': ['xxx.fasta'], 'fasta': {'protease': '([KR])',\n             'protease_choices': ['trypsin/P', '([KR])', 'trypsin',\n             '([KR](?=[^P]))', 'lys-c', 'K', 'lys-n', '\\\\w(?=K)',\n             'chymotrypsin'], 'max_miss_cleave': 2}, 'fix_mods':\n             ['Carbamidomethyl@C'], 'var_mods': ['Oxidation@M'],\n             'min_var_mod_num': 0, 'max_var_mod_num': 2,\n             'min_precursor_charge': 2, 'max_precursor_charge': 4,\n             'min_peptide_len': 7, 'max_peptide_len': 35,\n             'min_precursor_mz': 200.0, 'max_precursor_mz': 2000.0,\n             'decoy': 'pseudo_reverse', 'decoy_choices':\n             ['pseudo_reverse', 'diann', 'None'], 'max_frag_charge': 2,\n             'frag_types': ['b', 'y']}, 'output_folder':\n             '~/peptdeep_library', 'output_tsv': {'enabled': False,\n             'min_fragment_mz': 200, 'max_fragment_mz': 2000,\n             'min_relative_intensity': 0.01, 'keep_higest_k_peaks': 12,\n             'translate_batch_size': 1000000,\n             'translate_mod_to_unimod_id': False}}})\n\nMatch the PSMs against the MS files.\nAll required information is in settings_dict:\nmgr_settings = settings_dict['model_mgr']\nmgr_settings['transfer']['psm_files'] # list. PSM file paths\nmgr_settings['transfer']['psm_type'] # str. PSM type or earch engine type\nmgr_settings['transfer']['ms_files'] # list. MS files or RAW files\nmgr_settings['transfer']['ms_file_type'] # str. MS file type\nsettings_dict['model']['frag_types'] # list. Fragment types to be considered, e.g. b_z1, y_modloss_z2 ...\nsettings_dict['model']['max_frag_charge'] # int. Max fragment charge to be considered\nsettings_dict['peak_matching']['ms2_ppm'] # bool. If use ppm as MS2 tolerance\nsettings_dict['peak_matching']['ms2_tol_value'] # float. MS2 tolerance value"
  },
  {
    "objectID": "pipeline_api.html#parameters-2",
    "href": "pipeline_api.html#parameters-2",
    "title": "The high-level pipeline APIs",
    "section": "Parameters",
    "text": "Parameters\nsettings_dict : dict, optional The settings dict, by default peptdeep.settings.global_settings. Returns ——- tuple of pd.DataFrame The PSM DataFrame and the matched fragment intensity DataFrame\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\nsettings_dict\ndict\n{‘model’: {‘frag_types’: [‘b’, ‘y’, ‘b_modloss’, ‘y_modloss’], ‘max_frag_charge’: 2}, ‘PEPTDEEP_HOME’: ‘~/peptdeep’, ‘local_model_zip_name’: ‘pretrained_models.zip’, ‘model_url’: ‘https://github.com/MannLabs/alphapeptdeep/releases/download/pre-trained-models/pretrained_models.zip’, ‘thread_num’: 8, ‘log_level’: ‘info’, ‘log_level_choices’: [‘debug’, ‘info’, ‘warning’, ‘error’, ‘critical’], ‘common’: {‘modloss_importance_level’: 1.0}, ‘peak_matching’: {‘ms2_ppm’: True, ‘ms2_tol_value’: 20.0, ‘ms1_ppm’: True, ‘ms1_tol_value’: 20.0}, ‘model_mgr’: {‘default_nce’: 30.0, ‘default_instrument’: ‘Lumos’, ‘mask_modloss’: True, ‘model_type’: ‘generic’, ‘model_choices’: [‘generic’, ‘phos’, ‘hla’, ‘digly’], ‘external_ms2_model’: ’‘, ’external_rt_model’: ’‘, ’external_ccs_model’: ’‘, ’instrument_group’: {‘Lumos’: ‘Lumos’, ‘QE’: ‘QE’, ‘timsTOF’: ‘timsTOF’, ‘SciexTOF’: ‘SciexTOF’, ‘Fusion’: ‘Lumos’, ‘Eclipse’: ‘Lumos’, ‘Velos’: ‘Lumos’, ‘Elite’: ‘Lumos’, ‘OrbitrapTribrid’: ‘Lumos’, ‘ThermoTribrid’: ‘Lumos’, ‘QE+’: ‘QE’, ‘QEHF’: ‘QE’, ‘QEHFX’: ‘QE’, ‘Exploris’: ‘QE’, ‘Exploris480’: ‘QE’, ‘LUMOS’: ‘Lumos’, ‘TIMSTOF’: ‘timsTOF’, ‘SCIEXTOF’: ‘SciexTOF’, ‘FUSION’: ‘Lumos’, ‘ECLIPSE’: ‘Lumos’, ‘VELOS’: ‘Lumos’, ‘ELITE’: ‘Lumos’, ‘ORBITRAPTRIBRID’: ‘Lumos’, ‘THERMOTRIBRID’: ‘Lumos’, ‘EXPLORIS’: ‘QE’, ‘EXPLORIS480’: ‘QE’}, ‘predict’: {‘batch_size_ms2’: 512, ‘batch_size_rt_ccs’: 1024, ‘verbose’: True, ‘multiprocessing’: True}, ‘transfer’: {‘model_output_folder’: ’‘, ’epoch_ms2’: 20, ‘warmup_epoch_ms2’: 10, ‘batch_size_ms2’: 512, ‘lr_ms2’: 0.0001, ‘epoch_rt_ccs’: 40, ‘warmup_epoch_rt_ccs’: 10, ‘batch_size_rt_ccs’: 1024, ‘lr_rt_ccs’: 0.0001, ‘verbose’: False, ‘grid_nce_search’: True, ‘grid_nce_first’: 15.0, ‘grid_nce_last’: 45.0, ‘grid_nce_step’: 3.0, ‘grid_instrument’: [‘Lumos’], ‘psm_type’: ‘alphapept’, ‘psm_type_choices’: [‘alphapept’, ‘pfind’, ‘maxquant’, ‘diann’, ‘speclib_tsv’], ‘psm_files’: [], ‘ms_file_type’: ‘alphapept_hdf’, ‘ms_file_type_choices’: [‘alphapept_hdf’, ‘thermo_raw’, ‘mgf’, ‘mzml’], ‘ms_files’: [], ‘psm_num_to_train_ms2’: 100000000, ‘psm_num_per_mod_to_train_ms2’: 50, ‘psm_num_to_train_rt_ccs’: 100000000, ‘psm_num_per_mod_to_train_rt_ccs’: 50, ‘top_n_mods_to_train’: 10}}, ‘percolator’: {‘require_model_tuning’: True, ‘raw_num_to_tune’: 8, ‘require_raw_specific_tuning’: True, ‘raw_specific_ms2_tuning’: False, ‘psm_num_per_raw_to_tune’: 200, ‘epoch_per_raw_to_tune’: 5, ‘multiprocessing’: True, ‘top_k_frags_to_calc_spc’: 10, ‘ms2_ppm’: True, ‘ms2_tol’: 20, ‘calibrate_frag_mass_error’: False, ‘max_perc_train_sample’: 1000000, ‘min_perc_train_sample’: 100, ‘percolator_backend’: ‘sklearn’, ‘percolator_backend_choices’: [‘sklearn’, ‘pytorch’], ‘percolator_model’: ‘linear’, ‘percolator_model_choices’: {‘pytorch_as_backend’: [‘linear’, ‘mlp’], ‘sklearn_as_backend’: [‘linear’, ‘random_forest’]}, ‘lr_percolator_torch_model’: 0.1, ‘percolator_iter_num’: 5, ‘cv_fold’: 1, ‘fdr’: 0.01, ‘fdr_level’: ‘psm’, ‘fdr_level_choices’: [‘psm’, ‘precursor’, ‘peptide’, ‘sequence’], ‘use_fdr_for_each_raw’: False, ‘frag_types’: [‘b_z1’, ‘b_z2’, ‘y_z1’, ‘y_z2’], ‘input_files’: {‘psm_type’: ‘alphapept’, ‘psm_type_choices’: [‘alphapept’, ‘pfind’, ‘maxquant’], ‘psm_files’: [], ‘ms_file_type’: ‘alphapept_hdf’, ‘ms_file_type_choices’: [‘hdf’, ‘thermo_raw’, ‘mgf’, ‘mzml’], ‘ms_files’: [], ‘other_score_column_mapping’: {‘alphapept’: {}, ‘pfind’: {‘raw_score’: ‘Raw_Score’}, ‘msfragger’: {‘hyperscore’: ‘hyperscore’, ‘nextscore’: ‘nextscore’}, ‘maxquant’: {}}}, ‘output_folder’: ‘C:/datasets/percolaotr’}, ‘library’: {‘input’: {‘type’: ‘fasta’, ‘type_choices’: [‘fasta’, ‘sequence_table’, ‘peptide_table’, ‘precursor_table’], ‘paths’: [‘xxx.fasta’], ‘fasta’: {‘protease’: ‘([KR])’, ‘protease_choices’: [‘trypsin/P’, ‘([KR])’, ‘trypsin’, ‘(KR)’, ‘lys-c’, ‘K’, ‘lys-n’, ‘\\w(?=K)’, ‘chymotrypsin’], ‘max_miss_cleave’: 2}, ‘fix_mods’: [‘Carbamidomethyl@C’], ‘var_mods’: [‘Oxidation@M’], ‘min_var_mod_num’: 0, ‘max_var_mod_num’: 2, ‘min_precursor_charge’: 2, ‘max_precursor_charge’: 4, ‘min_peptide_len’: 7, ‘max_peptide_len’: 35, ‘min_precursor_mz’: 200.0, ‘max_precursor_mz’: 2000.0, ‘decoy’: ‘pseudo_reverse’, ‘decoy_choices’: [‘pseudo_reverse’, ‘diann’, ‘None’], ‘max_frag_charge’: 2, ‘frag_types’: [‘b’, ‘y’]}, ‘output_folder’: ‘~/peptdeep_library’, ‘output_tsv’: {‘enabled’: False, ‘min_fragment_mz’: 200, ‘max_fragment_mz’: 2000, ‘min_relative_intensity’: 0.01, ‘keep_higest_k_peaks’: 12, ‘translate_batch_size’: 1000000, ‘translate_mod_to_unimod_id’: False}}}\nThe settings dict, by default peptdeep.settings.global_settings.\n\n\nReturns\ntuple\n\n\n\n\n\n\n\nimport_psm_df\n\n import_psm_df (psm_files:list, psm_type:str)\n\nImport PSM files of a search engine as a pd.DataFrame"
  },
  {
    "objectID": "pipeline_api.html#parameters-3",
    "href": "pipeline_api.html#parameters-3",
    "title": "The high-level pipeline APIs",
    "section": "Parameters",
    "text": "Parameters\npsm_files : list of str PSM file paths psm_type : str PSM type or search engine name/type"
  },
  {
    "objectID": "pipeline_api.html#returns",
    "href": "pipeline_api.html#returns",
    "title": "The high-level pipeline APIs",
    "section": "Returns",
    "text": "Returns\npd.DataFrame DataFrame that contains all PSM information\n\n\n\n\n\n\n\n\n\nType\nDetails\n\n\n\n\npsm_files\nlist\nPSM file paths\n\n\npsm_type\nstr\nPSM type or search engine name/type\n\n\nReturns\nDataFrame\nDataFrame that contains all PSM information"
  },
  {
    "objectID": "pipeline_api.html#library-generation-pipeline",
    "href": "pipeline_api.html#library-generation-pipeline",
    "title": "The high-level pipeline APIs",
    "section": "Library generation pipeline",
    "text": "Library generation pipeline\n\n\ngenerate_library\n\n generate_library (settings_dict:dict={'model': {'frag_types': ['b', 'y',\n                   'b_modloss', 'y_modloss'], 'max_frag_charge': 2},\n                   'PEPTDEEP_HOME': '~/peptdeep', 'local_model_zip_name':\n                   'pretrained_models.zip', 'model_url': 'https://github.c\n                   om/MannLabs/alphapeptdeep/releases/download/pre-\n                   trained-models/pretrained_models.zip', 'thread_num': 8,\n                   'log_level': 'info', 'log_level_choices': ['debug',\n                   'info', 'warning', 'error', 'critical'], 'common':\n                   {'modloss_importance_level': 1.0}, 'peak_matching':\n                   {'ms2_ppm': True, 'ms2_tol_value': 20.0, 'ms1_ppm':\n                   True, 'ms1_tol_value': 20.0}, 'model_mgr':\n                   {'default_nce': 30.0, 'default_instrument': 'Lumos',\n                   'mask_modloss': True, 'model_type': 'generic',\n                   'model_choices': ['generic', 'phos', 'hla', 'digly'],\n                   'external_ms2_model': '', 'external_rt_model': '',\n                   'external_ccs_model': '', 'instrument_group': {'Lumos':\n                   'Lumos', 'QE': 'QE', 'timsTOF': 'timsTOF', 'SciexTOF':\n                   'SciexTOF', 'Fusion': 'Lumos', 'Eclipse': 'Lumos',\n                   'Velos': 'Lumos', 'Elite': 'Lumos', 'OrbitrapTribrid':\n                   'Lumos', 'ThermoTribrid': 'Lumos', 'QE+': 'QE', 'QEHF':\n                   'QE', 'QEHFX': 'QE', 'Exploris': 'QE', 'Exploris480':\n                   'QE', 'LUMOS': 'Lumos', 'TIMSTOF': 'timsTOF',\n                   'SCIEXTOF': 'SciexTOF', 'FUSION': 'Lumos', 'ECLIPSE':\n                   'Lumos', 'VELOS': 'Lumos', 'ELITE': 'Lumos',\n                   'ORBITRAPTRIBRID': 'Lumos', 'THERMOTRIBRID': 'Lumos',\n                   'EXPLORIS': 'QE', 'EXPLORIS480': 'QE'}, 'predict':\n                   {'batch_size_ms2': 512, 'batch_size_rt_ccs': 1024,\n                   'verbose': True, 'multiprocessing': True}, 'transfer':\n                   {'model_output_folder': '', 'epoch_ms2': 20,\n                   'warmup_epoch_ms2': 10, 'batch_size_ms2': 512,\n                   'lr_ms2': 0.0001, 'epoch_rt_ccs': 40,\n                   'warmup_epoch_rt_ccs': 10, 'batch_size_rt_ccs': 1024,\n                   'lr_rt_ccs': 0.0001, 'verbose': False,\n                   'grid_nce_search': True, 'grid_nce_first': 15.0,\n                   'grid_nce_last': 45.0, 'grid_nce_step': 3.0,\n                   'grid_instrument': ['Lumos'], 'psm_type': 'alphapept',\n                   'psm_type_choices': ['alphapept', 'pfind', 'maxquant',\n                   'diann', 'speclib_tsv'], 'psm_files': [],\n                   'ms_file_type': 'alphapept_hdf',\n                   'ms_file_type_choices': ['alphapept_hdf', 'thermo_raw',\n                   'mgf', 'mzml'], 'ms_files': [], 'psm_num_to_train_ms2':\n                   100000000, 'psm_num_per_mod_to_train_ms2': 50,\n                   'psm_num_to_train_rt_ccs': 100000000,\n                   'psm_num_per_mod_to_train_rt_ccs': 50,\n                   'top_n_mods_to_train': 10}}, 'percolator':\n                   {'require_model_tuning': True, 'raw_num_to_tune': 8,\n                   'require_raw_specific_tuning': True,\n                   'raw_specific_ms2_tuning': False,\n                   'psm_num_per_raw_to_tune': 200,\n                   'epoch_per_raw_to_tune': 5, 'multiprocessing': True,\n                   'top_k_frags_to_calc_spc': 10, 'ms2_ppm': True,\n                   'ms2_tol': 20, 'calibrate_frag_mass_error': False,\n                   'max_perc_train_sample': 1000000,\n                   'min_perc_train_sample': 100, 'percolator_backend':\n                   'sklearn', 'percolator_backend_choices': ['sklearn',\n                   'pytorch'], 'percolator_model': 'linear',\n                   'percolator_model_choices': {'pytorch_as_backend':\n                   ['linear', 'mlp'], 'sklearn_as_backend': ['linear',\n                   'random_forest']}, 'lr_percolator_torch_model': 0.1,\n                   'percolator_iter_num': 5, 'cv_fold': 1, 'fdr': 0.01,\n                   'fdr_level': 'psm', 'fdr_level_choices': ['psm',\n                   'precursor', 'peptide', 'sequence'],\n                   'use_fdr_for_each_raw': False, 'frag_types': ['b_z1',\n                   'b_z2', 'y_z1', 'y_z2'], 'input_files': {'psm_type':\n                   'alphapept', 'psm_type_choices': ['alphapept', 'pfind',\n                   'maxquant'], 'psm_files': [], 'ms_file_type':\n                   'alphapept_hdf', 'ms_file_type_choices': ['hdf',\n                   'thermo_raw', 'mgf', 'mzml'], 'ms_files': [],\n                   'other_score_column_mapping': {'alphapept': {},\n                   'pfind': {'raw_score': 'Raw_Score'}, 'msfragger':\n                   {'hyperscore': 'hyperscore', 'nextscore': 'nextscore'},\n                   'maxquant': {}}}, 'output_folder':\n                   'C:/datasets/percolaotr'}, 'library': {'input':\n                   {'type': 'fasta', 'type_choices': ['fasta',\n                   'sequence_table', 'peptide_table', 'precursor_table'],\n                   'paths': ['xxx.fasta'], 'fasta': {'protease': '([KR])',\n                   'protease_choices': ['trypsin/P', '([KR])', 'trypsin',\n                   '([KR](?=[^P]))', 'lys-c', 'K', 'lys-n', '\\\\w(?=K)',\n                   'chymotrypsin'], 'max_miss_cleave': 2}, 'fix_mods':\n                   ['Carbamidomethyl@C'], 'var_mods': ['Oxidation@M'],\n                   'min_var_mod_num': 0, 'max_var_mod_num': 2,\n                   'min_precursor_charge': 2, 'max_precursor_charge': 4,\n                   'min_peptide_len': 7, 'max_peptide_len': 35,\n                   'min_precursor_mz': 200.0, 'max_precursor_mz': 2000.0,\n                   'decoy': 'pseudo_reverse', 'decoy_choices':\n                   ['pseudo_reverse', 'diann', 'None'], 'max_frag_charge':\n                   2, 'frag_types': ['b', 'y']}, 'output_folder':\n                   '~/peptdeep_library', 'output_tsv': {'enabled': False,\n                   'min_fragment_mz': 200, 'max_fragment_mz': 2000,\n                   'min_relative_intensity': 0.01, 'keep_higest_k_peaks':\n                   12, 'translate_batch_size': 1000000,\n                   'translate_mod_to_unimod_id': False}}})\n\nGenerate/predict a spectral library.\nAll required information in settings_dict:\nlib_settings = settings_dict['library']\noutput_folder = lib_settings['output_folder'] # str. Output folder of the library\nlib_settings['input']['type'] # str. Input type for the library, could be 'fasta', 'sequence', 'peptide', or 'precursor'\nlib_settings['input']['paths'] # list of str. Input files to generate librarys\nlib_settings['output_tsv']['enabled'] # bool. If output tsv for diann/spectronaut"
  },
  {
    "objectID": "pipeline_api.html#parameters-4",
    "href": "pipeline_api.html#parameters-4",
    "title": "The high-level pipeline APIs",
    "section": "Parameters",
    "text": "Parameters\nsettings_dict : dict, optional The settings dict, by default peptdeep.settings.global_settings."
  },
  {
    "objectID": "pipeline_api.html#raises-1",
    "href": "pipeline_api.html#raises-1",
    "title": "The high-level pipeline APIs",
    "section": "Raises",
    "text": "Raises\nException Any kinds of exception if the pipeline fails."
  },
  {
    "objectID": "pipeline_api.html#rescoring-percolator-pipeline",
    "href": "pipeline_api.html#rescoring-percolator-pipeline",
    "title": "The high-level pipeline APIs",
    "section": "Rescoring (percolator) pipeline",
    "text": "Rescoring (percolator) pipeline\n\n\nrescore_psms\n\n rescore_psms (settings_dict:dict={'model': {'frag_types': ['b', 'y',\n               'b_modloss', 'y_modloss'], 'max_frag_charge': 2},\n               'PEPTDEEP_HOME': '~/peptdeep', 'local_model_zip_name':\n               'pretrained_models.zip', 'model_url': 'https://github.com/M\n               annLabs/alphapeptdeep/releases/download/pre-trained-\n               models/pretrained_models.zip', 'thread_num': 8,\n               'log_level': 'info', 'log_level_choices': ['debug', 'info',\n               'warning', 'error', 'critical'], 'common':\n               {'modloss_importance_level': 1.0}, 'peak_matching':\n               {'ms2_ppm': True, 'ms2_tol_value': 20.0, 'ms1_ppm': True,\n               'ms1_tol_value': 20.0}, 'model_mgr': {'default_nce': 30.0,\n               'default_instrument': 'Lumos', 'mask_modloss': True,\n               'model_type': 'generic', 'model_choices': ['generic',\n               'phos', 'hla', 'digly'], 'external_ms2_model': '',\n               'external_rt_model': '', 'external_ccs_model': '',\n               'instrument_group': {'Lumos': 'Lumos', 'QE': 'QE',\n               'timsTOF': 'timsTOF', 'SciexTOF': 'SciexTOF', 'Fusion':\n               'Lumos', 'Eclipse': 'Lumos', 'Velos': 'Lumos', 'Elite':\n               'Lumos', 'OrbitrapTribrid': 'Lumos', 'ThermoTribrid':\n               'Lumos', 'QE+': 'QE', 'QEHF': 'QE', 'QEHFX': 'QE',\n               'Exploris': 'QE', 'Exploris480': 'QE', 'LUMOS': 'Lumos',\n               'TIMSTOF': 'timsTOF', 'SCIEXTOF': 'SciexTOF', 'FUSION':\n               'Lumos', 'ECLIPSE': 'Lumos', 'VELOS': 'Lumos', 'ELITE':\n               'Lumos', 'ORBITRAPTRIBRID': 'Lumos', 'THERMOTRIBRID':\n               'Lumos', 'EXPLORIS': 'QE', 'EXPLORIS480': 'QE'}, 'predict':\n               {'batch_size_ms2': 512, 'batch_size_rt_ccs': 1024,\n               'verbose': True, 'multiprocessing': True}, 'transfer':\n               {'model_output_folder': '', 'epoch_ms2': 20,\n               'warmup_epoch_ms2': 10, 'batch_size_ms2': 512, 'lr_ms2':\n               0.0001, 'epoch_rt_ccs': 40, 'warmup_epoch_rt_ccs': 10,\n               'batch_size_rt_ccs': 1024, 'lr_rt_ccs': 0.0001, 'verbose':\n               False, 'grid_nce_search': True, 'grid_nce_first': 15.0,\n               'grid_nce_last': 45.0, 'grid_nce_step': 3.0,\n               'grid_instrument': ['Lumos'], 'psm_type': 'alphapept',\n               'psm_type_choices': ['alphapept', 'pfind', 'maxquant',\n               'diann', 'speclib_tsv'], 'psm_files': [], 'ms_file_type':\n               'alphapept_hdf', 'ms_file_type_choices': ['alphapept_hdf',\n               'thermo_raw', 'mgf', 'mzml'], 'ms_files': [],\n               'psm_num_to_train_ms2': 100000000,\n               'psm_num_per_mod_to_train_ms2': 50,\n               'psm_num_to_train_rt_ccs': 100000000,\n               'psm_num_per_mod_to_train_rt_ccs': 50,\n               'top_n_mods_to_train': 10}}, 'percolator':\n               {'require_model_tuning': True, 'raw_num_to_tune': 8,\n               'require_raw_specific_tuning': True,\n               'raw_specific_ms2_tuning': False,\n               'psm_num_per_raw_to_tune': 200, 'epoch_per_raw_to_tune': 5,\n               'multiprocessing': True, 'top_k_frags_to_calc_spc': 10,\n               'ms2_ppm': True, 'ms2_tol': 20,\n               'calibrate_frag_mass_error': False,\n               'max_perc_train_sample': 1000000, 'min_perc_train_sample':\n               100, 'percolator_backend': 'sklearn',\n               'percolator_backend_choices': ['sklearn', 'pytorch'],\n               'percolator_model': 'linear', 'percolator_model_choices':\n               {'pytorch_as_backend': ['linear', 'mlp'],\n               'sklearn_as_backend': ['linear', 'random_forest']},\n               'lr_percolator_torch_model': 0.1, 'percolator_iter_num': 5,\n               'cv_fold': 1, 'fdr': 0.01, 'fdr_level': 'psm',\n               'fdr_level_choices': ['psm', 'precursor', 'peptide',\n               'sequence'], 'use_fdr_for_each_raw': False, 'frag_types':\n               ['b_z1', 'b_z2', 'y_z1', 'y_z2'], 'input_files':\n               {'psm_type': 'alphapept', 'psm_type_choices': ['alphapept',\n               'pfind', 'maxquant'], 'psm_files': [], 'ms_file_type':\n               'alphapept_hdf', 'ms_file_type_choices': ['hdf',\n               'thermo_raw', 'mgf', 'mzml'], 'ms_files': [],\n               'other_score_column_mapping': {'alphapept': {}, 'pfind':\n               {'raw_score': 'Raw_Score'}, 'msfragger': {'hyperscore':\n               'hyperscore', 'nextscore': 'nextscore'}, 'maxquant': {}}},\n               'output_folder': 'C:/datasets/percolaotr'}, 'library':\n               {'input': {'type': 'fasta', 'type_choices': ['fasta',\n               'sequence_table', 'peptide_table', 'precursor_table'],\n               'paths': ['xxx.fasta'], 'fasta': {'protease': '([KR])',\n               'protease_choices': ['trypsin/P', '([KR])', 'trypsin',\n               '([KR](?=[^P]))', 'lys-c', 'K', 'lys-n', '\\\\w(?=K)',\n               'chymotrypsin'], 'max_miss_cleave': 2}, 'fix_mods':\n               ['Carbamidomethyl@C'], 'var_mods': ['Oxidation@M'],\n               'min_var_mod_num': 0, 'max_var_mod_num': 2,\n               'min_precursor_charge': 2, 'max_precursor_charge': 4,\n               'min_peptide_len': 7, 'max_peptide_len': 35,\n               'min_precursor_mz': 200.0, 'max_precursor_mz': 2000.0,\n               'decoy': 'pseudo_reverse', 'decoy_choices':\n               ['pseudo_reverse', 'diann', 'None'], 'max_frag_charge': 2,\n               'frag_types': ['b', 'y']}, 'output_folder':\n               '~/peptdeep_library', 'output_tsv': {'enabled': False,\n               'min_fragment_mz': 200, 'max_fragment_mz': 2000,\n               'min_relative_intensity': 0.01, 'keep_higest_k_peaks': 12,\n               'translate_batch_size': 1000000,\n               'translate_mod_to_unimod_id': False}}})\n\nGenerate/predict a spectral library.\nAll required information in settings_dict:\nperc_settings = settings_dict['percolator']\noutput_folder = perc_settings['output_folder'] # str. Output folder of the rescored results\nperc_settings['input_files']['psm_files'] # list of str. all PSM files (at 100% FDR and including decoys) from the search engines\nperc_settings['input_files']['psm_type'] # str. PSM or search engine type, e.g. pfind, alphapept, maxquant\nperc_settings['input_files']['ms_file_type'] # str. Could be alphapept_hdf, thermo, ...\nperc_settings['input_files']['ms_files'] # list of str. MS file list to match MS2 peaks"
  },
  {
    "objectID": "pipeline_api.html#parameters-5",
    "href": "pipeline_api.html#parameters-5",
    "title": "The high-level pipeline APIs",
    "section": "Parameters",
    "text": "Parameters\nsettings_dict : dict, optional The settings dict, by default peptdeep.settings.global_settings."
  },
  {
    "objectID": "pipeline_api.html#raises-2",
    "href": "pipeline_api.html#raises-2",
    "title": "The high-level pipeline APIs",
    "section": "Raises",
    "text": "Raises\nException Any kinds of exception if the pipeline fails."
  },
  {
    "objectID": "test_ui.html",
    "href": "test_ui.html",
    "title": "Testing GUI",
    "section": "",
    "text": "import os\n__file__ = os.path.abspath('./test_ui.py')\nimport peptdeep.webui.library_ui\nimport peptdeep.webui.main_ui\nimport peptdeep.webui.model_ui\nimport peptdeep.webui.rescore_ui\nimport peptdeep.webui.startpage\nimport peptdeep.webui.transfer_ui\n\npeptdeep.webui.library_ui.show()\npeptdeep.webui.model_ui.show()\npeptdeep.webui.rescore_ui.show()\npeptdeep.webui.transfer_ui.show()\n\n2022-07-22 09:09:17.053 INFO    numexpr.utils: NumExpr defaulting to 8 threads.\n\n\n2022-07-22 09:09:42> \n  Warning: to view this Streamlit app on a browser, run it with the following\n  command:\n\n    streamlit run /Users/zengwenfeng/opt/anaconda3/lib/python3.8/site-packages/ipykernel_launcher.py [ARGUMENTS]\n\n\n2022-07-22 09:09:42.894 \n  Warning: to view this Streamlit app on a browser, run it with the following\n  command:\n\n    streamlit run /Users/zengwenfeng/opt/anaconda3/lib/python3.8/site-packages/ipykernel_launcher.py [ARGUMENTS]"
  },
  {
    "objectID": "model/model.generic_property_prediction.html",
    "href": "model/model.generic_property_prediction.html",
    "title": "Generic Property Prediction",
    "section": "",
    "text": "One focus of the AlpahPeptDeep framework is on the prediction of retention times, MS2 Spectra and Collisional Cross sections of peptides. The Models to predict these properties are defined in the notebooks rt.ipynb, ms2.ipynb and ccs.ipynb respectively. In the following notebook, we define a more generalized model, which in principle allows to predict or classify arbitrary properties of peptides. The classes allow users to create new deep learning predictions of peptide properties, even without prior expertise in deep learning. ### How to build new models, even without experience in deep learning In order to predict or classify novel properties of peptides, the user simply needs to provide a list of peptides with a corresponding property (e.g. ‘binding affinity’) for each peptide. The user only needs to initialize one the ModelInterface classes below and specify the name of the target_column_to_train and optionally the target_column_to_predict. The generic model classes will try to derive predictions or classifications of the property from the peptide sequence. Additional classes are also given, which complement the peptide sequence info with site-specific PTM infos."
  },
  {
    "objectID": "model/model.generic_property_prediction.html#imports",
    "href": "model/model.generic_property_prediction.html#imports",
    "title": "Generic Property Prediction",
    "section": "Imports",
    "text": "Imports"
  },
  {
    "objectID": "model/model.generic_property_prediction.html#regression-models-for-predicting-a-scalar-value-for-a-given-amino-acid-sequence",
    "href": "model/model.generic_property_prediction.html#regression-models-for-predicting-a-scalar-value-for-a-given-amino-acid-sequence",
    "title": "Generic Property Prediction",
    "section": "Regression models for predicting a scalar value for a given amino acid sequence",
    "text": "Regression models for predicting a scalar value for a given amino acid sequence\n\n\nModelInterface_for_Generic_AASeq_Regression\n\n ModelInterface_for_Generic_AASeq_Regression (dropout=0.1,\n                                              model_class:torch.nn.modules\n                                              .module.Module=<class '__mai\n                                              n__.Model_for_Generic_AASeq_\n                                              Regression_LSTM'>,\n                                              device:str='gpu', **kwargs)\n\nProvides standardized methods to interact with ml models. Inherit into new class and override the abstract (i.e. not implemented) methods.\n\n\n\nModel_for_Generic_AASeq_Regression_Transformer\n\n Model_for_Generic_AASeq_Regression_Transformer (hidden_dim=256,\n                                                 nlayers=4,\n                                                 output_attentions=False,\n                                                 dropout=0.1, **kwargs)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\n\nModel_for_Generic_AASeq_Regression_LSTM\n\n Model_for_Generic_AASeq_Regression_LSTM (hidden_dim=256, n_lstm_layers=4,\n                                          dropout=0.1, **kwargs)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\nExamples\n\nDefine example Table\n\ndef create_example_input_dataframe_normalized_irt():\n    from peptdeep.model.rt import IRT_PEPTIDE_DF\n    \n    IRT_PEPTIDE_DF=IRT_PEPTIDE_DF.copy()\n    IRT_PEPTIDE_DF['normalized_irt'] = (\n        IRT_PEPTIDE_DF.irt-IRT_PEPTIDE_DF.irt.min()\n    )/(IRT_PEPTIDE_DF.irt.max()-IRT_PEPTIDE_DF.irt.min())\n    return IRT_PEPTIDE_DF\n\ncreate_example_input_dataframe_normalized_irt()\n\n\n\n\n\n  \n    \n      \n      sequence\n      pep_name\n      irt\n      mods\n      mod_sites\n      nAA\n      normalized_irt\n    \n  \n  \n    \n      0\n      LGGNEQVTR\n      RT-pep a\n      -24.92\n      \n      \n      9\n      0.000000\n    \n    \n      1\n      GAGSSEPVTGLDAK\n      RT-pep b\n      0.00\n      \n      \n      14\n      0.199488\n    \n    \n      2\n      VEATFGVDESNAK\n      RT-pep c\n      12.39\n      \n      \n      13\n      0.298671\n    \n    \n      3\n      YILAGVENSK\n      RT-pep d\n      19.79\n      \n      \n      10\n      0.357909\n    \n    \n      4\n      TPVISGGPYEYR\n      RT-pep e\n      28.71\n      \n      \n      12\n      0.429315\n    \n    \n      5\n      TPVITGAPYEYR\n      RT-pep f\n      33.38\n      \n      \n      12\n      0.466699\n    \n    \n      6\n      DGLDAASYYAPVR\n      RT-pep g\n      42.26\n      \n      \n      13\n      0.537784\n    \n    \n      7\n      ADVTPADFSEWSK\n      RT-pep h\n      54.62\n      \n      \n      13\n      0.636728\n    \n    \n      8\n      GTFIIDPGGVIR\n      RT-pep i\n      70.52\n      \n      \n      12\n      0.764009\n    \n    \n      9\n      GTFIIDPAAVIR\n      RT-pep k\n      87.23\n      \n      \n      12\n      0.897775\n    \n    \n      10\n      LFLQFGAQGSPFLK\n      RT-pep l\n      100.00\n      \n      \n      14\n      1.000000\n    \n  \n\n\n\n\n\n\nBuilding an RT model based on Model_for_Generic_AASeq_Regression_LSTM\n\nexample_df = create_example_input_dataframe_normalized_irt()\ndisplay(example_df)\n\n#initialize the modelinterface, specify which of the models to use\nmodel = ModelInterface_for_Generic_AASeq_Regression(\n    model_class=Model_for_Generic_AASeq_Regression_LSTM\n)\n# specify the name of the column you want to use for traning\nmodel.target_column_to_train = 'normalized_irt'\nmodel.target_column_to_predict = 'predicted_normalized_irt'\nmodel.train(example_df, epoch=20)\nmodel.predict(example_df)\n\n\n\n\n\n  \n    \n      \n      sequence\n      pep_name\n      irt\n      mods\n      mod_sites\n      nAA\n      normalized_irt\n    \n  \n  \n    \n      0\n      LGGNEQVTR\n      RT-pep a\n      -24.92\n      \n      \n      9\n      0.000000\n    \n    \n      1\n      GAGSSEPVTGLDAK\n      RT-pep b\n      0.00\n      \n      \n      14\n      0.199488\n    \n    \n      2\n      VEATFGVDESNAK\n      RT-pep c\n      12.39\n      \n      \n      13\n      0.298671\n    \n    \n      3\n      YILAGVENSK\n      RT-pep d\n      19.79\n      \n      \n      10\n      0.357909\n    \n    \n      4\n      TPVISGGPYEYR\n      RT-pep e\n      28.71\n      \n      \n      12\n      0.429315\n    \n    \n      5\n      TPVITGAPYEYR\n      RT-pep f\n      33.38\n      \n      \n      12\n      0.466699\n    \n    \n      6\n      DGLDAASYYAPVR\n      RT-pep g\n      42.26\n      \n      \n      13\n      0.537784\n    \n    \n      7\n      ADVTPADFSEWSK\n      RT-pep h\n      54.62\n      \n      \n      13\n      0.636728\n    \n    \n      8\n      GTFIIDPGGVIR\n      RT-pep i\n      70.52\n      \n      \n      12\n      0.764009\n    \n    \n      9\n      GTFIIDPAAVIR\n      RT-pep k\n      87.23\n      \n      \n      12\n      0.897775\n    \n    \n      10\n      LFLQFGAQGSPFLK\n      RT-pep l\n      100.00\n      \n      \n      14\n      1.000000\n    \n  \n\n\n\n\n\n\n\n\n  \n    \n      \n      sequence\n      pep_name\n      irt\n      mods\n      mod_sites\n      nAA\n      normalized_irt\n      predicted_normalized_irt\n    \n  \n  \n    \n      0\n      LGGNEQVTR\n      RT-pep a\n      -24.92\n      \n      \n      9\n      0.000000\n      0.007052\n    \n    \n      1\n      GAGSSEPVTGLDAK\n      RT-pep b\n      0.00\n      \n      \n      14\n      0.199488\n      0.237059\n    \n    \n      2\n      VEATFGVDESNAK\n      RT-pep c\n      12.39\n      \n      \n      13\n      0.298671\n      0.321053\n    \n    \n      3\n      YILAGVENSK\n      RT-pep d\n      19.79\n      \n      \n      10\n      0.357909\n      0.371977\n    \n    \n      4\n      TPVISGGPYEYR\n      RT-pep e\n      28.71\n      \n      \n      12\n      0.429315\n      0.423640\n    \n    \n      5\n      TPVITGAPYEYR\n      RT-pep f\n      33.38\n      \n      \n      12\n      0.466699\n      0.479110\n    \n    \n      6\n      DGLDAASYYAPVR\n      RT-pep g\n      42.26\n      \n      \n      13\n      0.537784\n      0.711614\n    \n    \n      7\n      ADVTPADFSEWSK\n      RT-pep h\n      54.62\n      \n      \n      13\n      0.636728\n      0.705609\n    \n    \n      8\n      GTFIIDPGGVIR\n      RT-pep i\n      70.52\n      \n      \n      12\n      0.764009\n      0.648197\n    \n    \n      9\n      GTFIIDPAAVIR\n      RT-pep k\n      87.23\n      \n      \n      12\n      0.897775\n      0.833484\n    \n    \n      10\n      LFLQFGAQGSPFLK\n      RT-pep l\n      100.00\n      \n      \n      14\n      1.000000\n      0.978105\n    \n  \n\n\n\n\n\n\nBuilding an RT model for only sequences based on Model_for_Generic_AASeq_Regression_Transformer\n\nexample_df = create_example_input_dataframe_normalized_irt()\ndisplay(example_df)\n\n#initialize the modelinterface, specify which of the models to use\nmodel = ModelInterface_for_Generic_AASeq_Regression(\n    model_class=Model_for_Generic_AASeq_Regression_Transformer\n)\n# specify the name of the column you want to use for traning\nmodel.target_column_to_train = 'normalized_irt'\nmodel.target_column_to_predict = 'predicted_normalized_irt'\nmodel.train(example_df, epoch=20)\nmodel.predict(example_df)\n\n\n\n\n\n  \n    \n      \n      sequence\n      pep_name\n      irt\n      mods\n      mod_sites\n      nAA\n      normalized_irt\n    \n  \n  \n    \n      0\n      LGGNEQVTR\n      RT-pep a\n      -24.92\n      \n      \n      9\n      0.000000\n    \n    \n      1\n      GAGSSEPVTGLDAK\n      RT-pep b\n      0.00\n      \n      \n      14\n      0.199488\n    \n    \n      2\n      VEATFGVDESNAK\n      RT-pep c\n      12.39\n      \n      \n      13\n      0.298671\n    \n    \n      3\n      YILAGVENSK\n      RT-pep d\n      19.79\n      \n      \n      10\n      0.357909\n    \n    \n      4\n      TPVISGGPYEYR\n      RT-pep e\n      28.71\n      \n      \n      12\n      0.429315\n    \n    \n      5\n      TPVITGAPYEYR\n      RT-pep f\n      33.38\n      \n      \n      12\n      0.466699\n    \n    \n      6\n      DGLDAASYYAPVR\n      RT-pep g\n      42.26\n      \n      \n      13\n      0.537784\n    \n    \n      7\n      ADVTPADFSEWSK\n      RT-pep h\n      54.62\n      \n      \n      13\n      0.636728\n    \n    \n      8\n      GTFIIDPGGVIR\n      RT-pep i\n      70.52\n      \n      \n      12\n      0.764009\n    \n    \n      9\n      GTFIIDPAAVIR\n      RT-pep k\n      87.23\n      \n      \n      12\n      0.897775\n    \n    \n      10\n      LFLQFGAQGSPFLK\n      RT-pep l\n      100.00\n      \n      \n      14\n      1.000000\n    \n  \n\n\n\n\n\n\n\n\n  \n    \n      \n      sequence\n      pep_name\n      irt\n      mods\n      mod_sites\n      nAA\n      normalized_irt\n      predicted_normalized_irt\n    \n  \n  \n    \n      0\n      LGGNEQVTR\n      RT-pep a\n      -24.92\n      \n      \n      9\n      0.000000\n      0.098438\n    \n    \n      1\n      GAGSSEPVTGLDAK\n      RT-pep b\n      0.00\n      \n      \n      14\n      0.199488\n      0.310149\n    \n    \n      2\n      VEATFGVDESNAK\n      RT-pep c\n      12.39\n      \n      \n      13\n      0.298671\n      0.330474\n    \n    \n      3\n      YILAGVENSK\n      RT-pep d\n      19.79\n      \n      \n      10\n      0.357909\n      0.464114\n    \n    \n      4\n      TPVISGGPYEYR\n      RT-pep e\n      28.71\n      \n      \n      12\n      0.429315\n      0.579034\n    \n    \n      5\n      TPVITGAPYEYR\n      RT-pep f\n      33.38\n      \n      \n      12\n      0.466699\n      0.531123\n    \n    \n      6\n      DGLDAASYYAPVR\n      RT-pep g\n      42.26\n      \n      \n      13\n      0.537784\n      0.774658\n    \n    \n      7\n      ADVTPADFSEWSK\n      RT-pep h\n      54.62\n      \n      \n      13\n      0.636728\n      0.752060\n    \n    \n      8\n      GTFIIDPGGVIR\n      RT-pep i\n      70.52\n      \n      \n      12\n      0.764009\n      0.837158\n    \n    \n      9\n      GTFIIDPAAVIR\n      RT-pep k\n      87.23\n      \n      \n      12\n      0.897775\n      0.967516\n    \n    \n      10\n      LFLQFGAQGSPFLK\n      RT-pep l\n      100.00\n      \n      \n      14\n      1.000000\n      1.165970"
  },
  {
    "objectID": "model/model.generic_property_prediction.html#regression-models-for-predicting-a-scalar-value-for-a-given-amino-acid-sequence-and-site-specific-ptms",
    "href": "model/model.generic_property_prediction.html#regression-models-for-predicting-a-scalar-value-for-a-given-amino-acid-sequence-and-site-specific-ptms",
    "title": "Generic Property Prediction",
    "section": "Regression models for predicting a scalar value for a given amino acid sequence and site-specific PTMs",
    "text": "Regression models for predicting a scalar value for a given amino acid sequence and site-specific PTMs\n\n\nModelInterface_for_Generic_ModAASeq_Regression\n\n ModelInterface_for_Generic_ModAASeq_Regression (dropout=0.1,\n                                                 model_class:torch.nn.modu\n                                                 les.module.Module=<class \n                                                 '__main__.Model_for_Gener\n                                                 ic_ModAASeq_Regression_LS\n                                                 TM'>, device:str='gpu',\n                                                 **kwargs)\n\nProvides standardized methods to interact with ml models. Inherit into new class and override the abstract (i.e. not implemented) methods.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndropout\nfloat\n0.1\n\n\n\nmodel_class\nModule\nModel_for_Generic_ModAASeq_Regression_LSTM\nmodel defined above\n\n\ndevice\nstr\ngpu\n\n\n\nkwargs\n\n\n\n\n\n\n\n\n\nModel_for_Generic_ModAASeq_Regression_Transformer\n\n Model_for_Generic_ModAASeq_Regression_Transformer (hidden_dim=256,\n                                                    nlayers=4, output_atte\n                                                    ntions=False,\n                                                    dropout=0.1, **kwargs)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\n\nModel_for_Generic_ModAASeq_Regression_LSTM\n\n Model_for_Generic_ModAASeq_Regression_LSTM (hidden_dim=256,\n                                             n_lstm_layers=4, dropout=0.1,\n                                             **kwargs)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\nScalar regression model (RT) with modified AA sequences using Model_for_Generic_ModAASeq_Regression_LSTM\n\nexample_df = create_example_input_dataframe_normalized_irt()\n\n#initialize the modelinterface, specify which of the models to use\nmodel = ModelInterface_for_Generic_ModAASeq_Regression(\n    model_class=Model_for_Generic_ModAASeq_Regression_LSTM\n)\n# specify the name of the column you want to use for traning\nmodel.target_column_to_train = 'normalized_irt'\nmodel.target_column_to_predict = 'predicted_normalized_irt'\nmodel.train(example_df, epoch=20)\nmodel.predict(example_df)\n\n\n\n\n\n  \n    \n      \n      sequence\n      pep_name\n      irt\n      mods\n      mod_sites\n      nAA\n      normalized_irt\n      predicted_normalized_irt\n    \n  \n  \n    \n      0\n      LGGNEQVTR\n      RT-pep a\n      -24.92\n      \n      \n      9\n      0.000000\n      0.008056\n    \n    \n      1\n      GAGSSEPVTGLDAK\n      RT-pep b\n      0.00\n      \n      \n      14\n      0.199488\n      0.198335\n    \n    \n      2\n      VEATFGVDESNAK\n      RT-pep c\n      12.39\n      \n      \n      13\n      0.298671\n      0.304394\n    \n    \n      3\n      YILAGVENSK\n      RT-pep d\n      19.79\n      \n      \n      10\n      0.357909\n      0.358489\n    \n    \n      4\n      TPVISGGPYEYR\n      RT-pep e\n      28.71\n      \n      \n      12\n      0.429315\n      0.427770\n    \n    \n      5\n      TPVITGAPYEYR\n      RT-pep f\n      33.38\n      \n      \n      12\n      0.466699\n      0.461542\n    \n    \n      6\n      DGLDAASYYAPVR\n      RT-pep g\n      42.26\n      \n      \n      13\n      0.537784\n      0.518003\n    \n    \n      7\n      ADVTPADFSEWSK\n      RT-pep h\n      54.62\n      \n      \n      13\n      0.636728\n      0.608539\n    \n    \n      8\n      GTFIIDPGGVIR\n      RT-pep i\n      70.52\n      \n      \n      12\n      0.764009\n      0.739531\n    \n    \n      9\n      GTFIIDPAAVIR\n      RT-pep k\n      87.23\n      \n      \n      12\n      0.897775\n      0.836452\n    \n    \n      10\n      LFLQFGAQGSPFLK\n      RT-pep l\n      100.00\n      \n      \n      14\n      1.000000\n      0.946470\n    \n  \n\n\n\n\n\n\nScalar regression model (RT) with modified AA sequences using Model_for_Generic_ModAASeq_Regression_Transformer\n\nexample_df = create_example_input_dataframe_normalized_irt()\n\n#initialize the modelinterface, specify which of the models to use\nmodel = ModelInterface_for_Generic_ModAASeq_Regression(\n    model_class=Model_for_Generic_ModAASeq_Regression_Transformer\n)\n# specify the name of the column you want to use for traning\nmodel.target_column_to_train = 'normalized_irt'\nmodel.target_column_to_predict = 'predicted_normalized_irt'\nmodel.train(example_df, epoch=20)\nmodel.predict(example_df)\n\n\n\n\n\n  \n    \n      \n      sequence\n      pep_name\n      irt\n      mods\n      mod_sites\n      nAA\n      normalized_irt\n      predicted_normalized_irt\n    \n  \n  \n    \n      0\n      LGGNEQVTR\n      RT-pep a\n      -24.92\n      \n      \n      9\n      0.000000\n      0.000000\n    \n    \n      1\n      GAGSSEPVTGLDAK\n      RT-pep b\n      0.00\n      \n      \n      14\n      0.199488\n      0.099054\n    \n    \n      2\n      VEATFGVDESNAK\n      RT-pep c\n      12.39\n      \n      \n      13\n      0.298671\n      0.231878\n    \n    \n      3\n      YILAGVENSK\n      RT-pep d\n      19.79\n      \n      \n      10\n      0.357909\n      0.407409\n    \n    \n      4\n      TPVISGGPYEYR\n      RT-pep e\n      28.71\n      \n      \n      12\n      0.429315\n      0.294037\n    \n    \n      5\n      TPVITGAPYEYR\n      RT-pep f\n      33.38\n      \n      \n      12\n      0.466699\n      0.343179\n    \n    \n      6\n      DGLDAASYYAPVR\n      RT-pep g\n      42.26\n      \n      \n      13\n      0.537784\n      0.548849\n    \n    \n      7\n      ADVTPADFSEWSK\n      RT-pep h\n      54.62\n      \n      \n      13\n      0.636728\n      0.543506\n    \n    \n      8\n      GTFIIDPGGVIR\n      RT-pep i\n      70.52\n      \n      \n      12\n      0.764009\n      0.700900\n    \n    \n      9\n      GTFIIDPAAVIR\n      RT-pep k\n      87.23\n      \n      \n      12\n      0.897775\n      0.875348\n    \n    \n      10\n      LFLQFGAQGSPFLK\n      RT-pep l\n      100.00\n      \n      \n      14\n      1.000000\n      1.009214"
  },
  {
    "objectID": "model/model.generic_property_prediction.html#binary-classification-models-for-a-given-amino-acid-sequence",
    "href": "model/model.generic_property_prediction.html#binary-classification-models-for-a-given-amino-acid-sequence",
    "title": "Generic Property Prediction",
    "section": "Binary classification models for a given amino acid sequence",
    "text": "Binary classification models for a given amino acid sequence\n\n\nModelInterface_for_Generic_AASeq_BinaryClassification\n\n ModelInterface_for_Generic_AASeq_BinaryClassification (dropout=0.1,\n                                                        model_class:torch.\n                                                        nn.modules.module.\n                                                        Module=<class '__m\n                                                        ain__.Model_for_Ge\n                                                        neric_AASeq_Binary\n                                                        Classification_LST\n                                                        M'>,\n                                                        device:str='gpu',\n                                                        **kwargs)\n\nProvides standardized methods to interact with ml models. Inherit into new class and override the abstract (i.e. not implemented) methods.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndropout\nfloat\n0.1\n\n\n\nmodel_class\nModule\nModel_for_Generic_AASeq_BinaryClassification_LSTM\nmodel defined above\n\n\ndevice\nstr\ngpu\n\n\n\nkwargs\n\n\n\n\n\n\n\n\n\nModel_for_Generic_AASeq_BinaryClassification_Transformer\n\n Model_for_Generic_AASeq_BinaryClassification_Transformer (hidden_dim=256,\n                                                           nlayers=4, outp\n                                                           ut_attentions=F\n                                                           alse,\n                                                           dropout=0.1,\n                                                           **kwargs)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\n\nModel_for_Generic_AASeq_BinaryClassification_LSTM\n\n Model_for_Generic_AASeq_BinaryClassification_LSTM (hidden_dim=256,\n                                                    n_lstm_layers=4,\n                                                    dropout=0.1, **kwargs)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\nExamples\n\ndef create_example_input_dataframe_classification_rt():\n    rt_df = create_example_input_dataframe_normalized_irt()\n    rt_df['is_in_first_half_of_column'] = 0\n    rt_df.loc[:5,'is_in_first_half_of_column']=1\n    return rt_df\n\n\nA sequence classification model using Model_for_Generic_AASeq_BinaryClassification_LSTM\n\nexample_df = create_example_input_dataframe_classification_rt()\n\n#initialize the modelinterface, specify which of the models to use\nmodel = ModelInterface_for_Generic_AASeq_BinaryClassification(\n    model_class=Model_for_Generic_AASeq_BinaryClassification_LSTM\n)\n# specify the name of the column you want to use for traning\nmodel.target_column_to_train = 'is_in_first_half_of_column' \nmodel.target_column_to_predict = 'predicted_will_be_in_first_half_of_column'\nmodel.train(example_df, epoch=20)\nmodel.predict(example_df)\n\n\n\n\n\n  \n    \n      \n      sequence\n      pep_name\n      irt\n      mods\n      mod_sites\n      nAA\n      normalized_irt\n      is_in_first_half_of_column\n      predicted_will_be_in_first_half_of_column\n    \n  \n  \n    \n      0\n      LGGNEQVTR\n      RT-pep a\n      -24.92\n      \n      \n      9\n      0.000000\n      1\n      0.993174\n    \n    \n      1\n      GAGSSEPVTGLDAK\n      RT-pep b\n      0.00\n      \n      \n      14\n      0.199488\n      1\n      0.989214\n    \n    \n      2\n      VEATFGVDESNAK\n      RT-pep c\n      12.39\n      \n      \n      13\n      0.298671\n      1\n      0.993532\n    \n    \n      3\n      YILAGVENSK\n      RT-pep d\n      19.79\n      \n      \n      10\n      0.357909\n      1\n      0.992786\n    \n    \n      4\n      TPVISGGPYEYR\n      RT-pep e\n      28.71\n      \n      \n      12\n      0.429315\n      1\n      0.992660\n    \n    \n      5\n      TPVITGAPYEYR\n      RT-pep f\n      33.38\n      \n      \n      12\n      0.466699\n      1\n      0.991030\n    \n    \n      6\n      DGLDAASYYAPVR\n      RT-pep g\n      42.26\n      \n      \n      13\n      0.537784\n      0\n      0.308686\n    \n    \n      7\n      ADVTPADFSEWSK\n      RT-pep h\n      54.62\n      \n      \n      13\n      0.636728\n      0\n      0.317267\n    \n    \n      8\n      GTFIIDPGGVIR\n      RT-pep i\n      70.52\n      \n      \n      12\n      0.764009\n      0\n      0.323006\n    \n    \n      9\n      GTFIIDPAAVIR\n      RT-pep k\n      87.23\n      \n      \n      12\n      0.897775\n      0\n      0.316616\n    \n    \n      10\n      LFLQFGAQGSPFLK\n      RT-pep l\n      100.00\n      \n      \n      14\n      1.000000\n      0\n      0.310942\n    \n  \n\n\n\n\n\n\nA sequence classification model using Model_for_Generic_AASeq_BinaryClassification_Transformer\n\nexample_df = create_example_input_dataframe_classification_rt()\n\n#initialize the modelinterface, specify which of the models to use\nmodel = ModelInterface_for_Generic_AASeq_BinaryClassification(\n    model_class=Model_for_Generic_AASeq_BinaryClassification_Transformer\n)\n# specify the name of the column you want to use for traning\nmodel.target_column_to_train = 'is_in_first_half_of_column'\nmodel.target_column_to_predict = 'predicted_will_be_in_first_half_of_column'\nmodel.train(example_df, epoch=20)\nmodel.predict(example_df)\n\n\n\n\n\n  \n    \n      \n      sequence\n      pep_name\n      irt\n      mods\n      mod_sites\n      nAA\n      normalized_irt\n      is_in_first_half_of_column\n      predicted_will_be_in_first_half_of_column\n    \n  \n  \n    \n      0\n      LGGNEQVTR\n      RT-pep a\n      -24.92\n      \n      \n      9\n      0.000000\n      1\n      0.997722\n    \n    \n      1\n      GAGSSEPVTGLDAK\n      RT-pep b\n      0.00\n      \n      \n      14\n      0.199488\n      1\n      0.997216\n    \n    \n      2\n      VEATFGVDESNAK\n      RT-pep c\n      12.39\n      \n      \n      13\n      0.298671\n      1\n      0.996552\n    \n    \n      3\n      YILAGVENSK\n      RT-pep d\n      19.79\n      \n      \n      10\n      0.357909\n      1\n      0.997443\n    \n    \n      4\n      TPVISGGPYEYR\n      RT-pep e\n      28.71\n      \n      \n      12\n      0.429315\n      1\n      0.996104\n    \n    \n      5\n      TPVITGAPYEYR\n      RT-pep f\n      33.38\n      \n      \n      12\n      0.466699\n      1\n      0.995777\n    \n    \n      6\n      DGLDAASYYAPVR\n      RT-pep g\n      42.26\n      \n      \n      13\n      0.537784\n      0\n      0.003511\n    \n    \n      7\n      ADVTPADFSEWSK\n      RT-pep h\n      54.62\n      \n      \n      13\n      0.636728\n      0\n      0.004135\n    \n    \n      8\n      GTFIIDPGGVIR\n      RT-pep i\n      70.52\n      \n      \n      12\n      0.764009\n      0\n      0.004020\n    \n    \n      9\n      GTFIIDPAAVIR\n      RT-pep k\n      87.23\n      \n      \n      12\n      0.897775\n      0\n      0.003701\n    \n    \n      10\n      LFLQFGAQGSPFLK\n      RT-pep l\n      100.00\n      \n      \n      14\n      1.000000\n      0\n      0.003674"
  },
  {
    "objectID": "model/model.generic_property_prediction.html#binary-classification-models-for-given-amino-acid-sequence-and-site-specific-ptms",
    "href": "model/model.generic_property_prediction.html#binary-classification-models-for-given-amino-acid-sequence-and-site-specific-ptms",
    "title": "Generic Property Prediction",
    "section": "Binary classification models for given amino acid sequence and site-specific PTMs",
    "text": "Binary classification models for given amino acid sequence and site-specific PTMs\n\n\nModelInterface_for_Generic_ModAASeq_BinaryClassification\n\n ModelInterface_for_Generic_ModAASeq_BinaryClassification (dropout=0.1,\n                                                           model_class:tor\n                                                           ch.nn.modules.m\n                                                           odule.Module=<c\n                                                           lass '__main__.\n                                                           Model_for_Gener\n                                                           ic_ModAASeq_Bin\n                                                           aryClassificati\n                                                           on_LSTM'>, devi\n                                                           ce:str='gpu',\n                                                           **kwargs)\n\nProvides standardized methods to interact with ml models. Inherit into new class and override the abstract (i.e. not implemented) methods.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndropout\nfloat\n0.1\n\n\n\nmodel_class\nModule\nModel_for_Generic_ModAASeq_BinaryClassification_LSTM\nmodel defined above\n\n\ndevice\nstr\ngpu\n\n\n\nkwargs\n\n\n\n\n\n\n\n\n\nModel_for_Generic_ModAASeq_BinaryClassification_Transformer\n\n Model_for_Generic_ModAASeq_BinaryClassification_Transformer\n                                                              (hidden_dim=\n                                                              256,\n                                                              nlayers=4, o\n                                                              utput_attent\n                                                              ions=False,\n                                                              dropout=0.1,\n                                                              **kwargs)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\n\nModel_for_Generic_ModAASeq_BinaryClassification_LSTM\n\n Model_for_Generic_ModAASeq_BinaryClassification_LSTM (hidden_dim=256,\n                                                       n_lstm_layers=4,\n                                                       dropout=0.1,\n                                                       **kwargs)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\nExamples\n\ndef create_example_input_dataframe_classification_rt():\n    rt_df = create_example_input_dataframe_normalized_irt()\n    rt_df['is_in_first_half_of_column'] = 0\n    rt_df.loc[:5,'is_in_first_half_of_column']=1\n    return rt_df\n\n\nA sequence classification model using Model_for_Generic_ModAASeq_BinaryClassification_LSTM\n\nexample_df = create_example_input_dataframe_classification_rt()\n\n#initialize the modelinterface, specify which of the models to use\nmodel = ModelInterface_for_Generic_ModAASeq_BinaryClassification(\n    model_class=Model_for_Generic_ModAASeq_BinaryClassification_LSTM\n)\n# specify the name of the column you want to use for traning\nmodel.target_column_to_train = 'is_in_first_half_of_column' \nmodel.target_column_to_predict = 'predicted_will_be_in_first_half_of_column'\nmodel.train(example_df, epoch=20)\nmodel.predict(example_df)\n\n\n\n\n\n  \n    \n      \n      sequence\n      pep_name\n      irt\n      mods\n      mod_sites\n      nAA\n      normalized_irt\n      is_in_first_half_of_column\n      predicted_will_be_in_first_half_of_column\n    \n  \n  \n    \n      0\n      LGGNEQVTR\n      RT-pep a\n      -24.92\n      \n      \n      9\n      0.000000\n      1\n      0.996521\n    \n    \n      1\n      GAGSSEPVTGLDAK\n      RT-pep b\n      0.00\n      \n      \n      14\n      0.199488\n      1\n      0.996062\n    \n    \n      2\n      VEATFGVDESNAK\n      RT-pep c\n      12.39\n      \n      \n      13\n      0.298671\n      1\n      0.996103\n    \n    \n      3\n      YILAGVENSK\n      RT-pep d\n      19.79\n      \n      \n      10\n      0.357909\n      1\n      0.996884\n    \n    \n      4\n      TPVISGGPYEYR\n      RT-pep e\n      28.71\n      \n      \n      12\n      0.429315\n      1\n      0.996284\n    \n    \n      5\n      TPVITGAPYEYR\n      RT-pep f\n      33.38\n      \n      \n      12\n      0.466699\n      1\n      0.993848\n    \n    \n      6\n      DGLDAASYYAPVR\n      RT-pep g\n      42.26\n      \n      \n      13\n      0.537784\n      0\n      0.406263\n    \n    \n      7\n      ADVTPADFSEWSK\n      RT-pep h\n      54.62\n      \n      \n      13\n      0.636728\n      0\n      0.407196\n    \n    \n      8\n      GTFIIDPGGVIR\n      RT-pep i\n      70.52\n      \n      \n      12\n      0.764009\n      0\n      0.402498\n    \n    \n      9\n      GTFIIDPAAVIR\n      RT-pep k\n      87.23\n      \n      \n      12\n      0.897775\n      0\n      0.397870\n    \n    \n      10\n      LFLQFGAQGSPFLK\n      RT-pep l\n      100.00\n      \n      \n      14\n      1.000000\n      0\n      0.397521\n    \n  \n\n\n\n\n\n\nA sequence classification model using Model_for_Generic_ModAASeq_BinaryClassification_Transformer\n\nexample_df = create_example_input_dataframe_classification_rt()\n\n#initialize the modelinterface, specify which of the models to use\nmodel = ModelInterface_for_Generic_ModAASeq_BinaryClassification(\n    model_class=Model_for_Generic_ModAASeq_BinaryClassification_Transformer\n)\n# specify the name of the column you want to use for traning\nmodel.target_column_to_train = 'is_in_first_half_of_column' \nmodel.target_column_to_predict = 'predicted_will_be_in_first_half_of_column'\nmodel.train(example_df, epoch=20)\nmodel.predict(example_df)\n\n\n\n\n\n  \n    \n      \n      sequence\n      pep_name\n      irt\n      mods\n      mod_sites\n      nAA\n      normalized_irt\n      is_in_first_half_of_column\n      predicted_will_be_in_first_half_of_column\n    \n  \n  \n    \n      0\n      LGGNEQVTR\n      RT-pep a\n      -24.92\n      \n      \n      9\n      0.000000\n      1\n      0.996638\n    \n    \n      1\n      GAGSSEPVTGLDAK\n      RT-pep b\n      0.00\n      \n      \n      14\n      0.199488\n      1\n      0.995580\n    \n    \n      2\n      VEATFGVDESNAK\n      RT-pep c\n      12.39\n      \n      \n      13\n      0.298671\n      1\n      0.995562\n    \n    \n      3\n      YILAGVENSK\n      RT-pep d\n      19.79\n      \n      \n      10\n      0.357909\n      1\n      0.996606\n    \n    \n      4\n      TPVISGGPYEYR\n      RT-pep e\n      28.71\n      \n      \n      12\n      0.429315\n      1\n      0.995767\n    \n    \n      5\n      TPVITGAPYEYR\n      RT-pep f\n      33.38\n      \n      \n      12\n      0.466699\n      1\n      0.995354\n    \n    \n      6\n      DGLDAASYYAPVR\n      RT-pep g\n      42.26\n      \n      \n      13\n      0.537784\n      0\n      0.003368\n    \n    \n      7\n      ADVTPADFSEWSK\n      RT-pep h\n      54.62\n      \n      \n      13\n      0.636728\n      0\n      0.003934\n    \n    \n      8\n      GTFIIDPGGVIR\n      RT-pep i\n      70.52\n      \n      \n      12\n      0.764009\n      0\n      0.002995\n    \n    \n      9\n      GTFIIDPAAVIR\n      RT-pep k\n      87.23\n      \n      \n      12\n      0.897775\n      0\n      0.002972\n    \n    \n      10\n      LFLQFGAQGSPFLK\n      RT-pep l\n      100.00\n      \n      \n      14\n      1.000000\n      0\n      0.002998"
  },
  {
    "objectID": "model/model.featurize.html",
    "href": "model/model.featurize.html",
    "title": "Functionalities for featurization/tensorization",
    "section": "",
    "text": "get_all_mod_features\n\n get_all_mod_features ()\n\n\nMOD_TO_FEATURE['Phospho@S']\n\narray([0., 1., 0., 3., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n       0., 0., 0., 0., 0., 0., 0.])\n\n\n\n\n\nparse_mod_feature\n\n parse_mod_feature (nAA:int, mod_names:List[str], mod_sites:List[int])\n\nGet modification feature of a given peptide (len=nAA). Note that site=0 is for peptide N-term modification, site=1 is for peptide C-term modification, and 1<=site<=nAA is for residue modifications on the peptide. Args: nAA (int): the lenght of the peptide sequence mod_names (List[str]): the modification names mod_sites (List[str]): the modification sites corresponding to mod_names on the peptide Returns: np.array: 2-D feature array with shape (nAA+2,mod_feature_size)\n\n\n\nget_batch_mod_feature\n\n get_batch_mod_feature (batch_df:pandas.core.frame.DataFrame)\n\nArgs: batch_df (pd.DataFrame): dataframe with ‘sequence’, ‘mods’, ‘mod_sites’ and ‘nAA’ columns. All sequence lengths must be the same, meaning that nAA values must be equal. Returns: np.array: 3-D tensor with shape (batch_size, nAA+2, mod_feature_size)\n\n\n\nget_ascii_indices\n\n get_ascii_indices (seq_array:Union[List,numpy.ndarray])\n\nConvert peptide sequences into ASCII code array. The values are from 0 to 127. Zeros are padded into the N- and C-term for each sequence.\nArgs: seq_array (Union[List,np.ndarray]): list or 1-D array of sequences. Returns: np.array: 2-D np.int32 array with the shape (len(seq_array), max seq length+2). For the the sequence whose length is shorter than max seq length, zeros are padded to the missing values.\n\n\n\nget_batch_aa_indices\n\n get_batch_aa_indices (seq_array:Union[List,numpy.ndarray])\n\nConvert peptide sequences into AA ID array. ID=0 is reserved for masking, so ID of ‘A’ is 1, ID of ‘B’ is 2, …, ID of ‘Z’ is 26 (maximum). Zeros are padded into the N- and C-term for each sequence.\nArgs: seq_array (Union[List,np.ndarray]): list or 1-D array of sequences with the same length Returns: np.array: 2-D np.int32 array with the shape (len(seq_array), len(seq_array[0])+2). Zeros is padded into the N- and C-term of each sequence, so the 1st-D is len(seq_array[0])+2.\n\n\n\nparse_instrument_indices\n\n parse_instrument_indices (instrument_list)"
  },
  {
    "objectID": "model/model.ms2.html",
    "href": "model/model.ms2.html",
    "title": "pDeepModel for MS/MS prediction",
    "section": "",
    "text": "ModelMS2Transformer\n\n ModelMS2Transformer (num_frag_types, num_modloss_types=0,\n                      mask_modloss=True, dropout=0.1, nlayers=4,\n                      hidden=256, **kwargs)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\n\nModelMS2Bert\n\n ModelMS2Bert (num_frag_types, num_modloss_types=0, mask_modloss=True,\n               dropout=0.1, nlayers=4, hidden=256,\n               output_attentions=False, **kwargs)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\n\nModelMS2pDeep\n\n ModelMS2pDeep (num_frag_types, num_modloss_types=0, mask_modloss=True,\n                dropout=0.1, **kwargs)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\n\nIntenAwareLoss\n\n IntenAwareLoss (base_weight=0.2)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\n\npDeepModel\n\n pDeepModel (charged_frag_types=['b_z1', 'b_z2', 'y_z1', 'y_z2',\n             'b_modloss_z1', 'b_modloss_z2', 'y_modloss_z1',\n             'y_modloss_z2'], dropout=0.1, mask_modloss=True,\n             modloss_type='modloss',\n             model_class:torch.nn.modules.module.Module=<class\n             '__main__.ModelMS2Bert'>, device:str='gpu', **kwargs)\n\nProvides standardized methods to interact with ml models. Inherit into new class and override the abstract (i.e. not implemented) methods.\n\n\n\nnormalize_training_intensities\n\n normalize_training_intensities (train_df:pandas.core.frame.DataFrame,\n                                 frag_intensity_df:pandas.core.frame.DataF\n                                 rame)\n\nNormalize the intensities to 0-1 values for MS2 model training.\nArgs: train_df (pd.DataFrame): training psm dataframe frag_intensity_df (pd.DataFrame): training intensity dataframe\nReturns: pd.DataFrame: normalized training psm dataframe pd.DataFrame: normalized training intensity dataframe\n\n\n\ncalc_ms2_similarity\n\n calc_ms2_similarity (psm_df:pandas.core.frame.DataFrame,\n                      predict_intensity_df:pandas.core.frame.DataFrame,\n                      fragment_intensity_df:pandas.core.frame.DataFrame,\n                      charged_frag_types:List=None, metrics=['PCC', 'COS',\n                      'SA', 'SPC'], GPU=True, batch_size=10240,\n                      verbose=False, spc_top_k=0)\n\n\n\n\nadd_cutoff_metric\n\n add_cutoff_metric (metrics_describ, metrics_df, thres=0.9)\n\n\n\n\nspearman_correlation\n\n spearman_correlation (x:torch.Tensor, y:torch.Tensor, device)\n\nCompute spearman correlation between 2 batches of 1-D tensors Args: x: Shape (Batch, n) y: Shape (Batch, n)\n\n\n\nspectral_angle\n\n spectral_angle (cos)\n\n\n\n\npearson_correlation\n\n pearson_correlation (x, y)\n\nCompute pearson correlation between 2 batches of 1-D tensors Args: x: Shape (Batch, n) y: Shape (Batch, n)\n\n\nExamples\n\n\nTrain an MSMS model\n\n\nPredict from the model\n\n\nMetrics"
  },
  {
    "objectID": "model/model.building_block.html",
    "href": "model/model.building_block.html",
    "title": "NN Building Block",
    "section": "",
    "text": "The building block module specifies the architectures of the core neural networks used in PeptDeep.\nAll networks are based on the PyTorch package by subclassing torch.nn.Module, which is the base class for all neural networks. To implement the Transformer-network, the HuggingFace transformers package is used, which allows to specify transformer networks in Pytorch."
  },
  {
    "objectID": "model/model.building_block.html#variables",
    "href": "model/model.building_block.html#variables",
    "title": "NN Building Block",
    "section": "Variables",
    "text": "Variables"
  },
  {
    "objectID": "model/model.building_block.html#utility-functions",
    "href": "model/model.building_block.html#utility-functions",
    "title": "NN Building Block",
    "section": "Utility Functions",
    "text": "Utility Functions\n\nEmbeddings\nBasic embeddings or encodings of inputs such as AA sequence or modification state\n\n\n\ninstrument_embedding\n\n instrument_embedding (hidden_size)\n\n\n\n\naa_one_hot\n\n aa_one_hot (aa_indices, *cat_others)\n\n\n\n\nascii_embedding\n\n ascii_embedding (hidden_size)\n\n\n\n\naa_embedding\n\n aa_embedding (hidden_size)\n\n\n\nInitial states\nGenerates tensors defining the initial (hidden) states of the elements in the input sequence\n\n\n\nxavier_param\n\n xavier_param (*shape)\n\n\n\n\nzero_param\n\n zero_param (*shape)"
  },
  {
    "objectID": "model/model.building_block.html#networks",
    "href": "model/model.building_block.html#networks",
    "title": "NN Building Block",
    "section": "Networks",
    "text": "Networks\n\nNetworks for sequences\nThe seq networks take the sequence and possible accompanying information such as charge state or modification and apply neural network transformations.\n\n\n\nSeqCNN\n\n SeqCNN (embedding_hidden)\n\nExtract sequence features using torch.nn.Conv1D with different kernel sizes (1(residue connection),3,5,7), and then concatenate the outputs of these Conv1Ds. The Output dim is 4*embedding_hidden.\n\n\n\nSeqCNN_MultiKernel\n\n SeqCNN_MultiKernel (out_features:int)\n\nExtract sequence features using torch.nn.Conv1D with different kernel sizes (1(residue connection),3,5,7), and then concatenate the outputs of these Conv1Ds.\n\nPyTorch Built-in Transformers (for test only)\n\n\n\n\nHidden_Transformer\n\n Hidden_Transformer (hidden, hidden_expand=4, nheads=8, nlayers=4,\n                     dropout=0.1)\n\nTransformer NN based on pytorch’s built-in TransformerLayer class\n\n\n\nSeq_Transformer\n\n Seq_Transformer (in_features, hidden_features, nheads=8, nlayers=2,\n                  dropout=0.1)\n\nUsing PyTorch built-in Transformer layers\n\nHuggingFace Transformers\n\n\n\n\nHFace_Transformer_with_PositionalEncoder\n\n HFace_Transformer_with_PositionalEncoder (hidden_dim:int,\n                                           hidden_expand=4, nheads=8,\n                                           nlayers=4, dropout=0.1,\n                                           output_attentions=False,\n                                           max_len=200)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\n\nHidden_HFace_Transformer\n\n Hidden_HFace_Transformer (hidden_dim, hidden_expand=4, nheads=8,\n                           nlayers=4, dropout=0.1,\n                           output_attentions=False)\n\nTransformer NN based on HuggingFace’s BertEncoder class\n\n\n\nSeqLSTM\n\n SeqLSTM (in_features, out_features, rnn_layer=2, bidirectional=True)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\n\nSeqGRU\n\n SeqGRU (in_features, out_features, rnn_layer=2, bidirectional=True)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\nLinear Seq Transformations\nTakes in a sequence and applies a linear transformation on it\n\n\n\n\nSeqAttentionSum\n\n SeqAttentionSum (in_features)\n\napply linear transformation and tensor rescaling with softmax\n\nPositional Encoding and Embedding\n\n\n\n\nPositionalEmbedding\n\n PositionalEmbedding (out_features=128, max_len=200)\n\ntransform sequence with the standard embedding function\n\n\n\nPositionalEncoding\n\n PositionalEncoding (out_features=128, max_len=200)\n\ntransform sequence input into a positional representation\n\n\nInput Networks\nThe ‘Input’ classes represent the input layers of the networks, meaning they interact directly with the (formatted) features such as the peptide sequence, the charge state, the modifications or the collision energy\n\nLinear input transformations and embeddings.\nPerforming embedding and linear operations on the input\n\n\n\n\nInput_AA_Mod_Charge_PositionalEncoding\n\n Input_AA_Mod_Charge_PositionalEncoding (out_features, max_len=200)\n\nEmbed AA (128 ASCII codes), modification, and charge state\n\n\n\nInput_AA_Mod_PositionalEncoding\n\n Input_AA_Mod_PositionalEncoding (out_features, max_len=200)\n\nEncodes AA (ASCII codes) and modification vector\n\n\n\nInput_26AA_Mod_PositionalEncoding\n\n Input_26AA_Mod_PositionalEncoding (out_features, max_len=200)\n\nEncodes AA (26 AA letters) and modification vector\n\n\n\nMod_Embedding\n\n Mod_Embedding (out_features)\n\nEncodes the modification vector in a single layer feed forward network\n\n\n\nAA_Mod_Embedding\n\n AA_Mod_Embedding (out_features, mod_feature_size=8)\n\nConcatenates the AA (128 ASCII codes) embedding with the modifcation vector\n\n\n\nMod_Embedding_FixFirstK\n\n Mod_Embedding_FixFirstK (out_features)\n\nEncodes the modification vector in a single layer feed forward network, but not transforming the first k features\n\n\n\nMeta_Embedding\n\n Meta_Embedding (out_features)\n\nEncodes Charge state, Normalized Collision Energy (NCE) and Instrument for a given spectrum into a ‘meta’ single layer network\n\nLSTM\nApplying LSTMs to the input\n\n\n\n\nInput_26AA_Mod_Charge_LSTM\n\n Input_26AA_Mod_Charge_LSTM (out_features)\n\nApplies a LSTM network to a AA (26 AA letters) sequence and modifications, and concatenates with charge state information\n\n\n\nInput_26AA_Mod_Meta_LSTM\n\n Input_26AA_Mod_Meta_LSTM (out_features)\n\nApplies a LSTM network to a AA (26 AA letters) sequence and modifications, and concatenates with ‘meta’ information (charge, nce, instrument_indices)\n\n\n\nInput_26AA_Mod_LSTM\n\n Input_26AA_Mod_LSTM (out_features, n_lstm_layers=1)\n\nApplies an LSTM network to a AA (26 AA letters) sequence & modifications\n\n\nComplex Seq Layers (or Output Layers)\nThe ‘Output’ classes represent the output layers of the networks, meaning they take the hidden layer of a network as input, transform it into the output such as a spectrum, ccs value, rt\n\n\n\nSeq_Meta_Linear\n\n Seq_Meta_Linear (in_features, out_features)\n\ntakes a hidden linear which processed the ‘meta’ information of NCE, Instrument, Charge\n\n\n\nSeq_Meta_LSTM\n\n Seq_Meta_LSTM (in_features, out_features)\n\ntakes a hidden layer which processes the hidden tensor as well as the ‘meta’ information of NCE, Instrument, Charge\n\n\nEncoders\nThe encoder classes transform the features into a learned representation. Within the encoder, the Input.. classes are used to transform the features into a network representation. Subsequently, Convolutional Neural Networks (CNNs) and/or Long Short-Term Memory (LSTM) Networks and/or Linear transformations are applied to the data.\n\n\n\nEncoder_26AA_Mod_Charge_CNN_LSTM_AttnSum\n\n Encoder_26AA_Mod_Charge_CNN_LSTM_AttnSum (out_features)\n\nEncode AAs (26 AA letters), modifications and charge by transformers, and then by ‘SeqAttentionSum’\n\n\n\nEncoder_AA_Mod_Charge_Transformer_AttnSum\n\n Encoder_AA_Mod_Charge_Transformer_AttnSum (out_features, dropout=0.1,\n                                            nlayers=4,\n                                            output_attentions=False)\n\nEncode AAs (128 ASCII codes), modifications and charge by transformers, and then by ‘SeqAttentionSum’\n\n\n\nEncoder_AA_Mod_Charge_Transformer\n\n Encoder_AA_Mod_Charge_Transformer (out_features, dropout=0.1, nlayers=4,\n                                    output_attentions=False)\n\nEncode AAs (128 ASCII codes), modifications and charge by transformers.\n\n\n\nEncoder_AA_Mod_Transformer_AttnSum\n\n Encoder_AA_Mod_Transformer_AttnSum (out_features, dropout=0.1, nlayers=4,\n                                     output_attentions=False)\n\nEncode AAs (128 ASCII codes) and modifications by transformers.\n\n\n\nEncoder_AA_Mod_Transformer\n\n Encoder_AA_Mod_Transformer (out_features, dropout=0.1, nlayers=4,\n                             output_attentions=False)\n\nAAs (128 ASCII codes) and modifications embedded by CNN and LSTM layers, then encoded by ‘SeqAttentionSum’.\n\n\n\nEncoder_AA_Mod_CNN_LSTM_AttnSum\n\n Encoder_AA_Mod_CNN_LSTM_AttnSum (out_features, n_lstm_layers=2)\n\nEncode AAs (128 ASCII codes) and modifications by CNN and LSTM layers, and then by ‘SeqAttentionSum’.\n\n\n\nEncoder_26AA_Mod_CNN_LSTM_AttnSum\n\n Encoder_26AA_Mod_CNN_LSTM_AttnSum (out_features, n_lstm_layers=2)\n\nEncode AAs (26 AA letters) and modifications by CNN and LSTM layers, then by ‘SeqAttentionSum’.\n\n\n\nEncoder_26AA_Mod_CNN_LSTM\n\n Encoder_26AA_Mod_CNN_LSTM (out_features, n_lstm_layers=1)\n\nEncode AAs (26 AA letters) and modifications by CNN and LSTM layers\n\n\n\nEncoder_26AA_Mod_LSTM\n\n Encoder_26AA_Mod_LSTM (out_features, n_lstm_layers=1)\n\nTwo LSTM layers on AA (26 AA letters) and modifications.\n\n\nDecoders\n\n\n\nDecoder_GRU\n\n Decoder_GRU (in_features, out_features)\n\nDecode with GRU\n\n\n\nDecoder_LSTM\n\n Decoder_LSTM (in_features, out_features)\n\nDecode with LSTM\n\n\n\nDecoder_Linear\n\n Decoder_Linear (in_features, out_features)\n\nDecode w linear NN"
  },
  {
    "objectID": "model/model.model_interface.html",
    "href": "model/model.model_interface.html",
    "title": "Model Interface",
    "section": "",
    "text": "This notebook mainly defines the basic interface that is used to interact with the deep learning models. Its ‘public’ functions are intended to stay untouched over the project, while the specific workings of the interface can be changed (i.e. programming polymorphism concept). For example, models can always be loaded with the load() function and details of the loading can be changed by inheriting the interface and changing the functions that load() calls. More details are given below."
  },
  {
    "objectID": "model/model.model_interface.html#imports",
    "href": "model/model.model_interface.html#imports",
    "title": "Model Interface",
    "section": "Imports",
    "text": "Imports"
  },
  {
    "objectID": "model/model.model_interface.html#utility-functions",
    "href": "model/model.model_interface.html#utility-functions",
    "title": "Model Interface",
    "section": "Utility functions",
    "text": "Utility functions\n\n\nappend_nAA_column_if_missing\n\n append_nAA_column_if_missing (precursor_df)\n\nAppend a column containing the number of Amino Acids\n\n\n\nget_cosine_schedule_with_warmup\n\n get_cosine_schedule_with_warmup (optimizer, num_warmup_steps,\n                                  num_training_steps, num_cycles=0.5,\n                                  last_epoch=-1)\n\nCreate a schedule with a learning rate that decreases following the values of the cosine function between 0 and pi * cycles after a warmup period during which it increases linearly between 0 and 1."
  },
  {
    "objectID": "model/model.model_interface.html#interface-class",
    "href": "model/model.model_interface.html#interface-class",
    "title": "Model Interface",
    "section": "Interface Class",
    "text": "Interface Class\nThe ModelInterface below is intended to provide a standardized way to handle deep learning models. It does not contain the PyTorch-based models themselves, but provides methods to load(), save(), build(), train() and predict() new models. These methods are intended to stay unchanged. To adapt the interface to a new usecase, we inherit the interface in a new class and re-implement the relevant method _get_features_from_batch_df(). Sometimes we also need to re-implement _get_targets_from_batch_df() and _prepare_predict_data_df().\nThe interface will adapt the training and prediction procedures. The implementation below will automatically empty the GPU cache at the end of train() and predict() to save GPU memory.\nFor example, if we would like to design a new model for peptides with different purposes, for example RT prediction, we need to:\n\nDesign the pytorch model (class RTPrediction(torch.nn.Module):...).\nDesign the sub-class inherited from ModelInterface (class RTPredictionModel(ModelInterface):...).\nIn __init__ method, define self.target_column_to_train = \"detect_value\" and self.target_column_to_predict = \"predict_value\". Also define self._min_pred_value = some_value.\nRe-implement def _get_features_from_batch_df(self, batch_df): return self._get_aa_indice_features(batch_df) (default) to predict property for sequence. For modified sequence, use def _get_features_from_batch_df(self, batch_df): return self._get_aa_mod_features(batch_df).\nAt last, execute the model in a python script or a notebook:\n\nmodel = RTPredictionModel()\nmodel.build(model_class=RTPrediction)\ndf = ... # the training data\nmodel.train(df)\npred_df = model.predict(df)\nCheck out peptdeep.model.generic_property_prediction for details. peptdeep.model.rt.AlphaRTModel and peptdeep.model.ccs.AlphaCCSModel are also similar. MS2 prediction model is more complicated as the output value for a peptide is not a scalar value, see peptdeep.model.ms2.pDeepModel.\n\n\nModelInterface\n\n ModelInterface (device:str='gpu', **kwargs)\n\nProvides standardized methods to interact with ml models. Inherit into new class and override the abstract (i.e. not implemented) methods."
  },
  {
    "objectID": "model/model.model_interface.html#testing-the-apis",
    "href": "model/model.model_interface.html#testing-the-apis",
    "title": "Model Interface",
    "section": "Testing the APIs",
    "text": "Testing the APIs\nBuilding a model for peptide classification (e.g. detectability)\nFirst, design the torch.nn.Module (Transformer model)\n\nimport peptdeep.model.building_block as building_block\n\nclass Test_Bert(torch.nn.Module):\n    def __init__(self,\n        nlayers = 3,\n        input_dim = 128, #ascii code number\n        hidden_dim = 256,\n        dropout = 0.1\n    ):\n        \"\"\"\n        Model based on a transformer Architecture from \n        Huggingface's BertEncoder class.\n        \"\"\"\n        super().__init__()\n\n        self.dropout = torch.nn.Dropout(dropout)\n\n        self.input_nn =  torch.nn.Sequential(\n            torch.nn.Embedding(input_dim, hidden_dim),\n            building_block.PositionalEncoding(hidden_dim)\n        )\n        \n        self.hidden_nn = building_block.Hidden_HFace_Transformer(\n            hidden_dim, nlayers=nlayers, dropout=dropout\n        )\n\n        self.output_nn = torch.nn.Sequential(\n            building_block.SeqAttentionSum(hidden_dim),\n            torch.nn.PReLU(),\n            self.dropout,\n            torch.nn.Linear(hidden_dim, 1),\n            torch.nn.Sigmoid()\n        )\n\n    def forward(self, x):\n        x = self.dropout(self.input_nn(x))\n\n        x = self.hidden_nn(x)\n        x = self.dropout(x[0])\n\n        return self.output_nn(x).squeeze(1)\n\nSecond, implement the ModelInterface APIs\n\nclass Test_Model(ModelInterface):\n    def __init__(self, \n        dropout=0.1,\n        model_class:torch.nn.Module=Test_Bert, #model class defined above\n        device:str='gpu',\n        **kwargs,\n    ):\n        super().__init__(device=device)\n        self.build(\n            model_class,\n            dropout=dropout,\n            **kwargs\n        )\n        self.loss_func = torch.nn.BCELoss() # loss for binary classification\n        self.target_column_to_predict = 'predicted_prob'\n        self.target_column_to_train = 'detected_prob'\n\nLast, test the model\n\ndf = pd.DataFrame({\n    'sequence':['ABCD']*10,\n})\ndf['detected_prob'] = 1.0\n\nmodel = Test_Model()\nmodel.train(df, epoch=2)\nmodel.predict(df)\nassert 'predicted_prob' in df.columns\ndf\n\n\n\n\n\n  \n    \n      \n      sequence\n      detected_prob\n      nAA\n      predicted_prob\n    \n  \n  \n    \n      0\n      ABCD\n      1.0\n      4\n      0.781049\n    \n    \n      1\n      ABCD\n      1.0\n      4\n      0.781049\n    \n    \n      2\n      ABCD\n      1.0\n      4\n      0.781049\n    \n    \n      3\n      ABCD\n      1.0\n      4\n      0.781049\n    \n    \n      4\n      ABCD\n      1.0\n      4\n      0.781049\n    \n    \n      5\n      ABCD\n      1.0\n      4\n      0.781049\n    \n    \n      6\n      ABCD\n      1.0\n      4\n      0.781049\n    \n    \n      7\n      ABCD\n      1.0\n      4\n      0.781049\n    \n    \n      8\n      ABCD\n      1.0\n      4\n      0.781049\n    \n    \n      9\n      ABCD\n      1.0\n      4\n      0.781049\n    \n  \n\n\n\n\n\nTest build_from_py_codes()\n\nfrom peptdeep.model.ms2 import pDeepModel\nfrom peptdeep.pretrained_models import model_zip\nms2_model = pDeepModel()\nms2_model.build_from_py_codes(\n    model_zip, 'generic/ms2.pth.model.py', \n    include_model_params_yaml=True\n)\n\nms2_model.model\n\nModel(\n  (dropout): Dropout(p=0.1, inplace=False)\n  (input_nn): Input_AA_Mod_PositionalEncoding(\n    (mod_nn): Mod_Embedding_FixFirstK(\n      (nn): Linear(in_features=103, out_features=2, bias=False)\n    )\n    (aa_emb): Embedding(128, 240, padding_idx=0)\n    (pos_encoder): PositionalEncoding()\n  )\n  (meta_nn): Meta_Embedding(\n    (nn): Linear(in_features=9, out_features=7, bias=True)\n  )\n  (hidden_nn): Hidden_HFace_Transformer(\n    (bert): BertEncoder(\n      (layer): ModuleList(\n        (0): BertLayer(\n          (attention): BertAttention(\n            (self): BertSelfAttention(\n              (query): Linear(in_features=256, out_features=256, bias=True)\n              (key): Linear(in_features=256, out_features=256, bias=True)\n              (value): Linear(in_features=256, out_features=256, bias=True)\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n            (output): BertSelfOutput(\n              (dense): Linear(in_features=256, out_features=256, bias=True)\n              (LayerNorm): LayerNorm((256,), eps=1e-08, elementwise_affine=True)\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n          )\n          (intermediate): BertIntermediate(\n            (dense): Linear(in_features=256, out_features=1024, bias=True)\n          )\n          (output): BertOutput(\n            (dense): Linear(in_features=1024, out_features=256, bias=True)\n            (LayerNorm): LayerNorm((256,), eps=1e-08, elementwise_affine=True)\n            (dropout): Dropout(p=0.1, inplace=False)\n          )\n        )\n        (1): BertLayer(\n          (attention): BertAttention(\n            (self): BertSelfAttention(\n              (query): Linear(in_features=256, out_features=256, bias=True)\n              (key): Linear(in_features=256, out_features=256, bias=True)\n              (value): Linear(in_features=256, out_features=256, bias=True)\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n            (output): BertSelfOutput(\n              (dense): Linear(in_features=256, out_features=256, bias=True)\n              (LayerNorm): LayerNorm((256,), eps=1e-08, elementwise_affine=True)\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n          )\n          (intermediate): BertIntermediate(\n            (dense): Linear(in_features=256, out_features=1024, bias=True)\n          )\n          (output): BertOutput(\n            (dense): Linear(in_features=1024, out_features=256, bias=True)\n            (LayerNorm): LayerNorm((256,), eps=1e-08, elementwise_affine=True)\n            (dropout): Dropout(p=0.1, inplace=False)\n          )\n        )\n        (2): BertLayer(\n          (attention): BertAttention(\n            (self): BertSelfAttention(\n              (query): Linear(in_features=256, out_features=256, bias=True)\n              (key): Linear(in_features=256, out_features=256, bias=True)\n              (value): Linear(in_features=256, out_features=256, bias=True)\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n            (output): BertSelfOutput(\n              (dense): Linear(in_features=256, out_features=256, bias=True)\n              (LayerNorm): LayerNorm((256,), eps=1e-08, elementwise_affine=True)\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n          )\n          (intermediate): BertIntermediate(\n            (dense): Linear(in_features=256, out_features=1024, bias=True)\n          )\n          (output): BertOutput(\n            (dense): Linear(in_features=1024, out_features=256, bias=True)\n            (LayerNorm): LayerNorm((256,), eps=1e-08, elementwise_affine=True)\n            (dropout): Dropout(p=0.1, inplace=False)\n          )\n        )\n        (3): BertLayer(\n          (attention): BertAttention(\n            (self): BertSelfAttention(\n              (query): Linear(in_features=256, out_features=256, bias=True)\n              (key): Linear(in_features=256, out_features=256, bias=True)\n              (value): Linear(in_features=256, out_features=256, bias=True)\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n            (output): BertSelfOutput(\n              (dense): Linear(in_features=256, out_features=256, bias=True)\n              (LayerNorm): LayerNorm((256,), eps=1e-08, elementwise_affine=True)\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n          )\n          (intermediate): BertIntermediate(\n            (dense): Linear(in_features=256, out_features=1024, bias=True)\n          )\n          (output): BertOutput(\n            (dense): Linear(in_features=1024, out_features=256, bias=True)\n            (LayerNorm): LayerNorm((256,), eps=1e-08, elementwise_affine=True)\n            (dropout): Dropout(p=0.1, inplace=False)\n          )\n        )\n      )\n    )\n  )\n  (output_nn): Decoder_Linear(\n    (nn): Sequential(\n      (0): Linear(in_features=256, out_features=64, bias=True)\n      (1): PReLU(num_parameters=1)\n      (2): Linear(in_features=64, out_features=4, bias=True)\n    )\n  )\n  (modloss_nn): ModuleList(\n    (0): Hidden_HFace_Transformer(\n      (bert): BertEncoder(\n        (layer): ModuleList(\n          (0): BertLayer(\n            (attention): BertAttention(\n              (self): BertSelfAttention(\n                (query): Linear(in_features=256, out_features=256, bias=True)\n                (key): Linear(in_features=256, out_features=256, bias=True)\n                (value): Linear(in_features=256, out_features=256, bias=True)\n                (dropout): Dropout(p=0.1, inplace=False)\n              )\n              (output): BertSelfOutput(\n                (dense): Linear(in_features=256, out_features=256, bias=True)\n                (LayerNorm): LayerNorm((256,), eps=1e-08, elementwise_affine=True)\n                (dropout): Dropout(p=0.1, inplace=False)\n              )\n            )\n            (intermediate): BertIntermediate(\n              (dense): Linear(in_features=256, out_features=1024, bias=True)\n            )\n            (output): BertOutput(\n              (dense): Linear(in_features=1024, out_features=256, bias=True)\n              (LayerNorm): LayerNorm((256,), eps=1e-08, elementwise_affine=True)\n              (dropout): Dropout(p=0.1, inplace=False)\n            )\n          )\n        )\n      )\n    )\n    (1): Decoder_Linear(\n      (nn): Sequential(\n        (0): Linear(in_features=256, out_features=64, bias=True)\n        (1): PReLU(num_parameters=1)\n        (2): Linear(in_features=64, out_features=4, bias=True)\n      )\n    )\n  )\n)"
  },
  {
    "objectID": "model/test_predict_mp.html",
    "href": "model/test_predict_mp.html",
    "title": "Testing predict_mp()",
    "section": "",
    "text": "from peptdeep.model.rt import IRT_PEPTIDE_DF\nfrom peptdeep.model.model_shop import (\n    Model_for_Generic_AASeq_Regression_LSTM,\n    ModelInterface_for_Generic_AASeq_Regression\n)\nIRT_PEPTIDE_DF=IRT_PEPTIDE_DF.copy()\nIRT_PEPTIDE_DF['detected_property'] = (\n    IRT_PEPTIDE_DF.irt-IRT_PEPTIDE_DF.irt.min()\n)/(IRT_PEPTIDE_DF.irt.max()-IRT_PEPTIDE_DF.irt.min())\nmodel = ModelInterface_for_Generic_AASeq_Regression(\n    model_class=Model_for_Generic_AASeq_Regression_LSTM\n)\nmodel.train(IRT_PEPTIDE_DF, epoch=20)\n\nmodel.predict_mp(IRT_PEPTIDE_DF, mp_batch_size=3, process_num=2)\n\nPredicting with multiprocessing ...\n\n\n100%|██████████| 4/4 [00:05<00:00,  1.27s/it]\n\n\n\n\n\n\n  \n    \n      \n      sequence\n      pep_name\n      irt\n      mods\n      mod_sites\n      nAA\n      detected_property\n      predicted_property\n    \n  \n  \n    \n      0\n      LGGNEQVTR\n      RT-pep a\n      -24.92\n      \n      \n      9\n      0.000000\n      0.008388\n    \n    \n      1\n      GAGSSEPVTGLDAK\n      RT-pep b\n      0.00\n      \n      \n      14\n      0.199488\n      0.211036\n    \n    \n      2\n      VEATFGVDESNAK\n      RT-pep c\n      12.39\n      \n      \n      13\n      0.298671\n      0.255827\n    \n    \n      3\n      YILAGVENSK\n      RT-pep d\n      19.79\n      \n      \n      10\n      0.357909\n      0.363687\n    \n    \n      4\n      TPVISGGPYEYR\n      RT-pep e\n      28.71\n      \n      \n      12\n      0.429315\n      0.411612\n    \n    \n      5\n      TPVITGAPYEYR\n      RT-pep f\n      33.38\n      \n      \n      12\n      0.466699\n      0.459196\n    \n    \n      6\n      DGLDAASYYAPVR\n      RT-pep g\n      42.26\n      \n      \n      13\n      0.537784\n      0.535960\n    \n    \n      7\n      ADVTPADFSEWSK\n      RT-pep h\n      54.62\n      \n      \n      13\n      0.636728\n      0.586700\n    \n    \n      8\n      GTFIIDPGGVIR\n      RT-pep i\n      70.52\n      \n      \n      12\n      0.764009\n      0.716247\n    \n    \n      9\n      GTFIIDPAAVIR\n      RT-pep k\n      87.23\n      \n      \n      12\n      0.897775\n      0.850990\n    \n    \n      10\n      LFLQFGAQGSPFLK\n      RT-pep l\n      100.00\n      \n      \n      14\n      1.000000\n      0.949769"
  },
  {
    "objectID": "model/model.rt.html#constants",
    "href": "model/model.rt.html#constants",
    "title": "Retention Time Prediction Models",
    "section": "Constants",
    "text": "Constants\nirt peptides as reported by Escher et al."
  },
  {
    "objectID": "model/model.rt.html#model-definitions",
    "href": "model/model.rt.html#model-definitions",
    "title": "Retention Time Prediction Models",
    "section": "Model Definitions",
    "text": "Model Definitions\nIn the model definition classes, all layers of the model are defined, utilizing the “building blocks” defined in building_blocks.ipynb\n\nTransformer based model\n\n\n\nModel_RT_Bert\n\n Model_RT_Bert (dropout=0.1, nlayers=4, hidden=128,\n                output_attentions=False, **kwargs)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\nLSTM model\n\n\n\nModel_RT_LSTM_CNN\n\n Model_RT_LSTM_CNN (dropout=0.2)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool"
  },
  {
    "objectID": "model/model.rt.html#model-pipeline",
    "href": "model/model.rt.html#model-pipeline",
    "title": "Retention Time Prediction Models",
    "section": "Model Pipeline",
    "text": "Model Pipeline\nThe final model which is used to interact with the data is defined below, utilizing the ModelInterface class defined in model_interface.ipynb\n\n\nAlphaRTModel\n\n AlphaRTModel (dropout=0.1,\n               model_class:torch.nn.modules.module.Module=<class\n               '__main__.Model_RT_LSTM_CNN'>, device:str='gpu', **kwargs)\n\nProvides standardized methods to interact with ml models. Inherit into new class and override the abstract (i.e. not implemented) methods.\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndropout\nfloat\n0.1\n\n\n\nmodel_class\nModule\nModel_RT_LSTM_CNN\nmodel defined above\n\n\ndevice\nstr\ngpu\n\n\n\nkwargs"
  },
  {
    "objectID": "model/model.rt.html#unit-tests",
    "href": "model/model.rt.html#unit-tests",
    "title": "Retention Time Prediction Models",
    "section": "Unit Tests",
    "text": "Unit Tests\n\nSanity checks on simple cases"
  },
  {
    "objectID": "model/model.ccs.html",
    "href": "model/model.ccs.html",
    "title": "CCS model and interface",
    "section": "",
    "text": "Model_CCS_Bert\n\n Model_CCS_Bert (dropout=0.1, nlayers=4, hidden=128,\n                 output_attentions=False, **kwargs)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\n\nModel_CCS_LSTM\n\n Model_CCS_LSTM (dropout=0.1)\n\nBase class for all neural network modules.\nYour models should also subclass this class.\nModules can also contain other Modules, allowing to nest them in a tree structure. You can assign the submodules as regular attributes::\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass Model(nn.Module):\n    def __init__(self):\n        super(Model, self).__init__()\n        self.conv1 = nn.Conv2d(1, 20, 5)\n        self.conv2 = nn.Conv2d(20, 20, 5)\n\n    def forward(self, x):\n        x = F.relu(self.conv1(x))\n        return F.relu(self.conv2(x))\nSubmodules assigned in this way will be registered, and will have their parameters converted too when you call :meth:to, etc.\n:ivar training: Boolean represents whether this module is in training or evaluation mode. :vartype training: bool\n\n\n\nmobility_to_ccs_df_\n\n mobility_to_ccs_df_ (precursor_df:pandas.core.frame.DataFrame)\n\nAdd ‘ccs’ into precursor_df inplace\n\n\n\nccs_to_mobility_pred_df\n\n ccs_to_mobility_pred_df (precursor_df:pandas.core.frame.DataFrame)\n\nAdd ‘mobility_pred’ into precursor_df inplace\n\n\n\nAlphaCCSModel\n\n AlphaCCSModel (dropout=0.1,\n                model_class:torch.nn.modules.module.Module=<class\n                '__main__.Model_CCS_LSTM'>, device:str='gpu', **kwargs)\n\nProvides standardized methods to interact with ml models. Inherit into new class and override the abstract (i.e. not implemented) methods.\n\nmodel.get_parameter_num()\n\n713452\n\n\n\nmodel.model\n\nModel_CCS_LSTM(\n  (dropout): Dropout(p=0.1, inplace=False)\n  (ccs_encoder): Encoder_AA_Mod_Charge_CNN_LSTM_AttnSum(\n    (mod_nn): Mod_Embedding_FixFirstK(\n      (nn): Linear(in_features=103, out_features=2, bias=False)\n    )\n    (input_cnn): SeqCNN(\n      (cnn_short): Conv1d(36, 36, kernel_size=(3,), stride=(1,), padding=(1,))\n      (cnn_medium): Conv1d(36, 36, kernel_size=(5,), stride=(1,), padding=(2,))\n      (cnn_long): Conv1d(36, 36, kernel_size=(7,), stride=(1,), padding=(3,))\n    )\n    (hidden_nn): SeqLSTM(\n      (rnn): LSTM(144, 128, num_layers=2, batch_first=True, bidirectional=True)\n    )\n    (attn_sum): SeqAttentionSum(\n      (attn): Sequential(\n        (0): Linear(in_features=256, out_features=1, bias=False)\n        (1): Softmax(dim=1)\n      )\n    )\n  )\n  (ccs_decoder): Decoder_Linear(\n    (nn): Sequential(\n      (0): Linear(in_features=257, out_features=64, bias=True)\n      (1): PReLU(num_parameters=1)\n      (2): Linear(in_features=64, out_features=1, bias=True)\n    )\n  )\n)\n\n\n\nrepeat = 10\nprecursor_df = pd.DataFrame({\n    'sequence': ['AGHCEWQMKYR']*repeat,\n    'mods': ['Acetyl@Protein N-term;Carbamidomethyl@C;Oxidation@M']*repeat,\n    'mod_sites': ['0;4;8']*repeat,\n    'nAA': [11]*repeat,\n    'charge': [2]*repeat,\n    'ccs': [1]*repeat\n})\nprecursor_df\n\n\n\n\n\n  \n    \n      \n      sequence\n      mods\n      mod_sites\n      nAA\n      charge\n      ccs\n    \n  \n  \n    \n      0\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n    \n    \n      1\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n    \n    \n      2\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n    \n    \n      3\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n    \n    \n      4\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n    \n    \n      5\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n    \n    \n      6\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n    \n    \n      7\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n    \n    \n      8\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n    \n    \n      9\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n    \n  \n\n\n\n\n\nmodel.train(precursor_df, epoch=5)\n\n\nmodel.predict(precursor_df)\n\n\n\n\n\n  \n    \n      \n      sequence\n      mods\n      mod_sites\n      nAA\n      charge\n      ccs\n      ccs_pred\n    \n  \n  \n    \n      0\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n    \n    \n      1\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n    \n    \n      2\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n    \n    \n      3\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n    \n    \n      4\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n    \n    \n      5\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n    \n    \n      6\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n    \n    \n      7\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n    \n    \n      8\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n    \n    \n      9\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n    \n  \n\n\n\n\n\nmodel.ccs_to_mobility_pred(precursor_df)\n\n\n\n\n\n  \n    \n      \n      sequence\n      mods\n      mod_sites\n      nAA\n      charge\n      ccs\n      ccs_pred\n      precursor_mz\n      mobility_pred\n    \n  \n  \n    \n      0\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n      762.329553\n      0.000081\n    \n    \n      1\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n      762.329553\n      0.000081\n    \n    \n      2\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n      762.329553\n      0.000081\n    \n    \n      3\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n      762.329553\n      0.000081\n    \n    \n      4\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n      762.329553\n      0.000081\n    \n    \n      5\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n      762.329553\n      0.000081\n    \n    \n      6\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n      762.329553\n      0.000081\n    \n    \n      7\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n      762.329553\n      0.000081\n    \n    \n      8\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n      762.329553\n      0.000081\n    \n    \n      9\n      AGHCEWQMKYR\n      Acetyl@Protein N-term;Carbamidomethyl@C;Oxidat...\n      0;4;8\n      11\n      2\n      1\n      0.032652\n      762.329553\n      0.000081"
  },
  {
    "objectID": "pretrained_models.html",
    "href": "pretrained_models.html",
    "title": "Integrated functionalities for MS2/RT/CCS models",
    "section": "",
    "text": "peptdeep.pretrained_models handles the pretrained models, including downloading, installing, and loading the models."
  },
  {
    "objectID": "pretrained_models.html#downloading-and-installing-the-models",
    "href": "pretrained_models.html#downloading-and-installing-the-models",
    "title": "Integrated functionalities for MS2/RT/CCS models",
    "section": "1. Downloading and installing the models",
    "text": "1. Downloading and installing the models\nFor continuous model deployment, we uploaded several pretrained models (compressed as a ZIP file) onto a net disk. peptdeep will automatically download the ZIP file into global_settings['PEPTDEEP_HOME']/pretrained_models/pretrained_models.zip when importing peptdeep.pretrained_models. The models will be downloaded only once, if we would like to update them to the latest models, we can call download_models(overwrite=True)\n\n\ndownload_models\n\n download_models (url:str='https://github.com/MannLabs/alphapeptdeep/relea\n                  ses/download/pre-trained-models/pretrained_models.zip',\n                  overwrite=True)\n\n[summary]\nArgs: url (str, optional): remote or local path. Defaults to peptdeep.pretrained_models.model_url. overwrite (bool, optional): overwirte old model files. Defaults to True.\nRaises: FileNotFoundError: If remote url is not accessible.\n\n\n\nis_model_zip\n\n is_model_zip (downloaded_zip)"
  },
  {
    "objectID": "pretrained_models.html#loading-the-models",
    "href": "pretrained_models.html#loading-the-models",
    "title": "Integrated functionalities for MS2/RT/CCS models",
    "section": "2. Loading the models",
    "text": "2. Loading the models\npeptdeep provides a convenient APIs to load models from ZIP files.\nload_models() will load the generic models for unmodified peptides, load_phos_models() will load the phospho models. Note that MS2/CCS prediction models are the same for generic and phospho models because this model was trained on both generic and phospho peptides.\n\n\nload_models_by_model_type_in_zip\n\n load_models_by_model_type_in_zip (model_type_in_zip:str,\n                                   mask_modloss=True)\n\n\n\n\nload_models\n\n load_models (mask_modloss=True)\n\n\n\n\nload_phos_models\n\n load_phos_models (mask_modloss=True)\n\n\n\n\npsm_sampling_with_important_mods\n\n psm_sampling_with_important_mods (psm_df, n_sample, top_n_mods=10,\n                                   n_sample_each_mod=0,\n                                   uniform_sampling_column=None,\n                                   random_state=1337)\n\n\n\n\ncount_mods\n\n count_mods (psm_df)"
  },
  {
    "objectID": "pretrained_models.html#using-modelmanager",
    "href": "pretrained_models.html#using-modelmanager",
    "title": "Integrated functionalities for MS2/RT/CCS models",
    "section": "3. Using ModelManager",
    "text": "3. Using ModelManager\nFor users, ModelManager class is the only thing we need to manage models (loading, transfer learning, etc). According to different arguments, ModelManager::load_installed_models() will call load_models() or load_phos_models(). For external models, ModelManager::load_external_models() will load them by file path or file stream. Here is an example:\nfrom zipfile import ZipFile\n\nadmodel = ModelManager()\next_zip = 'external_models.zip' # model compressed in ZIP\nrt_model_path = '/path/to/rt.pth' # model as file path\nwith ZipFile(ext_zip) as model_zip:\n    with model_zip.open('generic/ms2.pth','r') as ms2_file:\n        admodel.load_external_models(ms2_model_file=ms2_file, rt_model_file=rt_model_path)\nTransfer learning for different models could also be done in ModelManager by using the given training dataframes.\n\n\nModelManager\n\n ModelManager (mask_modloss:bool=True, device:str='gpu',\n               mgr_settings:dict={'default_nce': 30.0,\n               'default_instrument': 'Lumos', 'mask_modloss': True,\n               'model_type': 'generic', 'model_choices': ['generic',\n               'phos', 'hla', 'digly'], 'external_ms2_model': '',\n               'external_rt_model': '', 'external_ccs_model': '',\n               'instrument_group': {'Lumos': 'Lumos', 'QE': 'QE',\n               'timsTOF': 'timsTOF', 'SciexTOF': 'SciexTOF', 'Fusion':\n               'Lumos', 'Eclipse': 'Lumos', 'Velos': 'Lumos', 'Elite':\n               'Lumos', 'OrbitrapTribrid': 'Lumos', 'ThermoTribrid':\n               'Lumos', 'QE+': 'QE', 'QEHF': 'QE', 'QEHFX': 'QE',\n               'Exploris': 'QE', 'Exploris480': 'QE', 'LUMOS': 'Lumos',\n               'TIMSTOF': 'timsTOF', 'SCIEXTOF': 'SciexTOF', 'FUSION':\n               'Lumos', 'ECLIPSE': 'Lumos', 'VELOS': 'Lumos', 'ELITE':\n               'Lumos', 'ORBITRAPTRIBRID': 'Lumos', 'THERMOTRIBRID':\n               'Lumos', 'EXPLORIS': 'QE', 'EXPLORIS480': 'QE'}, 'predict':\n               {'batch_size_ms2': 512, 'batch_size_rt_ccs': 1024,\n               'verbose': True, 'multiprocessing': True}, 'transfer':\n               {'model_output_folder': '', 'epoch_ms2': 20,\n               'warmup_epoch_ms2': 10, 'batch_size_ms2': 512, 'lr_ms2':\n               0.0001, 'epoch_rt_ccs': 40, 'warmup_epoch_rt_ccs': 10,\n               'batch_size_rt_ccs': 1024, 'lr_rt_ccs': 0.0001, 'verbose':\n               False, 'grid_nce_search': True, 'grid_nce_first': 15.0,\n               'grid_nce_last': 45.0, 'grid_nce_step': 3.0,\n               'grid_instrument': ['Lumos'], 'psm_type': 'alphapept',\n               'psm_type_choices': ['alphapept', 'pfind', 'maxquant',\n               'diann', 'speclib_tsv'], 'psm_files': [], 'ms_file_type':\n               'alphapept_hdf', 'ms_file_type_choices': ['alphapept_hdf',\n               'thermo_raw', 'mgf', 'mzml'], 'ms_files': [],\n               'psm_num_to_train_ms2': 100000000,\n               'psm_num_per_mod_to_train_ms2': 50,\n               'psm_num_to_train_rt_ccs': 100000000,\n               'psm_num_per_mod_to_train_rt_ccs': 50,\n               'top_n_mods_to_train': 10}})\n\nThe manager class to access MS2/RT/CCS models.\nArgs: mask_modloss (bool, optional): If modloss ions are masked to zeros in the ms2 model. modloss ions are mostly useful for phospho MS2 prediciton model. Defaults to :py:data:global_settings[‘model_mgr’][‘mask_modloss’]. device (str, optional): Device for DL models, could be ‘gpu’ (‘cuda’) or ‘cpu’. if device==‘gpu’ but no GPUs are detected, it will automatically switch to ‘cpu’. Defaults to ‘gpu’.\nAttributes: ms2_model (:py:class:peptdeep.model.ms2.pDeepModel): The MS2 prediction model. rt_model (:py:class:peptdeep.model.rt.AlphaRTModel): The RT prediction model. ccs_model (:py:class:peptdeep.model.ccs.AlphaCCSModel): The CCS prediciton model. psm_num_to_train_ms2 (int): Number of PSMs to train the MS2 model. Defaults to global_settings[‘model_mgr’][‘transfer’][‘psm_num_to_train_ms2’]. epoch_to_train_ms2 (int): Number of epoches to train the MS2 model. Defaults to global_settings[‘model_mgr’][‘transfer’][‘epoch_ms2’]. psm_num_to_train_rt_ccs (int): Number of PSMs to train RT/CCS model. Defaults to global_settings[‘model_mgr’][‘transfer’][‘psm_num_to_train_rt_ccs’]. epoch_to_train_rt_ccs (int): Number of epoches to train RT/CCS model. Defaults to global_settings[‘model_mgr’][‘transfer’][‘epoch_rt_ccs’]. nce (float): Default NCE value for a precursor_df without the ‘nce’ column. Defaults to global_settings[‘model_mgr’][‘default_nce’]. instrument (str): Default instrument type for a precursor_df without the ‘instrument’ column. Defaults to global_settings[‘model_mgr’][‘default_instrument’]. use_grid_nce_search (bool): If self.ms2_model uses :py:meth:peptdeep.model.ms2.pDeepModel.grid_nce_search to determine optimal NCE and instrument type. This will change self.nce and self.instrument values. Defaults to global_settings[‘model_mgr’][‘transfer’][‘grid_nce_search’].\n\n\n\nclear_error_modloss_intensities\n\n clear_error_modloss_intensities (fragment_mz_df, fragment_intensity_df)\n\n\nfrom peptdeep.model.rt import IRT_PEPTIDE_DF\nmodel_mgr.predict_rt(IRT_PEPTIDE_DF)\nmodel_mgr.rt_model.add_irt_column_to_precursor_df(IRT_PEPTIDE_DF)\n\n\n\n\n\n  \n    \n      \n      sequence\n      pep_name\n      irt\n      mods\n      mod_sites\n      nAA\n      rt_pred\n      rt_norm_pred\n      irt_pred\n    \n  \n  \n    \n      0\n      LGGNEQVTR\n      RT-pep a\n      -24.92\n      \n      \n      9\n      0.072804\n      0.072804\n      -28.148849\n    \n    \n      1\n      GAGSSEPVTGLDAK\n      RT-pep b\n      0.00\n      \n      \n      14\n      0.271196\n      0.271196\n      2.053492\n    \n    \n      2\n      VEATFGVDESNAK\n      RT-pep c\n      12.39\n      \n      \n      13\n      0.332649\n      0.332649\n      11.408902\n    \n    \n      3\n      YILAGVENSK\n      RT-pep d\n      19.79\n      \n      \n      10\n      0.400949\n      0.400949\n      21.806524\n    \n    \n      4\n      TPVISGGPYEYR\n      RT-pep e\n      28.71\n      \n      \n      12\n      0.438901\n      0.438901\n      27.584271\n    \n    \n      5\n      TPVITGAPYEYR\n      RT-pep f\n      33.38\n      \n      \n      12\n      0.489774\n      0.489774\n      35.328937\n    \n    \n      6\n      DGLDAASYYAPVR\n      RT-pep g\n      42.26\n      \n      \n      13\n      0.542729\n      0.542729\n      43.390475\n    \n    \n      7\n      ADVTPADFSEWSK\n      RT-pep h\n      54.62\n      \n      \n      13\n      0.609782\n      0.609782\n      53.598396\n    \n    \n      8\n      GTFIIDPGGVIR\n      RT-pep i\n      70.52\n      \n      \n      12\n      0.757164\n      0.757164\n      76.035216\n    \n    \n      9\n      GTFIIDPAAVIR\n      RT-pep k\n      87.23\n      \n      \n      12\n      0.846791\n      0.846791\n      89.679588\n    \n    \n      10\n      LFLQFGAQGSPFLK\n      RT-pep l\n      100.00\n      \n      \n      14\n      0.857061\n      0.857061\n      91.243048"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Index",
    "section": "",
    "text": "See readme.md for details."
  }
]